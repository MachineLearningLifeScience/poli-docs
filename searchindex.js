Search.setIndex({"docnames": ["_autosummary/poli", "_autosummary/poli.core", "_autosummary/poli.core.abstract_black_box", "_autosummary/poli.core.abstract_black_box.AbstractBlackBox", "_autosummary/poli.core.abstract_black_box.NegativeBlackBox", "_autosummary/poli.core.abstract_isolated_function", "_autosummary/poli.core.abstract_problem_factory", "_autosummary/poli.core.abstract_problem_factory.AbstractProblemFactory", "_autosummary/poli.core.abstract_problem_factory.MetaProblemFactory", "_autosummary/poli.core.black_box_information", "_autosummary/poli.core.chemistry", "_autosummary/poli.core.chemistry.tdc_black_box", "_autosummary/poli.core.chemistry.tdc_black_box.TDCBlackBox", "_autosummary/poli.core.chemistry.tdc_isolated_function", "_autosummary/poli.core.exceptions", "_autosummary/poli.core.exceptions.BudgetExhaustedException", "_autosummary/poli.core.exceptions.PoliException", "_autosummary/poli.core.multi_objective_black_box", "_autosummary/poli.core.multi_objective_black_box.MultiObjectiveBlackBox", "_autosummary/poli.core.problem", "_autosummary/poli.core.problem_setup_information", "_autosummary/poli.core.problem_setup_information.ProblemSetupInformation", "_autosummary/poli.core.proteins", "_autosummary/poli.core.proteins.foldx_black_box", "_autosummary/poli.core.proteins.foldx_black_box.FoldxBlackBox", "_autosummary/poli.core.proteins.foldx_isolated_function", "_autosummary/poli.core.registry", "_autosummary/poli.core.registry.delete_observer_run_script", "_autosummary/poli.core.registry.delete_problem", "_autosummary/poli.core.registry.get_problem_factories", "_autosummary/poli.core.registry.get_problems", "_autosummary/poli.core.registry.register_problem", "_autosummary/poli.core.registry.register_problem_from_repository", "_autosummary/poli.core.registry.set_observer", "_autosummary/poli.core.registry.set_observer_run_script", "_autosummary/poli.core.util", "_autosummary/poli.core.util.abstract_observer", "_autosummary/poli.core.util.abstract_observer.AbstractObserver", "_autosummary/poli.core.util.alignment", "_autosummary/poli.core.util.alignment.is_aligned", "_autosummary/poli.core.util.batch", "_autosummary/poli.core.util.batch.batch_input", "_autosummary/poli.core.util.batch.batch_input.batched", "_autosummary/poli.core.util.chemistry", "_autosummary/poli.core.util.chemistry.string_to_molecule", "_autosummary/poli.core.util.chemistry.string_to_molecule.selfies_to_molecules", "_autosummary/poli.core.util.chemistry.string_to_molecule.smiles_to_molecules", "_autosummary/poli.core.util.chemistry.string_to_molecule.strings_to_molecules", "_autosummary/poli.core.util.chemistry.string_to_molecule.translate_selfies_to_smiles", "_autosummary/poli.core.util.chemistry.string_to_molecule.translate_smiles_to_selfies", "_autosummary/poli.core.util.external_observer", "_autosummary/poli.core.util.external_observer.ExternalObserver", "_autosummary/poli.core.util.files", "_autosummary/poli.core.util.files.download_files_from_github", "_autosummary/poli.core.util.files.download_files_from_github.download_file_from_github_repository", "_autosummary/poli.core.util.files.download_files_from_github.get_sha_for_tag", "_autosummary/poli.core.util.files.integrity", "_autosummary/poli.core.util.files.integrity.compute_md5_from_filepath", "_autosummary/poli.core.util.inter_process_communication", "_autosummary/poli.core.util.inter_process_communication.process_wrapper", "_autosummary/poli.core.util.inter_process_communication.process_wrapper.ProcessWrapper", "_autosummary/poli.core.util.inter_process_communication.process_wrapper.get_connection", "_autosummary/poli.core.util.isolation", "_autosummary/poli.core.util.isolation.external_black_box", "_autosummary/poli.core.util.isolation.external_function", "_autosummary/poli.core.util.isolation.instancing", "_autosummary/poli.core.util.isolation.isolated_black_box", "_autosummary/poli.core.util.objective_management", "_autosummary/poli.core.util.objective_management.make_run_script", "_autosummary/poli.core.util.objective_management.make_run_script.make_observer_script", "_autosummary/poli.core.util.objective_management.make_run_script.make_run_script", "_autosummary/poli.core.util.observer_wrapper", "_autosummary/poli.core.util.observer_wrapper.start_observer_process", "_autosummary/poli.core.util.proteins", "_autosummary/poli.core.util.proteins.defaults", "_autosummary/poli.core.util.proteins.foldx", "_autosummary/poli.core.util.proteins.foldx.FoldxInterface", "_autosummary/poli.core.util.proteins.mutations", "_autosummary/poli.core.util.proteins.mutations.edits_between_strings", "_autosummary/poli.core.util.proteins.mutations.find_closest_wildtype_pdb_file_to_mutant", "_autosummary/poli.core.util.proteins.mutations.mutations_from_wildtype_residues_and_mutant", "_autosummary/poli.core.util.proteins.pdb_parsing", "_autosummary/poli.core.util.proteins.pdb_parsing.parse_pdb_as_residue_strings", "_autosummary/poli.core.util.proteins.pdb_parsing.parse_pdb_as_residues", "_autosummary/poli.core.util.proteins.pdb_parsing.parse_pdb_as_structure", "_autosummary/poli.core.util.proteins.rasp", "_autosummary/poli.core.util.proteins.rasp.inner_rasp", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.PrismData", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.cavity_model", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.helpers", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.run_pipeline", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.visualization", "_autosummary/poli.core.util.proteins.rasp.load_models", "_autosummary/poli.core.util.proteins.rasp.rasp_interface", "_autosummary/poli.core.util.seeding", "_autosummary/poli.core.util.seeding.seeding", "_autosummary/poli.core.util.seeding.seeding.seed_numpy", "_autosummary/poli.core.util.seeding.seeding.seed_python", "_autosummary/poli.objective", "_autosummary/poli.objective.dynamically_instantiate", "_autosummary/poli.objective.parse_factory_kwargs", "_autosummary/poli.objective.run", "_autosummary/poli.objective_factory", "_autosummary/poli.objective_factory.ExternalBlackBox", "_autosummary/poli.objective_factory.create", "_autosummary/poli.objective_factory.load_config", "_autosummary/poli.objective_factory.start", "_autosummary/poli.objective_repository", "_autosummary/poli.objective_repository.aloha", "_autosummary/poli.objective_repository.aloha.register", "_autosummary/poli.objective_repository.aloha.register.AlohaBlackBox", "_autosummary/poli.objective_repository.aloha.register.AlohaProblemFactory", "_autosummary/poli.objective_repository.dockstring", "_autosummary/poli.objective_repository.dockstring.information", "_autosummary/poli.objective_repository.dockstring.isolated_function", "_autosummary/poli.objective_repository.dockstring.register", "_autosummary/poli.objective_repository.dockstring.register.DockstringBlackBox", "_autosummary/poli.objective_repository.dockstring.register.DockstringProblemFactory", "_autosummary/poli.objective_repository.drd3_docking", "_autosummary/poli.objective_repository.drd3_docking.information", "_autosummary/poli.objective_repository.drd3_docking.isolated_function", "_autosummary/poli.objective_repository.drd3_docking.register", "_autosummary/poli.objective_repository.drd3_docking.register.DRD3BlackBox", "_autosummary/poli.objective_repository.drd3_docking.register.DRD3ProblemFactory", "_autosummary/poli.objective_repository.foldx_rfp_lambo", "_autosummary/poli.objective_repository.foldx_rfp_lambo.information", "_autosummary/poli.objective_repository.foldx_rfp_lambo.isolated_function", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.Config", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.RFPWrapper", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.RFPWrapperFactory", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.get_config", "_autosummary/poli.objective_repository.foldx_sasa", "_autosummary/poli.objective_repository.foldx_sasa.foldx_utils", "_autosummary/poli.objective_repository.foldx_sasa.information", "_autosummary/poli.objective_repository.foldx_sasa.isolated_function", "_autosummary/poli.objective_repository.foldx_sasa.register", "_autosummary/poli.objective_repository.foldx_sasa.register.FoldXSASABlackBox", "_autosummary/poli.objective_repository.foldx_sasa.register.FoldXSASAProblemFactory", "_autosummary/poli.objective_repository.foldx_stability", "_autosummary/poli.objective_repository.foldx_stability.foldx_utils", "_autosummary/poli.objective_repository.foldx_stability.information", "_autosummary/poli.objective_repository.foldx_stability.isolated_function", "_autosummary/poli.objective_repository.foldx_stability.register", "_autosummary/poli.objective_repository.foldx_stability.register.FoldXStabilityBlackBox", "_autosummary/poli.objective_repository.foldx_stability.register.FoldXStabilityProblemFactory", "_autosummary/poli.objective_repository.foldx_stability_and_sasa", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.information", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.isolated_function", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.register", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASABlackBox", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASAProblemFactory", "_autosummary/poli.objective_repository.gfp_cbas", "_autosummary/poli.objective_repository.gfp_cbas.abstract_vae_wrapper", "_autosummary/poli.objective_repository.gfp_cbas.abstract_vae_wrapper.AbstractVAEWrapper", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_aas_to_idx_array", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_idx_array_to_aas", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_mutations_to_sequence", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_argmax", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_balaji_predictions", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_experimental_X_y", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_gfp_X_y_aa", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_gfp_base_seq", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_samples", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_aa", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_aa_array", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_dna", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.partition_data", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.read_gfp_data", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.CBASVAEWrapper", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeDecoder", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeEncoder", "_autosummary/poli.objective_repository.gfp_cbas.gfp_gp", "_autosummary/poli.objective_repository.gfp_cbas.information", "_autosummary/poli.objective_repository.gfp_cbas.isolated_function", "_autosummary/poli.objective_repository.gfp_cbas.make_vae", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.BaseVAE", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.SimpleVAE", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.build_vae", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.identity_loss", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.summed_categorical_crossentropy", "_autosummary/poli.objective_repository.gfp_cbas.register", "_autosummary/poli.objective_repository.gfp_cbas.register.GFPCBasBlackBox", "_autosummary/poli.objective_repository.gfp_cbas.register.GFPCBasProblemFactory", "_autosummary/poli.objective_repository.gfp_select", "_autosummary/poli.objective_repository.gfp_select.information", "_autosummary/poli.objective_repository.gfp_select.isolated_function", "_autosummary/poli.objective_repository.gfp_select.register", "_autosummary/poli.objective_repository.gfp_select.register.GFPBlackBox", "_autosummary/poli.objective_repository.gfp_select.register.GFPSelectionProblemFactory", "_autosummary/poli.objective_repository.penalized_logp_lambo", "_autosummary/poli.objective_repository.penalized_logp_lambo.information", "_autosummary/poli.objective_repository.penalized_logp_lambo.isolated_function", "_autosummary/poli.objective_repository.penalized_logp_lambo.register", "_autosummary/poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboBlackBox", "_autosummary/poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboProblemFactory", "_autosummary/poli.objective_repository.rasp", "_autosummary/poli.objective_repository.rasp.information", "_autosummary/poli.objective_repository.rasp.isolated_function", "_autosummary/poli.objective_repository.rasp.register", "_autosummary/poli.objective_repository.rdkit_logp", "_autosummary/poli.objective_repository.rdkit_logp.information", "_autosummary/poli.objective_repository.rdkit_logp.register", "_autosummary/poli.objective_repository.rdkit_logp.register.LogPBlackBox", "_autosummary/poli.objective_repository.rdkit_logp.register.LogPProblemFactory", "_autosummary/poli.objective_repository.rdkit_qed", "_autosummary/poli.objective_repository.rdkit_qed.information", "_autosummary/poli.objective_repository.rdkit_qed.register", "_autosummary/poli.objective_repository.rdkit_qed.register.QEDBlackBox", "_autosummary/poli.objective_repository.rdkit_qed.register.QEDProblemFactory", "_autosummary/poli.objective_repository.rfp_foldx_stability_and_sasa", "_autosummary/poli.objective_repository.rfp_foldx_stability_and_sasa.information", "_autosummary/poli.objective_repository.rfp_foldx_stability_and_sasa.register", "_autosummary/poli.objective_repository.sa_tdc", "_autosummary/poli.objective_repository.sa_tdc.information", "_autosummary/poli.objective_repository.sa_tdc.isolated_function", "_autosummary/poli.objective_repository.sa_tdc.register", "_autosummary/poli.objective_repository.sa_tdc.register.SABlackBox", "_autosummary/poli.objective_repository.sa_tdc.register.SAProblemFactory", "_autosummary/poli.objective_repository.super_mario_bros", "_autosummary/poli.objective_repository.super_mario_bros.information", "_autosummary/poli.objective_repository.super_mario_bros.level_utils", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.add_padding_to_level", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.clean_level", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.level_to_array", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.level_to_list", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.levels_to_onehot", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.onehot_to_levels", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.tensor_to_sim_level", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.vectorized", "_autosummary/poli.objective_repository.super_mario_bros.model", "_autosummary/poli.objective_repository.super_mario_bros.model.VAEMario", "_autosummary/poli.objective_repository.super_mario_bros.model.load_example_model", "_autosummary/poli.objective_repository.super_mario_bros.register", "_autosummary/poli.objective_repository.toy_continuous_problem", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.ackley_function_01", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.alpine_01", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.alpine_02", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.bent_cigar", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.brown", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.camelback_2d", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.chung_reynolds", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.cosine_mixture", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.cross_in_tray", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.deb_01", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.deb_02", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.deflected_corrugated_spring", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.easom", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.egg_holder", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.shifted_sphere", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.styblinski_tang", "_autosummary/poli.objective_repository.toy_continuous_problem.information", "_autosummary/poli.objective_repository.toy_continuous_problem.register", "_autosummary/poli.objective_repository.toy_continuous_problem.register.ToyContinuousBlackBox", "_autosummary/poli.objective_repository.toy_continuous_problem.register.ToyContinuousProblemFactory", "_autosummary/poli.objective_repository.toy_continuous_problem.toy_continuous_problem", "_autosummary/poli.objective_repository.toy_continuous_problem.toy_continuous_problem.ToyContinuousProblem", "_autosummary/poli.objective_repository.white_noise", "_autosummary/poli.objective_repository.white_noise.register", "_autosummary/poli.objective_repository.white_noise.register.WhiteNoiseBlackBox", "_autosummary/poli.objective_repository.white_noise.register.WhiteNoiseProblemFactory", "_autosummary/poli.registered_objectives", "_autosummary/poli.tests", "_autosummary/poli.tests.docs_examples", "_autosummary/poli.tests.docs_examples.test_objective_functions", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_aloha_example", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_logp_example", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_logp_example_using_strings", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_qed_example", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_qed_example_using_strings", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_white_noise_example", "_autosummary/poli.tests.registry", "_autosummary/poli.tests.registry.basic_objectives", "_autosummary/poli.tests.registry.basic_objectives.test_basic_objectives", "_autosummary/poli.tests.registry.basic_objectives.test_basic_objectives.test_registering_aloha", "_autosummary/poli.tests.registry.basic_objectives.test_basic_objectives.test_registering_white_noise", "_autosummary/poli.tests.registry.basic_objectives.test_budget_exhaustion", "_autosummary/poli.tests.registry.chemistry", "_autosummary/poli.tests.registry.chemistry.test_chemistry_objectives", "_autosummary/poli.tests.registry.proteins", "_autosummary/poli.tests.registry.proteins.test_foldx", "_autosummary/poli.tests.registry.proteins.test_foldx_rfp_lambo", "_autosummary/poli.tests.registry.proteins.test_rasp", "_autosummary/poli.tests.registry.test_basic_loop_without_create", "_autosummary/poli.tests.registry.test_black_box_instancing", "_autosummary/poli.tests.registry.test_force_isolation", "_autosummary/poli.tests.registry.test_instancing_black_boxes_alone", "_autosummary/poli.tests.registry.test_multi_objective_and_negative", "_autosummary/poli.tests.registry.test_passing_array_of_strings", "_autosummary/poli.tests.registry.toy_continuous_problems", "_autosummary/poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims", "_autosummary/poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims.test_embed_camelback_into_high_dimensions", "_autosummary/poli.tests.registry.toy_continuous_problems.test_instancing_of_toy_continuous_problems", "_autosummary/poli.tests.test_core_promises", "_autosummary/poli.tests.test_minimal_working_example", "_autosummary/poli.tests.test_minimal_working_example.test_minimal_working_example", "_autosummary/poli.tests.test_seeding", "_autosummary/poli.tests.test_seeding.test_seeding_in_white_noise", "_autosummary/poli.tests.util", "_autosummary/poli.tests.util.test_foldx_interface", "_autosummary/poli.tests.util.test_protein_utilities", "_templates/custom-module-template", "api", "bibliography", "contributing/a_new_problem", "contributing/a_new_solver", "getting_started/getting_started", "index", "understanding_foldx/00-installing-foldx", "understanding_foldx/01-single-mutation-using-foldx/index", "using_poli/objective_repository/RaSP", "using_poli/objective_repository/all_objectives", "using_poli/objective_repository/aloha", "using_poli/objective_repository/dockstring", "using_poli/objective_repository/drd3_docking", "using_poli/objective_repository/foldx_rfp_lambo", "using_poli/objective_repository/foldx_sasa", "using_poli/objective_repository/foldx_stability", "using_poli/objective_repository/penalized_logp_lambo", "using_poli/objective_repository/rdkit_logp", "using_poli/objective_repository/rdkit_qed", "using_poli/objective_repository/sa_tdc", "using_poli/objective_repository/super_mario_bros", "using_poli/objective_repository/tdc_oracles", "using_poli/objective_repository/template", "using_poli/objective_repository/toy_continuous_problems", "using_poli/objective_repository/white_noise", "using_poli/observers/registering_an_observer", "using_poli/optimization_examples/protein-stability-foldx/optimizing_protein_stability", "using_poli/the_basics/defining_a_problem_solver", "using_poli/the_basics/defining_an_observer", "using_poli/the_basics/diving_deeper", "using_poli/the_basics/intro_to_poli", "using_poli/the_basics/isolation", "using_poli/the_basics/optimizing_an_objective_function", "using_poli/the_basics/registering_an_objective_function", "using_poli_baselines/bayesian_optimization", "using_poli_baselines/cma_es", "using_poli_baselines/graph_ga", "using_poli_baselines/latent_space_bo", "using_poli_baselines/line_bayesian_optimization", "using_poli_baselines/nsga_2", "using_poli_baselines/random_mutations", "using_poli_baselines/template"], "filenames": ["_autosummary/poli.rst", "_autosummary/poli.core.rst", "_autosummary/poli.core.abstract_black_box.rst", "_autosummary/poli.core.abstract_black_box.AbstractBlackBox.rst", "_autosummary/poli.core.abstract_black_box.NegativeBlackBox.rst", "_autosummary/poli.core.abstract_isolated_function.rst", "_autosummary/poli.core.abstract_problem_factory.rst", "_autosummary/poli.core.abstract_problem_factory.AbstractProblemFactory.rst", "_autosummary/poli.core.abstract_problem_factory.MetaProblemFactory.rst", "_autosummary/poli.core.black_box_information.rst", "_autosummary/poli.core.chemistry.rst", "_autosummary/poli.core.chemistry.tdc_black_box.rst", "_autosummary/poli.core.chemistry.tdc_black_box.TDCBlackBox.rst", "_autosummary/poli.core.chemistry.tdc_isolated_function.rst", "_autosummary/poli.core.exceptions.rst", "_autosummary/poli.core.exceptions.BudgetExhaustedException.rst", "_autosummary/poli.core.exceptions.PoliException.rst", "_autosummary/poli.core.multi_objective_black_box.rst", "_autosummary/poli.core.multi_objective_black_box.MultiObjectiveBlackBox.rst", "_autosummary/poli.core.problem.rst", "_autosummary/poli.core.problem_setup_information.rst", "_autosummary/poli.core.problem_setup_information.ProblemSetupInformation.rst", "_autosummary/poli.core.proteins.rst", "_autosummary/poli.core.proteins.foldx_black_box.rst", "_autosummary/poli.core.proteins.foldx_black_box.FoldxBlackBox.rst", "_autosummary/poli.core.proteins.foldx_isolated_function.rst", "_autosummary/poli.core.registry.rst", "_autosummary/poli.core.registry.delete_observer_run_script.rst", "_autosummary/poli.core.registry.delete_problem.rst", "_autosummary/poli.core.registry.get_problem_factories.rst", "_autosummary/poli.core.registry.get_problems.rst", "_autosummary/poli.core.registry.register_problem.rst", "_autosummary/poli.core.registry.register_problem_from_repository.rst", "_autosummary/poli.core.registry.set_observer.rst", "_autosummary/poli.core.registry.set_observer_run_script.rst", "_autosummary/poli.core.util.rst", "_autosummary/poli.core.util.abstract_observer.rst", "_autosummary/poli.core.util.abstract_observer.AbstractObserver.rst", "_autosummary/poli.core.util.alignment.rst", "_autosummary/poli.core.util.alignment.is_aligned.rst", "_autosummary/poli.core.util.batch.rst", "_autosummary/poli.core.util.batch.batch_input.rst", "_autosummary/poli.core.util.batch.batch_input.batched.rst", "_autosummary/poli.core.util.chemistry.rst", "_autosummary/poli.core.util.chemistry.string_to_molecule.rst", "_autosummary/poli.core.util.chemistry.string_to_molecule.selfies_to_molecules.rst", "_autosummary/poli.core.util.chemistry.string_to_molecule.smiles_to_molecules.rst", "_autosummary/poli.core.util.chemistry.string_to_molecule.strings_to_molecules.rst", "_autosummary/poli.core.util.chemistry.string_to_molecule.translate_selfies_to_smiles.rst", "_autosummary/poli.core.util.chemistry.string_to_molecule.translate_smiles_to_selfies.rst", "_autosummary/poli.core.util.external_observer.rst", "_autosummary/poli.core.util.external_observer.ExternalObserver.rst", "_autosummary/poli.core.util.files.rst", "_autosummary/poli.core.util.files.download_files_from_github.rst", "_autosummary/poli.core.util.files.download_files_from_github.download_file_from_github_repository.rst", "_autosummary/poli.core.util.files.download_files_from_github.get_sha_for_tag.rst", "_autosummary/poli.core.util.files.integrity.rst", "_autosummary/poli.core.util.files.integrity.compute_md5_from_filepath.rst", "_autosummary/poli.core.util.inter_process_communication.rst", "_autosummary/poli.core.util.inter_process_communication.process_wrapper.rst", "_autosummary/poli.core.util.inter_process_communication.process_wrapper.ProcessWrapper.rst", "_autosummary/poli.core.util.inter_process_communication.process_wrapper.get_connection.rst", "_autosummary/poli.core.util.isolation.rst", "_autosummary/poli.core.util.isolation.external_black_box.rst", "_autosummary/poli.core.util.isolation.external_function.rst", "_autosummary/poli.core.util.isolation.instancing.rst", "_autosummary/poli.core.util.isolation.isolated_black_box.rst", "_autosummary/poli.core.util.objective_management.rst", "_autosummary/poli.core.util.objective_management.make_run_script.rst", "_autosummary/poli.core.util.objective_management.make_run_script.make_observer_script.rst", "_autosummary/poli.core.util.objective_management.make_run_script.make_run_script.rst", "_autosummary/poli.core.util.observer_wrapper.rst", "_autosummary/poli.core.util.observer_wrapper.start_observer_process.rst", "_autosummary/poli.core.util.proteins.rst", "_autosummary/poli.core.util.proteins.defaults.rst", "_autosummary/poli.core.util.proteins.foldx.rst", "_autosummary/poli.core.util.proteins.foldx.FoldxInterface.rst", "_autosummary/poli.core.util.proteins.mutations.rst", "_autosummary/poli.core.util.proteins.mutations.edits_between_strings.rst", "_autosummary/poli.core.util.proteins.mutations.find_closest_wildtype_pdb_file_to_mutant.rst", "_autosummary/poli.core.util.proteins.mutations.mutations_from_wildtype_residues_and_mutant.rst", "_autosummary/poli.core.util.proteins.pdb_parsing.rst", "_autosummary/poli.core.util.proteins.pdb_parsing.parse_pdb_as_residue_strings.rst", "_autosummary/poli.core.util.proteins.pdb_parsing.parse_pdb_as_residues.rst", "_autosummary/poli.core.util.proteins.pdb_parsing.parse_pdb_as_structure.rst", "_autosummary/poli.core.util.proteins.rasp.rst", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.rst", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.PrismData.rst", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.cavity_model.rst", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.helpers.rst", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.run_pipeline.rst", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.visualization.rst", "_autosummary/poli.core.util.proteins.rasp.load_models.rst", "_autosummary/poli.core.util.proteins.rasp.rasp_interface.rst", "_autosummary/poli.core.util.seeding.rst", "_autosummary/poli.core.util.seeding.seeding.rst", "_autosummary/poli.core.util.seeding.seeding.seed_numpy.rst", "_autosummary/poli.core.util.seeding.seeding.seed_python.rst", "_autosummary/poli.objective.rst", "_autosummary/poli.objective.dynamically_instantiate.rst", "_autosummary/poli.objective.parse_factory_kwargs.rst", "_autosummary/poli.objective.run.rst", "_autosummary/poli.objective_factory.rst", "_autosummary/poli.objective_factory.ExternalBlackBox.rst", "_autosummary/poli.objective_factory.create.rst", "_autosummary/poli.objective_factory.load_config.rst", "_autosummary/poli.objective_factory.start.rst", "_autosummary/poli.objective_repository.rst", "_autosummary/poli.objective_repository.aloha.rst", "_autosummary/poli.objective_repository.aloha.register.rst", "_autosummary/poli.objective_repository.aloha.register.AlohaBlackBox.rst", "_autosummary/poli.objective_repository.aloha.register.AlohaProblemFactory.rst", "_autosummary/poli.objective_repository.dockstring.rst", "_autosummary/poli.objective_repository.dockstring.information.rst", "_autosummary/poli.objective_repository.dockstring.isolated_function.rst", "_autosummary/poli.objective_repository.dockstring.register.rst", "_autosummary/poli.objective_repository.dockstring.register.DockstringBlackBox.rst", "_autosummary/poli.objective_repository.dockstring.register.DockstringProblemFactory.rst", "_autosummary/poli.objective_repository.drd3_docking.rst", "_autosummary/poli.objective_repository.drd3_docking.information.rst", "_autosummary/poli.objective_repository.drd3_docking.isolated_function.rst", "_autosummary/poli.objective_repository.drd3_docking.register.rst", "_autosummary/poli.objective_repository.drd3_docking.register.DRD3BlackBox.rst", "_autosummary/poli.objective_repository.drd3_docking.register.DRD3ProblemFactory.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.information.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.isolated_function.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.Config.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.RFPWrapper.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.RFPWrapperFactory.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.get_config.rst", "_autosummary/poli.objective_repository.foldx_sasa.rst", "_autosummary/poli.objective_repository.foldx_sasa.foldx_utils.rst", "_autosummary/poli.objective_repository.foldx_sasa.information.rst", "_autosummary/poli.objective_repository.foldx_sasa.isolated_function.rst", "_autosummary/poli.objective_repository.foldx_sasa.register.rst", "_autosummary/poli.objective_repository.foldx_sasa.register.FoldXSASABlackBox.rst", "_autosummary/poli.objective_repository.foldx_sasa.register.FoldXSASAProblemFactory.rst", "_autosummary/poli.objective_repository.foldx_stability.rst", "_autosummary/poli.objective_repository.foldx_stability.foldx_utils.rst", "_autosummary/poli.objective_repository.foldx_stability.information.rst", "_autosummary/poli.objective_repository.foldx_stability.isolated_function.rst", "_autosummary/poli.objective_repository.foldx_stability.register.rst", "_autosummary/poli.objective_repository.foldx_stability.register.FoldXStabilityBlackBox.rst", "_autosummary/poli.objective_repository.foldx_stability.register.FoldXStabilityProblemFactory.rst", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.rst", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.information.rst", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.isolated_function.rst", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.register.rst", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASABlackBox.rst", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASAProblemFactory.rst", "_autosummary/poli.objective_repository.gfp_cbas.rst", "_autosummary/poli.objective_repository.gfp_cbas.abstract_vae_wrapper.rst", "_autosummary/poli.objective_repository.gfp_cbas.abstract_vae_wrapper.AbstractVAEWrapper.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_aas_to_idx_array.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_idx_array_to_aas.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_mutations_to_sequence.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_argmax.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_balaji_predictions.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_experimental_X_y.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_gfp_X_y_aa.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_gfp_base_seq.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_samples.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_aa.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_aa_array.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_dna.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.partition_data.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.read_gfp_data.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.CBASVAEWrapper.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeDecoder.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeEncoder.rst", "_autosummary/poli.objective_repository.gfp_cbas.gfp_gp.rst", "_autosummary/poli.objective_repository.gfp_cbas.information.rst", "_autosummary/poli.objective_repository.gfp_cbas.isolated_function.rst", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.rst", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.BaseVAE.rst", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.SimpleVAE.rst", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.build_vae.rst", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.identity_loss.rst", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.summed_categorical_crossentropy.rst", "_autosummary/poli.objective_repository.gfp_cbas.register.rst", "_autosummary/poli.objective_repository.gfp_cbas.register.GFPCBasBlackBox.rst", "_autosummary/poli.objective_repository.gfp_cbas.register.GFPCBasProblemFactory.rst", "_autosummary/poli.objective_repository.gfp_select.rst", "_autosummary/poli.objective_repository.gfp_select.information.rst", "_autosummary/poli.objective_repository.gfp_select.isolated_function.rst", "_autosummary/poli.objective_repository.gfp_select.register.rst", "_autosummary/poli.objective_repository.gfp_select.register.GFPBlackBox.rst", "_autosummary/poli.objective_repository.gfp_select.register.GFPSelectionProblemFactory.rst", "_autosummary/poli.objective_repository.penalized_logp_lambo.rst", "_autosummary/poli.objective_repository.penalized_logp_lambo.information.rst", "_autosummary/poli.objective_repository.penalized_logp_lambo.isolated_function.rst", "_autosummary/poli.objective_repository.penalized_logp_lambo.register.rst", "_autosummary/poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboBlackBox.rst", "_autosummary/poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboProblemFactory.rst", "_autosummary/poli.objective_repository.rasp.rst", "_autosummary/poli.objective_repository.rasp.information.rst", "_autosummary/poli.objective_repository.rasp.isolated_function.rst", "_autosummary/poli.objective_repository.rasp.register.rst", "_autosummary/poli.objective_repository.rdkit_logp.rst", "_autosummary/poli.objective_repository.rdkit_logp.information.rst", "_autosummary/poli.objective_repository.rdkit_logp.register.rst", "_autosummary/poli.objective_repository.rdkit_logp.register.LogPBlackBox.rst", "_autosummary/poli.objective_repository.rdkit_logp.register.LogPProblemFactory.rst", "_autosummary/poli.objective_repository.rdkit_qed.rst", "_autosummary/poli.objective_repository.rdkit_qed.information.rst", "_autosummary/poli.objective_repository.rdkit_qed.register.rst", "_autosummary/poli.objective_repository.rdkit_qed.register.QEDBlackBox.rst", "_autosummary/poli.objective_repository.rdkit_qed.register.QEDProblemFactory.rst", "_autosummary/poli.objective_repository.rfp_foldx_stability_and_sasa.rst", "_autosummary/poli.objective_repository.rfp_foldx_stability_and_sasa.information.rst", "_autosummary/poli.objective_repository.rfp_foldx_stability_and_sasa.register.rst", "_autosummary/poli.objective_repository.sa_tdc.rst", "_autosummary/poli.objective_repository.sa_tdc.information.rst", "_autosummary/poli.objective_repository.sa_tdc.isolated_function.rst", "_autosummary/poli.objective_repository.sa_tdc.register.rst", "_autosummary/poli.objective_repository.sa_tdc.register.SABlackBox.rst", "_autosummary/poli.objective_repository.sa_tdc.register.SAProblemFactory.rst", "_autosummary/poli.objective_repository.super_mario_bros.rst", "_autosummary/poli.objective_repository.super_mario_bros.information.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.add_padding_to_level.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.clean_level.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.level_to_array.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.level_to_list.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.levels_to_onehot.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.onehot_to_levels.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.tensor_to_sim_level.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.vectorized.rst", "_autosummary/poli.objective_repository.super_mario_bros.model.rst", "_autosummary/poli.objective_repository.super_mario_bros.model.VAEMario.rst", "_autosummary/poli.objective_repository.super_mario_bros.model.load_example_model.rst", "_autosummary/poli.objective_repository.super_mario_bros.register.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.ackley_function_01.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.alpine_01.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.alpine_02.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.bent_cigar.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.brown.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.camelback_2d.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.chung_reynolds.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.cosine_mixture.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.cross_in_tray.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.deb_01.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.deb_02.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.deflected_corrugated_spring.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.easom.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.egg_holder.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.shifted_sphere.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.styblinski_tang.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.information.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.register.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.register.ToyContinuousBlackBox.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.register.ToyContinuousProblemFactory.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.toy_continuous_problem.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.toy_continuous_problem.ToyContinuousProblem.rst", "_autosummary/poli.objective_repository.white_noise.rst", "_autosummary/poli.objective_repository.white_noise.register.rst", "_autosummary/poli.objective_repository.white_noise.register.WhiteNoiseBlackBox.rst", "_autosummary/poli.objective_repository.white_noise.register.WhiteNoiseProblemFactory.rst", "_autosummary/poli.registered_objectives.rst", "_autosummary/poli.tests.rst", "_autosummary/poli.tests.docs_examples.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_aloha_example.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_logp_example.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_logp_example_using_strings.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_qed_example.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_qed_example_using_strings.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_white_noise_example.rst", "_autosummary/poli.tests.registry.rst", "_autosummary/poli.tests.registry.basic_objectives.rst", "_autosummary/poli.tests.registry.basic_objectives.test_basic_objectives.rst", "_autosummary/poli.tests.registry.basic_objectives.test_basic_objectives.test_registering_aloha.rst", "_autosummary/poli.tests.registry.basic_objectives.test_basic_objectives.test_registering_white_noise.rst", "_autosummary/poli.tests.registry.basic_objectives.test_budget_exhaustion.rst", "_autosummary/poli.tests.registry.chemistry.rst", "_autosummary/poli.tests.registry.chemistry.test_chemistry_objectives.rst", "_autosummary/poli.tests.registry.proteins.rst", "_autosummary/poli.tests.registry.proteins.test_foldx.rst", "_autosummary/poli.tests.registry.proteins.test_foldx_rfp_lambo.rst", "_autosummary/poli.tests.registry.proteins.test_rasp.rst", "_autosummary/poli.tests.registry.test_basic_loop_without_create.rst", "_autosummary/poli.tests.registry.test_black_box_instancing.rst", "_autosummary/poli.tests.registry.test_force_isolation.rst", "_autosummary/poli.tests.registry.test_instancing_black_boxes_alone.rst", "_autosummary/poli.tests.registry.test_multi_objective_and_negative.rst", "_autosummary/poli.tests.registry.test_passing_array_of_strings.rst", "_autosummary/poli.tests.registry.toy_continuous_problems.rst", "_autosummary/poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims.rst", "_autosummary/poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims.test_embed_camelback_into_high_dimensions.rst", "_autosummary/poli.tests.registry.toy_continuous_problems.test_instancing_of_toy_continuous_problems.rst", "_autosummary/poli.tests.test_core_promises.rst", "_autosummary/poli.tests.test_minimal_working_example.rst", "_autosummary/poli.tests.test_minimal_working_example.test_minimal_working_example.rst", "_autosummary/poli.tests.test_seeding.rst", "_autosummary/poli.tests.test_seeding.test_seeding_in_white_noise.rst", "_autosummary/poli.tests.util.rst", "_autosummary/poli.tests.util.test_foldx_interface.rst", "_autosummary/poli.tests.util.test_protein_utilities.rst", "_templates/custom-module-template.rst", "api.rst", "bibliography.md", "contributing/a_new_problem.md", "contributing/a_new_solver.md", "getting_started/getting_started.md", "index.md", "understanding_foldx/00-installing-foldx.md", "understanding_foldx/01-single-mutation-using-foldx/index.ipynb", "using_poli/objective_repository/RaSP.md", "using_poli/objective_repository/all_objectives.md", "using_poli/objective_repository/aloha.md", "using_poli/objective_repository/dockstring.md", "using_poli/objective_repository/drd3_docking.md", "using_poli/objective_repository/foldx_rfp_lambo.md", "using_poli/objective_repository/foldx_sasa.md", "using_poli/objective_repository/foldx_stability.md", "using_poli/objective_repository/penalized_logp_lambo.md", "using_poli/objective_repository/rdkit_logp.md", "using_poli/objective_repository/rdkit_qed.md", "using_poli/objective_repository/sa_tdc.md", "using_poli/objective_repository/super_mario_bros.md", "using_poli/objective_repository/tdc_oracles.md", "using_poli/objective_repository/template.md", "using_poli/objective_repository/toy_continuous_problems.md", "using_poli/objective_repository/white_noise.md", "using_poli/observers/registering_an_observer.md", "using_poli/optimization_examples/protein-stability-foldx/optimizing_protein_stability.ipynb", "using_poli/the_basics/defining_a_problem_solver.md", "using_poli/the_basics/defining_an_observer.ipynb", "using_poli/the_basics/diving_deeper.md", "using_poli/the_basics/intro_to_poli.ipynb", "using_poli/the_basics/isolation.ipynb", "using_poli/the_basics/optimizing_an_objective_function.md", "using_poli/the_basics/registering_an_objective_function.md", "using_poli_baselines/bayesian_optimization.md", "using_poli_baselines/cma_es.md", "using_poli_baselines/graph_ga.md", "using_poli_baselines/latent_space_bo.md", "using_poli_baselines/line_bayesian_optimization.md", "using_poli_baselines/nsga_2.md", "using_poli_baselines/random_mutations.md", "using_poli_baselines/template.md"], "titles": ["poli", "poli.core", "poli.core.abstract_black_box", "poli.core.abstract_black_box.AbstractBlackBox", "poli.core.abstract_black_box.NegativeBlackBox", "poli.core.abstract_isolated_function", "poli.core.abstract_problem_factory", "poli.core.abstract_problem_factory.AbstractProblemFactory", "poli.core.abstract_problem_factory.MetaProblemFactory", "poli.core.black_box_information", "poli.core.chemistry", "poli.core.chemistry.tdc_black_box", "poli.core.chemistry.tdc_black_box.TDCBlackBox", "poli.core.chemistry.tdc_isolated_function", "poli.core.exceptions", "poli.core.exceptions.BudgetExhaustedException", "poli.core.exceptions.PoliException", "poli.core.multi_objective_black_box", "poli.core.multi_objective_black_box.MultiObjectiveBlackBox", "poli.core.problem", "poli.core.problem_setup_information", "poli.core.problem_setup_information.ProblemSetupInformation", "poli.core.proteins", "poli.core.proteins.foldx_black_box", "poli.core.proteins.foldx_black_box.FoldxBlackBox", "poli.core.proteins.foldx_isolated_function", "poli.core.registry", "poli.core.registry.delete_observer_run_script", "poli.core.registry.delete_problem", "poli.core.registry.get_problem_factories", "poli.core.registry.get_problems", "poli.core.registry.register_problem", "poli.core.registry.register_problem_from_repository", "poli.core.registry.set_observer", "poli.core.registry.set_observer_run_script", "poli.core.util", "poli.core.util.abstract_observer", "poli.core.util.abstract_observer.AbstractObserver", "poli.core.util.alignment", "poli.core.util.alignment.is_aligned", "poli.core.util.batch", "poli.core.util.batch.batch_input", "poli.core.util.batch.batch_input.batched", "poli.core.util.chemistry", "poli.core.util.chemistry.string_to_molecule", "poli.core.util.chemistry.string_to_molecule.selfies_to_molecules", "poli.core.util.chemistry.string_to_molecule.smiles_to_molecules", "poli.core.util.chemistry.string_to_molecule.strings_to_molecules", "poli.core.util.chemistry.string_to_molecule.translate_selfies_to_smiles", "poli.core.util.chemistry.string_to_molecule.translate_smiles_to_selfies", "poli.core.util.external_observer", "poli.core.util.external_observer.ExternalObserver", "poli.core.util.files", "poli.core.util.files.download_files_from_github", "poli.core.util.files.download_files_from_github.download_file_from_github_repository", "poli.core.util.files.download_files_from_github.get_sha_for_tag", "poli.core.util.files.integrity", "poli.core.util.files.integrity.compute_md5_from_filepath", "poli.core.util.inter_process_communication", "poli.core.util.inter_process_communication.process_wrapper", "poli.core.util.inter_process_communication.process_wrapper.ProcessWrapper", "poli.core.util.inter_process_communication.process_wrapper.get_connection", "poli.core.util.isolation", "poli.core.util.isolation.external_black_box", "poli.core.util.isolation.external_function", "poli.core.util.isolation.instancing", "poli.core.util.isolation.isolated_black_box", "poli.core.util.objective_management", "poli.core.util.objective_management.make_run_script", "poli.core.util.objective_management.make_run_script.make_observer_script", "poli.core.util.objective_management.make_run_script.make_run_script", "poli.core.util.observer_wrapper", "poli.core.util.observer_wrapper.start_observer_process", "poli.core.util.proteins", "poli.core.util.proteins.defaults", "poli.core.util.proteins.foldx", "poli.core.util.proteins.foldx.FoldxInterface", "poli.core.util.proteins.mutations", "poli.core.util.proteins.mutations.edits_between_strings", "poli.core.util.proteins.mutations.find_closest_wildtype_pdb_file_to_mutant", "poli.core.util.proteins.mutations.mutations_from_wildtype_residues_and_mutant", "poli.core.util.proteins.pdb_parsing", "poli.core.util.proteins.pdb_parsing.parse_pdb_as_residue_strings", "poli.core.util.proteins.pdb_parsing.parse_pdb_as_residues", "poli.core.util.proteins.pdb_parsing.parse_pdb_as_structure", "poli.core.util.proteins.rasp", "poli.core.util.proteins.rasp.inner_rasp", "poli.core.util.proteins.rasp.inner_rasp.PrismData", "poli.core.util.proteins.rasp.inner_rasp.cavity_model", "poli.core.util.proteins.rasp.inner_rasp.helpers", "poli.core.util.proteins.rasp.inner_rasp.run_pipeline", "poli.core.util.proteins.rasp.inner_rasp.visualization", "poli.core.util.proteins.rasp.load_models", "poli.core.util.proteins.rasp.rasp_interface", "poli.core.util.seeding", "poli.core.util.seeding.seeding", "poli.core.util.seeding.seeding.seed_numpy", "poli.core.util.seeding.seeding.seed_python", "poli.objective", "poli.objective.dynamically_instantiate", "poli.objective.parse_factory_kwargs", "poli.objective.run", "poli.objective_factory", "poli.objective_factory.ExternalBlackBox", "poli.objective_factory.create", "poli.objective_factory.load_config", "poli.objective_factory.start", "poli.objective_repository", "poli.objective_repository.aloha", "poli.objective_repository.aloha.register", "poli.objective_repository.aloha.register.AlohaBlackBox", "poli.objective_repository.aloha.register.AlohaProblemFactory", "poli.objective_repository.dockstring", "poli.objective_repository.dockstring.information", "poli.objective_repository.dockstring.isolated_function", "poli.objective_repository.dockstring.register", "poli.objective_repository.dockstring.register.DockstringBlackBox", "poli.objective_repository.dockstring.register.DockstringProblemFactory", "poli.objective_repository.drd3_docking", "poli.objective_repository.drd3_docking.information", "poli.objective_repository.drd3_docking.isolated_function", "poli.objective_repository.drd3_docking.register", "poli.objective_repository.drd3_docking.register.DRD3BlackBox", "poli.objective_repository.drd3_docking.register.DRD3ProblemFactory", "poli.objective_repository.foldx_rfp_lambo", "poli.objective_repository.foldx_rfp_lambo.information", "poli.objective_repository.foldx_rfp_lambo.isolated_function", "poli.objective_repository.foldx_rfp_lambo.register", "poli.objective_repository.foldx_rfp_lambo.register.Config", "poli.objective_repository.foldx_rfp_lambo.register.RFPWrapper", "poli.objective_repository.foldx_rfp_lambo.register.RFPWrapperFactory", "poli.objective_repository.foldx_rfp_lambo.register.get_config", "poli.objective_repository.foldx_sasa", "poli.objective_repository.foldx_sasa.foldx_utils", "poli.objective_repository.foldx_sasa.information", "poli.objective_repository.foldx_sasa.isolated_function", "poli.objective_repository.foldx_sasa.register", "poli.objective_repository.foldx_sasa.register.FoldXSASABlackBox", "poli.objective_repository.foldx_sasa.register.FoldXSASAProblemFactory", "poli.objective_repository.foldx_stability", "poli.objective_repository.foldx_stability.foldx_utils", "poli.objective_repository.foldx_stability.information", "poli.objective_repository.foldx_stability.isolated_function", "poli.objective_repository.foldx_stability.register", "poli.objective_repository.foldx_stability.register.FoldXStabilityBlackBox", "poli.objective_repository.foldx_stability.register.FoldXStabilityProblemFactory", "poli.objective_repository.foldx_stability_and_sasa", "poli.objective_repository.foldx_stability_and_sasa.information", "poli.objective_repository.foldx_stability_and_sasa.isolated_function", "poli.objective_repository.foldx_stability_and_sasa.register", "poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASABlackBox", "poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASAProblemFactory", "poli.objective_repository.gfp_cbas", "poli.objective_repository.gfp_cbas.abstract_vae_wrapper", "poli.objective_repository.gfp_cbas.abstract_vae_wrapper.AbstractVAEWrapper", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_aas_to_idx_array", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_idx_array_to_aas", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_mutations_to_sequence", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_argmax", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_balaji_predictions", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_experimental_X_y", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_gfp_X_y_aa", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_gfp_base_seq", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_samples", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_aa", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_aa_array", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_dna", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.partition_data", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.read_gfp_data", "poli.objective_repository.gfp_cbas.cbas_wrapper", "poli.objective_repository.gfp_cbas.cbas_wrapper.CBASVAEWrapper", "poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeDecoder", "poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeEncoder", "poli.objective_repository.gfp_cbas.gfp_gp", "poli.objective_repository.gfp_cbas.information", "poli.objective_repository.gfp_cbas.isolated_function", "poli.objective_repository.gfp_cbas.make_vae", "poli.objective_repository.gfp_cbas.make_vae.BaseVAE", "poli.objective_repository.gfp_cbas.make_vae.SimpleVAE", "poli.objective_repository.gfp_cbas.make_vae.build_vae", "poli.objective_repository.gfp_cbas.make_vae.identity_loss", "poli.objective_repository.gfp_cbas.make_vae.summed_categorical_crossentropy", "poli.objective_repository.gfp_cbas.register", "poli.objective_repository.gfp_cbas.register.GFPCBasBlackBox", "poli.objective_repository.gfp_cbas.register.GFPCBasProblemFactory", "poli.objective_repository.gfp_select", "poli.objective_repository.gfp_select.information", "poli.objective_repository.gfp_select.isolated_function", "poli.objective_repository.gfp_select.register", "poli.objective_repository.gfp_select.register.GFPBlackBox", "poli.objective_repository.gfp_select.register.GFPSelectionProblemFactory", "poli.objective_repository.penalized_logp_lambo", "poli.objective_repository.penalized_logp_lambo.information", "poli.objective_repository.penalized_logp_lambo.isolated_function", "poli.objective_repository.penalized_logp_lambo.register", "poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboBlackBox", "poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboProblemFactory", "poli.objective_repository.rasp", "poli.objective_repository.rasp.information", "poli.objective_repository.rasp.isolated_function", "poli.objective_repository.rasp.register", "poli.objective_repository.rdkit_logp", "poli.objective_repository.rdkit_logp.information", "poli.objective_repository.rdkit_logp.register", "poli.objective_repository.rdkit_logp.register.LogPBlackBox", "poli.objective_repository.rdkit_logp.register.LogPProblemFactory", "poli.objective_repository.rdkit_qed", "poli.objective_repository.rdkit_qed.information", "poli.objective_repository.rdkit_qed.register", "poli.objective_repository.rdkit_qed.register.QEDBlackBox", "poli.objective_repository.rdkit_qed.register.QEDProblemFactory", "poli.objective_repository.rfp_foldx_stability_and_sasa", "poli.objective_repository.rfp_foldx_stability_and_sasa.information", "poli.objective_repository.rfp_foldx_stability_and_sasa.register", "poli.objective_repository.sa_tdc", "poli.objective_repository.sa_tdc.information", "poli.objective_repository.sa_tdc.isolated_function", "poli.objective_repository.sa_tdc.register", "poli.objective_repository.sa_tdc.register.SABlackBox", "poli.objective_repository.sa_tdc.register.SAProblemFactory", "poli.objective_repository.super_mario_bros", "poli.objective_repository.super_mario_bros.information", "poli.objective_repository.super_mario_bros.level_utils", "poli.objective_repository.super_mario_bros.level_utils.add_padding_to_level", "poli.objective_repository.super_mario_bros.level_utils.clean_level", "poli.objective_repository.super_mario_bros.level_utils.level_to_array", "poli.objective_repository.super_mario_bros.level_utils.level_to_list", "poli.objective_repository.super_mario_bros.level_utils.levels_to_onehot", "poli.objective_repository.super_mario_bros.level_utils.onehot_to_levels", "poli.objective_repository.super_mario_bros.level_utils.tensor_to_sim_level", "poli.objective_repository.super_mario_bros.level_utils.vectorized", "poli.objective_repository.super_mario_bros.model", "poli.objective_repository.super_mario_bros.model.VAEMario", "poli.objective_repository.super_mario_bros.model.load_example_model", "poli.objective_repository.super_mario_bros.register", "poli.objective_repository.toy_continuous_problem", "poli.objective_repository.toy_continuous_problem.definitions", "poli.objective_repository.toy_continuous_problem.definitions.ackley_function_01", "poli.objective_repository.toy_continuous_problem.definitions.alpine_01", "poli.objective_repository.toy_continuous_problem.definitions.alpine_02", "poli.objective_repository.toy_continuous_problem.definitions.bent_cigar", "poli.objective_repository.toy_continuous_problem.definitions.brown", "poli.objective_repository.toy_continuous_problem.definitions.camelback_2d", "poli.objective_repository.toy_continuous_problem.definitions.chung_reynolds", "poli.objective_repository.toy_continuous_problem.definitions.cosine_mixture", "poli.objective_repository.toy_continuous_problem.definitions.cross_in_tray", "poli.objective_repository.toy_continuous_problem.definitions.deb_01", "poli.objective_repository.toy_continuous_problem.definitions.deb_02", "poli.objective_repository.toy_continuous_problem.definitions.deflected_corrugated_spring", "poli.objective_repository.toy_continuous_problem.definitions.easom", "poli.objective_repository.toy_continuous_problem.definitions.egg_holder", "poli.objective_repository.toy_continuous_problem.definitions.shifted_sphere", "poli.objective_repository.toy_continuous_problem.definitions.styblinski_tang", "poli.objective_repository.toy_continuous_problem.information", "poli.objective_repository.toy_continuous_problem.register", "poli.objective_repository.toy_continuous_problem.register.ToyContinuousBlackBox", "poli.objective_repository.toy_continuous_problem.register.ToyContinuousProblemFactory", "poli.objective_repository.toy_continuous_problem.toy_continuous_problem", "poli.objective_repository.toy_continuous_problem.toy_continuous_problem.ToyContinuousProblem", "poli.objective_repository.white_noise", "poli.objective_repository.white_noise.register", "poli.objective_repository.white_noise.register.WhiteNoiseBlackBox", "poli.objective_repository.white_noise.register.WhiteNoiseProblemFactory", "poli.registered_objectives", "poli.tests", "poli.tests.docs_examples", "poli.tests.docs_examples.test_objective_functions", "poli.tests.docs_examples.test_objective_functions.test_aloha_example", "poli.tests.docs_examples.test_objective_functions.test_logp_example", "poli.tests.docs_examples.test_objective_functions.test_logp_example_using_strings", "poli.tests.docs_examples.test_objective_functions.test_qed_example", "poli.tests.docs_examples.test_objective_functions.test_qed_example_using_strings", "poli.tests.docs_examples.test_objective_functions.test_white_noise_example", "poli.tests.registry", "poli.tests.registry.basic_objectives", "poli.tests.registry.basic_objectives.test_basic_objectives", "poli.tests.registry.basic_objectives.test_basic_objectives.test_registering_aloha", "poli.tests.registry.basic_objectives.test_basic_objectives.test_registering_white_noise", "poli.tests.registry.basic_objectives.test_budget_exhaustion", "poli.tests.registry.chemistry", "poli.tests.registry.chemistry.test_chemistry_objectives", "poli.tests.registry.proteins", "poli.tests.registry.proteins.test_foldx", "poli.tests.registry.proteins.test_foldx_rfp_lambo", "poli.tests.registry.proteins.test_rasp", "poli.tests.registry.test_basic_loop_without_create", "poli.tests.registry.test_black_box_instancing", "poli.tests.registry.test_force_isolation", "poli.tests.registry.test_instancing_black_boxes_alone", "poli.tests.registry.test_multi_objective_and_negative", "poli.tests.registry.test_passing_array_of_strings", "poli.tests.registry.toy_continuous_problems", "poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims", "poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims.test_embed_camelback_into_high_dimensions", "poli.tests.registry.toy_continuous_problems.test_instancing_of_toy_continuous_problems", "poli.tests.test_core_promises", "poli.tests.test_minimal_working_example", "poli.tests.test_minimal_working_example.test_minimal_working_example", "poli.tests.test_seeding", "poli.tests.test_seeding.test_seeding_in_white_noise", "poli.tests.util", "poli.tests.util.test_foldx_interface", "poli.tests.util.test_protein_utilities", "&lt;no title&gt;", "API documentation for poli", "References", "Adding a new black box to the repository", "Adding a new optimizer to <code class=\"docutils literal notranslate\"><span class=\"pre\">poli-baselines</span></code>", "Getting started", "poli \ud83e\uddea: a library of discrete objective functions", "Installing <code class=\"docutils literal notranslate\"><span class=\"pre\">foldx</span></code>", "Computing the energy of a protein and a single mutation", "Rapid Stability Predictions", "All objective functions", "Aloha objective function", "dockstring", "DRD3 docking (using TDC)", "Protein (RFP) stability and SASA (using <code class=\"docutils literal notranslate\"><span class=\"pre\">foldx</span></code>,<code class=\"docutils literal notranslate\"><span class=\"pre\">lambo</span></code>)", "Protein solvent accessibility (using <code class=\"docutils literal notranslate\"><span class=\"pre\">foldx</span></code>)", "Protein stability (using <code class=\"docutils literal notranslate\"><span class=\"pre\">foldx</span></code>)", "Penalized logP (using <code class=\"docutils literal notranslate\"><span class=\"pre\">lambo</span></code>)", "Log-solubility (logP)", "Quantitative Estimate of Druglikeness (QED)", "Synthetic Accessibility (using TDC)", "Optimizing jumps in Super Mario Bros", "Therapeutics Data Commons\u2019 oracles", "Objective function name", "Toy continuous objective functions", "White Noise objective function", "Registering and running observers in isolated processes", "Optimizing protein stability using random mutations", "Defining a problem solver in <code class=\"docutils literal notranslate\"><span class=\"pre\">poli_baselines</span></code>", "Defining an observer", "Diving deeper: how does poli work under the hood?", "What is poli?", "Isolating black box objective functions", "Optimizing an objective function", "Registering an objective function in poli", "Bayesian Optimization", "CMA-ES", "Graph Genetic Algorithms", "Latent Space Bayesian Optimization", "Line Bayesian Optimization", "Discrete NSGA-2", "Random mutations", "Template: optimization algorithm"], "terms": {"librari": [0, 37, 42, 237, 312, 333, 335, 336], "discret": [0, 19, 109, 110, 111, 153, 307, 308, 325, 329, 331, 332, 333, 335, 337, 339], "black": [0, 2, 3, 4, 5, 9, 10, 13, 17, 18, 19, 22, 23, 24, 43, 73, 103, 104, 106, 107, 109, 110, 111, 115, 116, 122, 126, 127, 132, 136, 137, 139, 143, 144, 146, 149, 150, 184, 196, 200, 201, 204, 205, 209, 210, 212, 214, 219, 256, 261, 262, 288, 308, 311, 313, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 328, 331, 332, 333, 335, 337, 339, 344], "box": [0, 2, 3, 4, 5, 9, 10, 13, 17, 18, 19, 22, 23, 24, 43, 73, 103, 104, 106, 107, 109, 110, 111, 115, 116, 122, 126, 127, 132, 136, 137, 139, 143, 144, 146, 149, 150, 184, 196, 200, 201, 204, 205, 209, 210, 212, 214, 219, 256, 261, 262, 288, 308, 311, 313, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 328, 331, 332, 333, 335, 337, 339, 344], "object": [0, 2, 3, 4, 5, 17, 18, 21, 23, 24, 37, 51, 55, 60, 61, 69, 76, 83, 84, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 115, 116, 118, 122, 126, 127, 136, 137, 139, 143, 144, 149, 150, 184, 196, 204, 209, 211, 214, 217, 218, 219, 235, 237, 253, 255, 256, 259, 261, 286, 288, 293, 306, 307, 308, 309, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 332, 333, 339, 344], "function": [0, 2, 3, 4, 5, 13, 17, 18, 19, 26, 27, 28, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 48, 49, 53, 54, 56, 58, 59, 61, 65, 68, 71, 72, 77, 80, 81, 95, 102, 103, 104, 106, 107, 108, 109, 110, 112, 115, 116, 118, 122, 126, 127, 132, 137, 139, 144, 150, 155, 177, 184, 194, 195, 196, 204, 205, 209, 210, 211, 219, 223, 235, 236, 237, 253, 255, 256, 258, 259, 261, 262, 276, 286, 288, 289, 290, 293, 297, 299, 306, 307, 308, 309, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 332, 333, 339, 343, 344], "modul": [0, 1, 2, 5, 6, 10, 22, 23, 26, 35, 38, 40, 41, 43, 52, 53, 56, 58, 59, 62, 67, 68, 73, 74, 75, 77, 81, 94, 107, 108, 112, 115, 118, 124, 132, 139, 146, 152, 172, 174, 186, 192, 194, 195, 198, 200, 201, 202, 207, 212, 215, 221, 236, 260, 265, 266, 274, 275, 280, 282, 286, 288, 292, 299, 301, 304], "class": [1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 16, 17, 18, 19, 20, 21, 23, 24, 25, 33, 36, 37, 50, 51, 59, 60, 63, 64, 66, 75, 76, 103, 109, 110, 111, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 135, 136, 137, 138, 142, 143, 144, 145, 148, 149, 150, 151, 153, 154, 170, 171, 172, 173, 174, 176, 177, 178, 179, 183, 184, 185, 188, 189, 191, 194, 195, 196, 197, 200, 201, 204, 205, 206, 209, 210, 211, 214, 217, 218, 219, 220, 235, 255, 256, 257, 258, 259, 261, 262, 263, 307, 308, 332, 333, 338], "util": [1, 26, 174, 223, 307, 333, 336, 339], "insid": [1, 5, 14, 32, 107, 118, 307, 309, 310, 312, 313, 317, 325, 328, 331, 335, 336, 338], "thi": [2, 4, 5, 6, 7, 9, 17, 18, 19, 23, 26, 27, 28, 31, 32, 33, 34, 37, 41, 42, 48, 49, 53, 54, 56, 60, 61, 68, 72, 74, 75, 76, 77, 80, 81, 104, 106, 109, 115, 118, 123, 136, 143, 149, 170, 174, 194, 195, 200, 201, 204, 209, 214, 237, 253, 255, 256, 261, 286, 288, 293, 299, 307, 308, 309, 310, 311, 312, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 331, 332, 333, 335, 336, 337, 339, 340, 343, 344, 345, 346], "implement": [2, 4, 5, 6, 9, 10, 13, 17, 18, 19, 20, 22, 23, 41, 75, 110, 115, 116, 121, 137, 144, 150, 153, 170, 178, 192, 194, 195, 200, 201, 217, 218, 219, 256, 307, 308, 310, 314, 316, 318, 321, 328, 331, 332, 335, 336, 337, 338, 339, 340, 344], "abstract": [2, 3, 5, 6, 7, 19, 36, 37, 307, 331, 338], "from": [2, 24, 28, 32, 42, 48, 49, 52, 53, 54, 55, 56, 57, 75, 76, 80, 106, 118, 137, 144, 150, 156, 161, 164, 179, 200, 201, 226, 229, 237, 243, 252, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 331, 332, 333, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346], "which": [2, 3, 5, 8, 19, 20, 24, 50, 57, 76, 80, 84, 105, 115, 122, 196, 209, 211, 219, 255, 256, 262, 307, 308, 312, 313, 317, 318, 324, 325, 328, 331, 332, 333, 335, 336, 337, 338, 339], "all": [2, 102, 104, 107, 109, 110, 111, 118, 170, 237, 262, 307, 308, 309, 312, 313, 315, 331, 332, 335, 336, 338], "should": [2, 60, 118, 307, 308, 309, 311, 315, 316, 317, 321, 322, 323, 324, 328, 329, 331, 332, 333, 336, 337, 338], "inherit": [2, 18, 308, 331, 332, 333, 338], "info": [24, 103, 122, 262, 308, 331, 332, 333, 335, 338, 344], "problemsetupinform": [24, 37, 103, 262, 318, 333, 338], "batch_siz": [3, 4, 18, 24, 104, 110, 116, 122, 137, 144, 150, 166, 184, 196, 205, 210, 219, 256, 262, 307, 338, 344], "option": [3, 4, 18, 24, 27, 31, 32, 33, 34, 45, 47, 48, 49, 51, 54, 57, 69, 70, 76, 78, 79, 82, 83, 84, 96, 97, 104, 106, 110, 116, 122, 137, 144, 150, 184, 196, 205, 210, 219, 256, 259, 262], "int": [3, 4, 18, 24, 37, 42, 61, 72, 78, 79, 96, 97, 104, 106, 110, 116, 122, 137, 144, 150, 171, 184, 196, 205, 210, 219, 224, 225, 228, 256, 259, 262, 307, 308, 332, 333, 337, 338], "none": [3, 4, 18, 24, 27, 31, 33, 34, 37, 48, 49, 51, 54, 69, 70, 76, 96, 97, 104, 106, 110, 116, 122, 137, 144, 150, 165, 167, 169, 184, 185, 196, 205, 210, 219, 256, 259, 262, 307, 308, 315, 316, 321, 322, 323, 324, 327, 328, 329, 333, 337, 338], "parallel": [3, 4, 24, 104, 110, 116, 122, 137, 144, 150, 184, 196, 205, 210, 219, 256, 262, 307], "bool": [3, 4, 24, 31, 32, 45, 46, 47, 48, 49, 54, 76, 78, 79, 82, 83, 84, 104, 106, 110, 116, 122, 137, 144, 150, 162, 184, 196, 205, 210, 219, 253, 256, 262, 307, 337], "fals": [3, 4, 24, 32, 46, 47, 48, 49, 54, 76, 79, 82, 83, 84, 104, 106, 110, 116, 122, 137, 144, 150, 161, 162, 168, 184, 196, 205, 210, 219, 229, 256, 262, 307, 325, 329, 333, 337], "num_work": [3, 4, 24, 104, 110, 116, 122, 137, 144, 150, 184, 196, 205, 210, 219, 256, 262, 307], "evaluation_budget": [3, 4, 24, 104, 110, 116, 122, 137, 144, 150, 184, 196, 205, 210, 219, 256, 262, 307], "inf": [3, 4, 24, 104, 110, 116, 122, 137, 144, 150, 184, 196, 205, 210, 219, 256, 262, 307, 329], "base": [3, 7, 16, 37, 60, 118, 178, 309, 310, 312, 314, 335, 338, 344], "optim": [3, 5, 19, 37, 75, 124, 192, 194, 195, 236, 237, 255, 258, 293, 306, 311, 312, 314, 328, 332, 333, 338, 344, 345], "problem": [3, 6, 7, 9, 20, 21, 24, 26, 28, 31, 32, 39, 67, 68, 70, 103, 104, 109, 110, 111, 116, 117, 123, 138, 151, 204, 209, 211, 212, 220, 221, 237, 255, 256, 260, 261, 262, 293, 309, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 329, 333, 335, 336, 344, 345], "paramet": [3, 4, 7, 18, 21, 24, 27, 28, 31, 32, 33, 34, 42, 45, 46, 47, 48, 49, 51, 54, 55, 57, 60, 61, 69, 70, 72, 76, 77, 78, 79, 80, 82, 83, 84, 96, 97, 103, 104, 106, 110, 111, 116, 117, 122, 137, 138, 144, 150, 151, 184, 205, 210, 211, 219, 220, 256, 262], "The": [3, 4, 9, 18, 19, 21, 23, 24, 27, 28, 31, 32, 33, 34, 42, 51, 54, 55, 57, 60, 61, 69, 70, 72, 75, 76, 78, 79, 80, 82, 83, 84, 103, 104, 105, 106, 108, 109, 110, 111, 116, 118, 122, 136, 137, 143, 144, 149, 150, 178, 184, 192, 205, 210, 211, 214, 219, 235, 251, 252, 255, 256, 261, 262, 306, 308, 310, 312, 313, 314, 316, 325, 331, 332, 336, 337, 338, 344], "setup": [7, 19, 20, 24, 51, 72, 111, 117, 123, 138, 151, 211, 220, 262, 318], "inform": [3, 7, 9, 19, 20, 24, 37, 51, 72, 103, 104, 106, 111, 115, 116, 117, 123, 138, 151, 200, 201, 211, 220, 259, 262, 306, 312, 331, 333, 338], "provid": [18, 51, 102, 123, 144, 307, 310, 311, 312, 325, 333, 335, 336], "detail": [13, 77, 312, 331, 335], "about": [32, 103, 104, 106, 310, 311, 314, 331, 335, 338], "batch": [3, 4, 18, 24, 104, 110, 116, 122, 137, 144, 150, 184, 205, 210, 219, 256, 262], "size": [3, 4, 18, 24, 42, 104, 110, 116, 122, 137, 144, 150, 184, 205, 210, 219, 256, 262, 338, 340, 344], "evalu": [3, 4, 5, 17, 18, 19, 24, 104, 106, 110, 116, 122, 137, 144, 150, 184, 205, 210, 211, 219, 256, 262, 308, 309, 319, 320, 332, 333, 336, 338], "default": [3, 4, 18, 24, 27, 32, 33, 34, 51, 54, 57, 76, 78, 79, 82, 83, 84, 104, 110, 116, 122, 137, 144, 150, 184, 205, 210, 219, 256, 262, 307, 308, 318, 319, 320, 338, 339, 343], "flag": [3, 4, 24, 31, 110, 116, 122, 137, 144, 150, 184, 205, 210, 219, 256], "indic": [3, 4, 24, 31, 110, 116, 122, 137, 144, 150, 156, 157, 184, 205, 210, 219, 256, 308, 332], "whether": [3, 4, 9, 19, 24, 31, 54, 82, 83, 110, 116, 122, 137, 144, 150, 184, 205, 210, 219, 256, 262, 288, 299, 307, 312, 322, 323, 325, 331, 333, 338], "number": [3, 4, 19, 24, 42, 61, 72, 94, 95, 96, 97, 104, 106, 110, 116, 122, 137, 144, 150, 184, 196, 205, 210, 219, 235, 256, 262, 308, 314, 325, 332, 335, 337], "worker": [3, 4, 24, 110, 116, 122, 137, 144, 150, 184, 205, 210, 219, 256, 262], "us": [3, 4, 5, 8, 9, 19, 24, 27, 31, 33, 34, 37, 48, 49, 51, 54, 56, 60, 61, 70, 74, 75, 76, 104, 106, 109, 110, 116, 118, 121, 122, 137, 143, 144, 146, 150, 160, 161, 162, 184, 192, 194, 195, 196, 200, 201, 202, 205, 207, 209, 210, 212, 217, 218, 219, 255, 256, 261, 286, 293, 306, 307, 308, 311, 312, 313, 314, 316, 322, 323, 328, 330, 332, 333, 336, 337, 338, 339, 340, 343, 344], "half": [3, 4, 104, 122, 137, 144, 150, 184, 256, 262], "avail": [3, 4, 104, 118, 122, 136, 137, 143, 144, 149, 150, 184, 214, 256, 262, 307, 309, 312, 314, 318, 319, 320, 325, 328, 331, 335, 337, 338], "cpu": [3, 4, 104, 122, 137, 144, 150, 184, 256, 262], "maximum": [3, 4, 19, 104, 110, 116, 122, 137, 144, 150, 184, 205, 210, 219, 256, 262, 307, 338], "allow": [3, 4, 5, 8, 9, 19, 23, 24, 104, 122, 136, 137, 143, 144, 149, 150, 184, 204, 209, 214, 255, 256, 307, 308, 311, 312, 325, 328, 332, 335, 337, 338], "float": [3, 4, 24, 122, 137, 144, 150, 184, 205, 209, 210, 219, 249, 256, 262, 307, 310, 337], "type": [3, 18, 24, 27, 33, 45, 46, 47, 48, 49, 55, 60, 61, 69, 70, 76, 78, 79, 80, 82, 83, 84, 104, 105, 110, 116, 122, 158, 163, 205, 210, 256, 307, 312, 338], "observ": [3, 5, 26, 27, 33, 34, 35, 36, 37, 50, 51, 67, 68, 69, 71, 72, 104, 106, 161, 310, 337, 338], "record": [3, 235], "dure": [3, 72, 307, 328], "abstractobserv": [3, 33, 69, 104, 106, 333], "observer_info": 3, "given": [3, 18, 27, 48, 49, 61, 69, 70, 76, 79, 84, 115, 116, 117, 144, 158, 159, 160, 235, 308, 309, 313, 316, 325, 332], "after": [3, 33, 37, 118, 307, 308, 312, 317, 318, 331, 332, 338], "initi": [3, 4, 18, 19, 21, 24, 37, 51, 60, 72, 76, 103, 104, 106, 110, 116, 122, 137, 144, 150, 184, 205, 210, 219, 256, 262, 308, 312, 331, 332, 335, 338, 344], "set_observ": [3, 330], "set": [3, 31, 33, 34, 37, 60, 84, 118, 160, 162, 168, 174, 205, 210, 307, 308, 316, 325, 332, 333, 335], "reset_evaluation_budget": 3, "reset": [3, 106], "budget": [3, 15, 19, 24, 106], "made": 3, "0": [3, 76, 78, 137, 144, 150, 180, 209, 229, 249, 308, 309, 310, 312, 319, 320, 322, 323, 325, 328, 329, 332, 333, 335, 337, 339, 340, 343], "__call__": [3, 4, 5, 307], "x": [3, 4, 5, 18, 37, 51, 106, 110, 116, 118, 144, 162, 167, 168, 205, 210, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 252, 253, 256, 262, 307, 308, 309, 315, 316, 317, 321, 322, 323, 324, 327, 328, 329, 331, 332, 333, 338, 339], "context": [3, 5, 18, 37, 51, 106, 110, 116, 144, 205, 210, 256, 262, 307, 333, 338], "input": [3, 18, 27, 34, 39, 41, 104, 110, 116, 144, 205, 210, 256, 262, 307, 309, 310, 315, 316, 317, 318, 321, 322, 323, 324, 327, 328, 329, 332, 338, 339, 343, 344], "_black_box": [3, 4, 5, 18, 110, 116, 144, 205, 210, 256, 262, 307, 338], "method": [3, 4, 5, 7, 8, 18, 21, 24, 37, 51, 60, 76, 80, 84, 103, 104, 110, 111, 116, 117, 122, 123, 137, 138, 144, 145, 150, 151, 154, 160, 171, 172, 173, 178, 179, 184, 185, 191, 196, 197, 205, 206, 210, 211, 219, 220, 256, 257, 259, 262, 263, 307, 308, 312, 318, 319, 320, 331, 332, 333, 335, 337, 338], "termin": [3, 72, 333, 338], "__enter__": 3, "enter": 3, "manag": [3, 54, 106], "__exit__": 3, "exc_typ": 3, "exc_val": 3, "exc_tb": 3, "exit": 3, "__del__": 3, "destructor": 3, "__neg__": 3, "creat": [3, 7, 19, 24, 31, 32, 33, 54, 60, 67, 68, 69, 70, 102, 106, 111, 117, 123, 138, 151, 211, 220, 221, 286, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 329, 331, 333, 336, 337, 344, 345, 346], "new": [3, 122, 310, 312, 332, 338], "neg": [3, 182, 316, 320], "origin": [3, 4, 76, 77, 80, 153, 252, 310, 312], "one": [3, 165, 228, 306, 307, 308, 310, 312, 313, 314, 318, 331, 332, 335, 336, 343], "__init__": [3, 4, 7, 8, 18, 21, 24, 37, 51, 60, 76, 103, 110, 111, 116, 117, 122, 123, 137, 138, 144, 145, 150, 151, 154, 171, 172, 173, 178, 179, 184, 185, 191, 196, 197, 205, 206, 210, 211, 219, 220, 256, 257, 259, 262, 263, 308, 332, 333, 338], "execut": [3, 4, 56, 60, 69, 118, 122, 137, 144, 150, 184, 219, 256, 311, 317], "we": [3, 4, 13, 17, 24, 32, 74, 80, 104, 118, 122, 136, 137, 143, 144, 149, 150, 161, 184, 192, 194, 195, 204, 205, 209, 210, 214, 237, 251, 253, 255, 256, 293, 307, 308, 309, 310, 312, 313, 317, 321, 325, 328, 331, 332, 333, 335, 336, 337, 338, 339, 340, 343, 344], "f": [4, 23, 74, 75, 106, 136, 143, 149, 214, 307, 308, 309, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 331, 333, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346], "abstractblackbox": [4, 18, 106, 122, 137, 144, 150, 184, 256, 307, 308, 332, 333, 338], "A": [4, 24, 31, 33, 42, 45, 46, 47, 48, 49, 70, 74, 76, 78, 79, 80, 82, 83, 106, 109, 110, 111, 118, 122, 124, 132, 136, 137, 143, 144, 146, 149, 150, 196, 205, 210, 212, 214, 215, 219, 221, 236, 256, 258, 260, 262, 306, 309, 310, 312, 313, 314, 315, 319, 320, 325, 333, 338], "wrapper": [4, 13, 103, 118, 124, 153, 170, 204, 209, 215, 310, 314, 344], "negat": 4, "If": [4, 18, 27, 32, 33, 34, 37, 42, 45, 46, 47, 48, 49, 51, 54, 55, 61, 72, 75, 76, 78, 79, 80, 84, 96, 97, 104, 106, 253, 256, 307, 308, 309, 310, 311, 312, 317, 318, 319, 320, 321, 325, 327, 333, 335, 336, 337, 338], "you": [4, 5, 76, 84, 118, 122, 205, 210, 219, 237, 307, 308, 309, 310, 311, 312, 313, 316, 318, 321, 322, 323, 325, 327, 328, 331, 332, 333, 335, 336, 337, 338], "construct": [4, 179], "maxim": [4, 235, 237, 252, 253, 308, 328], "minim": [4, 237, 307, 308, 314, 316, 332, 344], "latter": [4, 312], "onli": [4, 5, 13, 106, 153, 161, 170, 246, 250, 251, 307, 308, 309, 312, 313, 316, 318, 319, 320, 328, 332, 337, 338], "differ": [4, 23, 78, 136, 143, 149, 214, 307, 308, 309, 312, 313, 332, 333, 336, 338], "return": [4, 7, 24, 27, 45, 46, 47, 48, 49, 55, 57, 61, 69, 70, 76, 78, 79, 80, 82, 83, 84, 104, 105, 106, 111, 117, 138, 144, 151, 158, 159, 160, 163, 165, 180, 181, 196, 204, 205, 209, 210, 211, 220, 227, 260, 261, 262, 307, 308, 315, 316, 318, 319, 320, 322, 323, 325, 329, 331, 332, 338], "instead": [4, 237, 308, 319, 320, 332], "same": [4, 79, 80, 192, 194, 195, 196, 307, 309, 313, 335], "factori": [6, 7, 23, 31, 32, 60, 70, 102, 104, 106, 107, 108, 109, 111, 112, 115, 117, 123, 126, 127, 136, 138, 139, 143, 149, 151, 204, 209, 211, 214, 220, 235, 255, 261, 307, 310], "defin": [7, 33, 77, 212, 237, 293, 308, 328, 335, 336, 337], "interfac": [7, 75, 102, 310, 336], "instanc": [7, 18, 111, 117, 122, 138, 151, 211, 220, 256, 307, 309, 331, 336, 338, 344], "get_setup_inform": [7, 111, 117, 123, 138, 151, 211, 220, 307, 338], "specifi": [7, 54, 55, 104, 111, 117, 122, 138, 151, 159, 164, 172, 178, 211, 219, 220, 255, 312, 322, 323, 337, 338, 344], "metaclass": 8, "abstractproblemfactori": [8, 31, 70, 307, 338], "overrid": 8, "__repr__": 8, "__str__": 8, "arg": [8, 172, 173, 178, 179, 307, 312], "kwarg": [8, 31, 70, 172, 173, 178, 179, 307, 338], "contain": [5, 9, 10, 20, 22, 26, 42, 56, 68, 70, 74, 77, 78, 79, 81, 105, 156, 157, 174, 259, 307, 309, 312, 319, 320, 325, 338], "relat": [10, 22, 43, 73, 104, 311, 331], "around": [13, 118, 124, 204, 209, 215, 310, 314, 344], "therapeut": [13, 121, 217, 218, 306, 310, 314, 317, 324, 338], "data": [13, 40, 54, 110, 116, 118, 161, 162, 168, 169, 174, 306, 310, 312, 314, 317, 318, 324, 338], "common": [13, 102, 306, 310, 312, 314, 317, 324, 338, 344], "tdc": [13, 118, 121, 215, 217, 218, 219, 310, 314], "oracl": [13, 121, 122, 215, 217, 218, 219, 310, 314, 317, 324], "1": [13, 23, 32, 42, 75, 78, 80, 106, 115, 116, 117, 121, 124, 136, 137, 143, 144, 149, 150, 156, 157, 161, 168, 180, 184, 192, 194, 195, 196, 200, 201, 209, 214, 217, 218, 219, 224, 237, 243, 252, 255, 259, 306, 308, 309, 310, 312, 313, 315, 317, 321, 322, 325, 327, 328, 329, 332, 333, 335, 338, 339, 340, 343, 344], "so": [13, 31, 80, 205, 210, 307, 308, 312, 318, 321, 332, 336, 338], "far": [13, 308, 332], "support": [13, 286, 307, 309, 310, 332, 336], "two": [13, 61, 78, 309, 312, 328, 333, 336, 337, 338, 344], "drd3": [13, 118, 122, 123, 310, 314], "synthet": [13, 215, 217, 218, 219, 220, 310, 314], "access": [13, 54, 76, 118, 132, 137, 138, 146, 150, 151, 212, 217, 218, 219, 220, 306, 307, 310, 312, 314, 317, 325, 328], "see": [13, 48, 49, 77, 109, 118, 237, 255, 258, 261, 307, 309, 312, 313, 318, 331, 335, 336, 338], "document": [13, 196, 309, 310, 312, 331, 336], "our": [13, 307, 308, 312, 314, 316, 319, 320, 331, 332, 333, 336, 337, 338, 339, 340, 344], "more": [13, 77, 137, 144, 150, 258, 259, 309, 312, 331, 335], "refer": [13, 23, 75, 115, 116, 117, 118, 121, 124, 192, 194, 195, 217, 218, 310, 318], "artifici": [13, 121, 217, 218, 237, 325], "intellig": [13, 121, 217, 218], "foundat": [13, 121, 217, 218], "scienc": [13, 121, 217, 218, 306], "huang": [13, 121, 217, 218, 306, 310, 317, 324], "kexin": [13, 306], "tianfan": [13, 306], "fu": [13, 121, 217, 218, 306], "wenhao": [13, 306], "gao": [13, 121, 217, 218, 306, 314], "yue": [13, 306], "zhao": [13, 306], "yusuf": [13, 306], "roohani": [13, 306], "jure": [13, 306], "leskovec": [13, 306], "connor": [13, 306], "w": [13, 74, 121, 217, 218, 228, 306, 310, 312, 317, 333], "colei": [13, 306, 310], "cao": [13, 306], "xiao": [13, 306], "jimeng": [13, 306], "sun": [13, 306], "marinka": [13, 306], "zitnik": [13, 306], "natur": 13, "chemic": [13, 115, 116, 117, 306], "biologi": [13, 118, 136, 143, 149, 214, 306, 317], "18": [13, 121, 217, 218, 306], "10": [13, 42, 115, 116, 117, 121, 200, 201, 217, 218, 306, 329, 331, 339, 340, 343, 344], "octob": 13, "2022": [13, 75, 115, 116, 117, 121, 124, 192, 194, 195, 217, 218, 306, 310, 311, 312, 314, 316, 321, 331], "1033": [13, 121, 217, 218], "36": 13, "http": [13, 42, 53, 54, 75, 77, 115, 116, 117, 118, 121, 124, 192, 194, 195, 200, 201, 217, 218, 237, 258, 259, 306, 307, 309, 310, 311, 312, 318, 331, 335, 338], "doi": [13, 115, 116, 117, 121, 200, 201, 217, 218, 306], "org": [13, 42, 75, 115, 116, 117, 121, 124, 192, 194, 195, 200, 201, 217, 218, 237, 258, 259, 306, 312], "1038": [13, 121, 217, 218], "s41589": [13, 121, 217, 218], "022": [13, 121, 217, 218], "01131": [13, 121, 217, 218], "2": [13, 32, 42, 75, 78, 121, 136, 143, 149, 156, 157, 214, 217, 218, 237, 253, 256, 259, 306, 307, 309, 312, 324, 327, 328, 329, 335, 339, 343], "oracle_nam": 122, "str": [21, 24, 27, 28, 31, 32, 33, 34, 45, 46, 47, 48, 49, 51, 54, 55, 57, 60, 61, 69, 70, 72, 76, 78, 79, 80, 82, 83, 84, 104, 106, 116, 122, 137, 144, 150, 185, 226, 227, 256, 307, 312, 329, 333, 338], "from_smil": [122, 205, 210], "true": [31, 32, 45, 46, 47, 48, 49, 54, 76, 78, 79, 84, 104, 106, 122, 162, 179, 184, 196, 205, 210, 253, 307, 312, 319, 320, 329, 331, 333, 337, 338], "kwargs_for_oracl": [], "repres": [24, 61, 78, 83, 122, 178, 335], "It": [31, 60, 61, 118, 307, 309, 312, 316, 317, 332, 335], "name": [9, 21, 27, 28, 31, 32, 33, 34, 51, 54, 55, 70, 72, 82, 83, 84, 104, 106, 116, 122, 256, 259, 307, 309, 312, 313, 318, 319, 320, 329, 331, 333, 335, 337, 338], "comput": [23, 57, 76, 78, 80, 110, 116, 118, 136, 137, 143, 144, 146, 149, 150, 192, 194, 195, 202, 205, 210, 212, 214, 237, 306, 309, 310, 311, 313, 314, 317, 319, 320, 321, 324, 336], "dock": [115, 116, 117, 118, 121, 122, 123, 306, 310, 314, 316, 336], "score": [115, 116, 117, 137, 144, 150, 310, 313, 314, 316, 317, 319, 320, 321, 336], "an": [5, 19, 23, 27, 33, 34, 37, 39, 42, 45, 46, 47, 48, 49, 50, 51, 54, 61, 71, 72, 75, 80, 103, 104, 106, 136, 143, 149, 156, 157, 214, 228, 288, 307, 309, 310, 311, 312, 316, 318, 325, 327, 328, 331, 336, 339, 340, 344], "process": [5, 31, 33, 37, 50, 51, 60, 61, 71, 72, 103, 104, 106, 110, 116, 137, 143, 144, 150, 174, 205, 210, 288, 306, 307, 312, 318, 319, 320, 325, 328, 331, 335, 336, 337, 338, 339], "multipl": [110, 116, 205, 210], "infin": [104, 110, 116, 122, 137, 144, 150, 205, 210, 219], "molecul": [44, 45, 46, 47, 115, 116, 117, 122, 196, 205, 210, 211, 219, 306, 309, 312, 316, 317, 324, 335], "ar": [5, 19, 32, 37, 75, 78, 80, 105, 118, 162, 196, 205, 210, 211, 255, 293, 307, 308, 309, 310, 311, 313, 314, 318, 319, 320, 322, 323, 325, 327, 328, 331, 332, 333, 335, 336, 337, 338, 339], "smile": [46, 47, 48, 49, 116, 122, 196, 204, 205, 209, 210, 219, 310, 322, 323], "format": [60, 77, 80, 158], "represent": [44, 47, 116, 122, 200, 201, 205, 210, 219, 306, 336], "dict": [31, 60, 104, 106, 110, 116, 307, 338], "addit": [31, 51, 60, 69, 104, 106, 313], "keyword": [31, 51, 60, 104, 106, 307, 319, 320, 337], "argument": [27, 31, 33, 34, 51, 60, 104, 106, 319, 320, 337], "custom": [14, 337], "packag": [14, 16, 48, 49, 53, 331, 335, 336, 338], "rais": [15, 18, 45, 46, 48, 49, 54, 55, 61, 75, 78, 79, 308, 311, 332, 337], "when": [15, 60, 104, 106, 307, 313, 333, 335, 336, 337], "exhaust": 15, "multi_object": 17, "version": [17, 51, 76, 103, 118, 192, 209, 211, 308, 309, 310, 311, 312, 313, 317, 328, 332, 333, 343, 344], "mean": [17, 80, 160, 196, 307, 321, 328, 340], "simpli": [17, 308, 309, 318, 332, 333, 335], "concaten": [17, 18, 205, 210], "result": [17, 18, 76, 205, 210, 312, 333, 336], "individu": [17, 18, 77, 227, 312, 333, 336], "objective_funct": [18, 344], "list": [18, 24, 31, 33, 45, 46, 47, 48, 49, 69, 70, 76, 77, 78, 79, 80, 82, 83, 137, 144, 150, 156, 170, 179, 225, 227, 307, 310, 312, 319, 320, 333, 335, 338], "multi": [18, 306, 344], "requir": [18, 24, 53, 54, 118, 307, 308, 310, 312, 313, 325, 331, 332, 333, 335, 336, 337], "valueerror": [18, 55, 79], "e": [5, 19, 20, 54, 74, 80, 106, 110, 118, 156, 157, 161, 200, 201, 205, 210, 211, 253, 262, 306, 307, 308, 309, 310, 312, 313, 314, 316, 318, 319, 320, 329, 331, 332, 333, 337, 338], "g": [5, 19, 20, 74, 80, 156, 157, 211, 307, 308, 309, 310, 312, 314, 319, 320, 329, 331, 332, 333, 337, 338], "alphabet": [9, 20, 24, 110, 116, 307, 308, 318, 329, 331, 332, 333, 335, 338, 344, 345, 346], "sequenc": [9, 20, 75, 109, 110, 111, 124, 156, 157, 158, 159, 163, 164, 165, 192, 194, 195, 306, 307, 308, 310, 312, 315, 329, 331, 332, 335, 338], "length": [9, 20, 42, 78, 79, 167, 307, 312, 338], "max_sequence_length": [307, 329, 333, 338], "align": [9, 307, 329, 333, 338], "log_transform_recommend": [307, 329, 333], "s": [9, 19, 21, 24, 48, 49, 74, 75, 106, 118, 137, 144, 150, 153, 200, 201, 204, 205, 209, 210, 211, 237, 251, 306, 309, 310, 314, 317, 318, 319, 320, 324, 325, 331, 332, 333, 335, 336, 337, 339, 343, 344], "longest": 9, "have": [5, 9, 32, 42, 118, 137, 144, 150, 237, 286, 307, 308, 309, 311, 312, 313, 316, 317, 318, 319, 320, 321, 325, 327, 331, 332, 335, 336, 337, 338], "been": [237, 311], "charact": 9, "mai": [32, 200, 201, 306, 335], "appear": [309, 312], "recommend": [118, 307, 309, 310, 317, 318, 325, 340], "algorithm": [19, 37, 255, 293, 306, 308, 312, 328, 332, 333, 335, 337, 338, 339, 344], "log": [51, 182, 192, 202, 204, 205, 307, 310, 314, 338], "transform": [44, 223, 228, 229, 307], "target": [110, 116], "foldx": [23, 24, 77, 80, 136, 137, 138, 139, 143, 144, 146, 149, 150, 151, 200, 201, 212, 214, 309, 310, 312, 314, 331, 336, 338], "simul": [23, 24, 75, 76, 136, 143, 149, 214, 237, 307, 309, 325], "free": [23, 136, 143, 149, 214, 307, 308, 311, 312], "energi": [23, 76, 136, 143, 149, 214, 311, 320], "between": [23, 78, 80, 110, 136, 143, 149, 209, 214, 322], "wildtyp": [23, 24, 79, 80, 136, 137, 143, 144, 149, 150, 200, 201, 214, 310, 313, 314, 319, 320], "mutat": [23, 24, 76, 136, 143, 149, 158, 214, 306, 308, 310, 313, 314, 319, 320, 332, 335, 337, 344], "web": [23, 75, 136, 143, 149, 214], "server": [23, 60, 61, 75, 136, 143, 149, 214], "onlin": [23, 75, 136, 143, 149, 214], "forc": [23, 31, 75, 122, 136, 143, 149, 214, 288], "field": [23, 75, 136, 143, 149, 214], "nucleic": [23, 75, 136, 143, 149, 214], "acid": [23, 24, 74, 75, 136, 143, 149, 156, 157, 159, 164, 165, 214], "research": [23, 75, 136, 143, 149, 214, 306], "schymkowitz": [23, 75, 136, 143, 149, 214, 310, 312], "j": [23, 75, 115, 116, 117, 136, 143, 149, 214, 306, 333], "borg": [23, 75, 136, 143, 149, 214, 312], "stricher": [23, 75, 136, 143, 149, 214, 312], "ny": [23, 75, 136, 143, 149, 214], "r": [23, 74, 75, 80, 136, 143, 149, 214, 237, 306, 317, 333], "rousseau": [23, 75, 136, 143, 149, 214, 312], "serrano": [23, 75, 136, 143, 149, 214, 312], "l": [23, 74, 75, 106, 109, 110, 111, 136, 143, 149, 166, 171, 172, 173, 200, 201, 214, 306, 307, 308, 309, 315, 327, 328, 329, 332, 333, 335, 338], "2005": [23, 75, 136, 143, 149, 214, 310], "33": [23, 75, 136, 143, 149, 180, 214, 312], "suppl_2": [23, 75, 136, 143, 149, 214], "w382": [23, 75, 136, 143, 149, 214], "w388": [23, 75, 136, 143, 149, 214], "wildtype_pdb_path": [24, 137, 144, 150, 313, 319, 320, 331], "union": [24, 31, 33, 69, 70, 76, 79, 137, 144, 150], "path": [24, 31, 33, 54, 57, 69, 70, 76, 79, 82, 83, 84, 118, 137, 144, 150, 169, 307, 312, 313, 318, 319, 320, 331, 333], "experiment_id": [24, 137, 144, 150, 333], "tmp_folder": [24, 137, 144, 150], "eager_repair": [24, 137, 144, 150, 319, 320], "verbos": [24, 54, 76, 82, 83, 84, 137, 144, 150, 308, 337], "pdb": [24, 76, 79, 80, 81, 82, 83, 84, 137, 143, 144, 150, 200, 201, 309, 313, 319, 320, 331, 336], "file": [24, 32, 75, 76, 77, 79, 80, 81, 82, 83, 84, 105, 109, 118, 137, 143, 144, 150, 200, 201, 255, 261, 306, 307, 309, 311, 313, 318, 331, 333, 338], "amino": [24, 74, 156, 157, 159, 164, 165], "experi": [24, 137, 144, 150, 161, 237, 333], "id": [24, 77, 137, 144, 150, 225, 286, 306, 307, 312, 333, 338], "temporari": [24, 137, 144, 150], "folder": [24, 32, 54, 109, 118, 137, 144, 150, 255, 261, 307, 309, 311, 333, 336, 338], "eagerli": [24, 144], "repair": [24, 75, 76, 137, 144, 150, 331], "print": [24, 42, 54, 76, 82, 83, 84, 106, 137, 144, 150, 308, 309, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 331, 333, 335, 337, 338, 344, 345, 346], "output": [24, 76, 82, 83, 84, 137, 144, 150, 307, 310, 312, 335, 336], "wildtype_residu": [24, 80], "residu": [24, 77, 79, 80, 82, 83, 312], "each": [24, 37, 42, 78, 80, 159, 164, 310, 312, 333, 336, 337, 340], "wildtype_amino_acid": 24, "wildtype_residue_str": [24, 80], "string": [24, 44, 45, 46, 47, 48, 49, 60, 70, 78, 79, 80, 82, 116, 122, 157, 158, 167, 204, 205, 209, 210, 219, 226, 227, 308, 310, 312, 315, 322, 323, 325, 329, 332, 337, 338, 345, 346], "create_working_directori": 24, "work": [24, 42, 69, 70, 76, 106, 118, 246, 250, 299, 308, 309, 311, 312, 314, 316, 322, 323, 331, 332, 333, 335, 337, 339], "directori": [24, 69, 70, 76, 311, 312, 313, 318, 319, 320, 333], "regist": [26, 31, 32, 33, 34, 104, 105, 106, 118, 309, 335], "observer_nam": [27, 33, 34, 51, 72, 330], "delet": [27, 28, 333], "run": [5, 19, 27, 31, 32, 33, 34, 50, 60, 67, 68, 69, 70, 76, 104, 106, 118, 144, 307, 308, 309, 310, 311, 312, 332, 333, 335, 337, 338], "script": [5, 27, 31, 33, 34, 60, 67, 68, 69, 70, 71, 75, 109, 118, 143, 204, 209, 237, 255, 261, 307, 313, 317, 333, 337, 338], "take": [27, 28, 31, 32, 33, 34, 60, 227, 306, 307, 308, 315, 325, 328, 329, 331, 332, 335, 338, 339], "pass": [27, 31, 33, 34, 51, 60, 80, 84, 104, 312, 318, 319, 320, 331, 338], "locat": [27, 33, 34, 75, 251, 259, 312, 345, 346], "note": [27, 33, 34, 54, 60, 61, 72, 76, 137, 144, 150], "must": [27, 33, 34, 309, 315, 327, 328, 329], "accept": [27, 33, 34, 60, 307], "port": [27, 33, 34, 60, 61, 72], "password": [27, 33, 34, 60, 61, 72], "problem_nam": [28, 307, 327, 331], "configur": [28, 31, 34, 105], "dictionari": [60, 331], "problem_factori": [31, 70, 331, 344, 345, 346], "only_avail": [], "includ": [9, 19, 118, 309, 310, 313, 316, 317, 328, 333, 336, 337, 338, 339], "can": [5, 31, 32, 33, 42, 50, 60, 72, 84, 118, 179, 200, 201, 205, 210, 307, 308, 309, 311, 312, 313, 322, 323, 325, 327, 328, 331, 332, 333, 335, 336, 337, 338, 343], "import": [32, 55, 75, 106, 194, 195, 307, 309, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 331, 333, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346], "directli": [243, 312, 336], "problem_list": [], "repositori": [32, 52, 53, 54, 55, 102, 115, 153, 237, 243, 306, 308, 309, 310, 313, 318, 331, 333, 335], "otherwis": [47, 79, 312, 319, 320], "user": [33, 54, 60, 137, 144, 150, 178, 293, 308, 312, 331, 332, 333, 335, 336, 338], "readili": [], "conda_environment_nam": [31, 70, 307, 338], "python_path": [31, 33, 69, 70, 338], "conda": [5, 31, 33, 69, 70, 109, 118, 255, 261, 308, 310, 313, 318, 332, 336], "environ": [5, 31, 32, 33, 54, 69, 70, 109, 255, 261, 306, 308, 309, 310, 312, 313, 327, 332, 336, 337], "python": [31, 33, 42, 69, 70, 74, 97, 106, 118, 136, 143, 149, 214, 306, 307, 309, 310, 317], "With": [31, 33, 337, 338], "instanti": [31, 33, 34, 51, 72, 103, 104, 106, 308, 332, 333, 337, 338], "separ": [31, 33], "also": [31, 118, 143, 307, 309, 310, 313, 318, 319, 320, 328, 331, 333, 335, 337, 338, 343], "later": 31, "append": [31, 33, 70, 332, 333], "overwrit": [31, 54, 76, 104, 106, 333, 338], "exist": [31, 54, 55, 307, 312, 331], "quiet": [32, 104, 312], "correspond": [32, 110, 116, 157, 262, 312, 325], "objective_repositori": [32, 307, 309, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 328, 329, 331, 335, 336, 338, 339, 340, 343, 344, 345, 346], "yaml": 32, "said": [32, 307, 308, 318, 332, 338], "enviro": [32, 307, 308, 332, 338], "sinc": [32, 80, 118, 293, 307, 308, 311, 312, 316, 317, 318, 328, 332, 335, 337, 338, 339], "t": [32, 74, 121, 136, 143, 149, 214, 217, 218, 306, 307, 310, 311, 312, 316, 317, 318, 333, 336, 337, 338], "depend": [5, 32, 307, 312, 327, 335, 336], "instal": [32, 53, 137, 144, 150, 310, 312, 319, 320, 327, 331, 335, 336, 337, 338], "squelch": [32, 104], "feedback": [32, 104, 312], "creation": [32, 37, 104, 307, 328, 344], "registr": [32, 104, 106, 109, 204, 209, 255, 261, 307, 337, 338], "conda_environment_loc": 33, "extern": [33, 50, 51, 71, 103, 335], "externalobserv": [33, 330], "relev": [33, 312, 318, 328, 331, 338], "script_file_nam": 34, "run_script": [34, 60, 69, 70], "call": [34, 37, 54, 60, 71, 72, 104, 109, 137, 144, 150, 255, 261, 307, 308, 309, 310, 311, 312, 318, 331, 333, 335, 336], "monitor": 37, "progress": [37, 54, 84, 332], "valu": [37, 74, 96, 97, 104, 106, 161, 162, 168, 253, 312, 318, 321, 328, 331], "decis": 37, "variabl": [37, 54, 205, 210, 312, 318, 328], "iter": [37, 42, 308, 332, 335, 337, 340], "np": [37, 106, 237, 256, 307, 308, 309, 310, 315, 316, 317, 318, 321, 322, 323, 324, 327, 328, 329, 331, 332, 333, 336, 338, 339, 340, 343, 344, 345, 346], "ndarrai": [37, 166, 224, 225, 226, 228, 229, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 307, 308, 331, 332, 333, 338], "y": [37, 51, 74, 106, 162, 168, 307, 308, 316, 317, 321, 322, 323, 324, 331, 332, 333], "everi": [37, 333], "time": [37, 61, 307, 312, 325, 333, 344], "initialize_observ": [37, 51, 333], "problem_setup_info": [37, 333], "caller_info": [37, 51, 106, 333, 337, 338], "x0": [19, 37, 51, 307, 308, 309, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 331, 332, 333, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346], "y0": [19, 37, 51, 308, 318, 327, 331, 332, 333, 335, 337, 338, 339, 340, 343, 344, 345, 346], "seed": [37, 51, 104, 106, 184, 229, 299, 307, 333, 338], "necessari": [37, 76, 307, 318, 319, 320, 338], "finish": [37, 51, 312, 325, 333], "perform": [37, 96, 97, 110, 137, 150, 205, 210, 308, 310, 312, 325, 331, 332, 337, 339, 340], "ani": [37, 60, 104, 106, 172, 173, 307, 312, 329, 331, 333, 335, 337, 338], "cleanup": 37, "final": [37, 333], "step": [37, 308, 318, 331, 337, 338], "complet": [37, 312, 338], "model": [39, 75, 115, 116, 117, 161, 162, 174, 178, 180, 306, 307, 312, 313, 339], "check": [39, 56, 75, 78, 259, 308, 312, 313, 319, 320, 321, 328, 332, 333, 335, 336, 337, 338], "inde": [39, 288, 312, 319, 320, 337, 338], "gener": [41, 42, 60, 69, 70, 94, 95, 96, 97, 104, 106, 262, 306, 312, 339], "chunk_siz": 42, "element": [42, 331], "3": [42, 156, 157, 307, 309, 310, 312, 315, 327, 329, 331, 333, 335, 338, 339, 340, 343], "12": [42, 75, 124, 192, 194, 195, 200, 201, 306], "replac": [42, 78, 80, 200, 201, 225, 313, 331, 345, 346], "built": [42, 160, 309], "itertool": 42, "doc": [42, 54, 312], "html": [42, 237, 306, 331, 335], "yield": [42, 115, 116, 117, 306], "tupl": [42, 78, 79, 256, 307, 338], "equal": [42, 78, 337], "exampl": [42, 55, 57, 78, 80, 106, 109, 258, 299, 307, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 331, 335, 336, 337, 344], "4": [42, 167, 180, 306, 311, 317, 335], "5": [42, 76, 109, 110, 111, 209, 211, 249, 309, 310, 312, 314, 315, 328, 333, 335, 337, 338, 344], "6": [42, 306, 312, 321, 331, 335], "7": [42, 76, 312, 319, 320, 335], "8": [42, 115, 116, 117, 306, 312, 335], "9": [42, 306, 307, 309, 310, 312, 316, 331, 335, 336, 338], "rdkit": [44, 45, 46, 47, 55, 202, 204, 205, 207, 209, 210, 310, 314, 316, 322, 323, 324, 338], "selfies_str": [45, 48], "chem": [45, 46, 47, 121, 205, 209, 210, 217, 218], "mol": [45, 46, 47], "convert": [45, 46, 47, 60, 156, 157, 162, 167], "selfi": [45, 47, 48, 49, 116, 122, 196, 204, 205, 209, 210, 219, 310, 322, 323], "strict": [45, 46, 48, 49, 54, 78], "error": [45, 46, 48, 49, 54, 75], "fail": [45, 205, 210, 337], "decod": [45, 172, 178, 179], "smiles_str": [46, 48, 49], "cannot": [46, 48, 49, 205, 210], "pars": [46, 48, 49, 81, 82, 83, 84, 205, 210, 226], "molecule_str": 47, "from_selfi": [47, 205, 210], "assum": [47, 80, 205, 210, 293, 307, 308, 312, 313, 319, 320, 327, 331, 332, 335], "translat": [48, 49], "els": [48, 49, 338], "those": [48, 49], "aspuru": [48, 49, 306], "guzik": [48, 49, 306], "lab": [48, 49], "group": [48, 49], "isol": [5, 50, 51, 103, 104, 106, 122, 288, 307, 310, 318, 327, 331, 333, 338], "kwargs_for_observ": 51, "send": [51, 72], "verifi": [51, 56, 333], "wa": [51, 53, 80, 194, 195, 308, 312, 317, 325, 331, 332], "correctli": [51, 311], "setup_info": 51, "start": [51, 60, 71, 72, 200, 201, 312, 313, 331, 333, 335, 336, 337, 338], "close": [51, 106, 317, 321, 322, 323, 324], "__getattr__": 51, "__name": 51, "retriev": [51, 72, 123], "attribut": [51, 72, 172, 173, 312, 331], "underli": 51, "download": [52, 53, 54, 56, 118, 307, 311, 313, 318, 331], "github": [52, 53, 54, 55, 118, 307, 309, 310, 312, 313, 318, 338], "pygithub": [53, 55, 318], "pip": [53, 118, 307, 309, 310, 312, 318, 336, 338], "most": [53, 159, 314], "code": [53, 56, 174, 200, 201, 307, 312, 318, 335, 338], "taken": [53, 243, 313, 324, 336], "adapt": [53, 306, 312, 340], "gist": 53, "com": [53, 54, 118, 307, 309, 310, 311, 312, 318, 338], "pdashford": 53, "2e4bcd4fc2343e2fd03efe4da17f577d": 53, "permalink_comment_id": 53, "4274705": 53, "gistcom": 53, "repository_nam": 54, "file_path_in_repositori": 54, "download_path_for_fil": 54, "tag": [54, 55], "master": [54, 309, 338], "commit_sha": [54, 55], "exist_ok": [54, 312, 333], "parent_folders_exist_ok": 54, "i": [54, 74, 110, 136, 143, 149, 161, 205, 210, 214, 253, 262, 306, 308, 310, 312, 313, 316, 320, 329, 332, 333, 338], "repo": [54, 118, 309], "download_path": 54, "branch": [54, 55, 309], "sha": [54, 55], "commit": [54, 55, 313], "exists_ok": 54, "parent": [54, 312, 313, 333, 344], "thei": [19, 54, 75, 194, 195, 196, 312, 321, 333], "do": [54, 118, 194, 195, 307, 308, 312, 318, 321, 325, 332, 336, 338], "except": [54, 61, 72, 307], "github_token_for_poli": [54, 318], "doe": [54, 194, 195], "try": [54, 307, 319, 320], "without": [54, 104, 106, 286, 308, 320, 332, 337, 338], "rate": 54, "limit": [54, 259, 313, 318], "60": 54, "request": [54, 312], "per": 54, "hour": 54, "anonym": [54, 318], "To": [54, 307, 309, 310, 311, 312, 321, 338], "token": [54, 167, 205, 210, 225, 227, 307, 318, 325, 335, 338, 345, 346], "like": [54, 106, 118, 246, 307, 308, 311, 317, 325, 328, 332, 333, 335, 336, 337, 338, 339], "follow": [9, 19, 54, 74, 307, 308, 309, 311, 312, 318, 319, 320, 327, 328, 331, 332, 335, 337, 338, 343], "instruct": [54, 307, 308, 335], "here": [54, 307, 310, 312, 318, 331, 336, 338, 344], "en": [54, 258, 331, 335], "authent": [54, 60, 61], "keep": [54, 80, 235, 319, 320], "your": [5, 54, 118, 308, 311, 312, 313, 317, 318, 319, 320, 327, 333, 336], "account": 54, "secur": 54, "person": [54, 318], "fine": [54, 309], "grain": 54, "get_repo": 55, "release_2023_09": 55, "068441957858f786c227825d90eb2c43f4f2b000": 55, "internet": 56, "reproduc": 56, "purpos": 56, "make": [56, 235, 309, 311, 312, 313, 318, 325, 337, 338, 344], "sure": [56, 309, 311, 312, 313, 318, 325, 333, 337, 338], "malici": 56, "being": [56, 235, 311, 313, 318], "filepath": 57, "read_mod": 57, "rb": 57, "md5": [57, 313], "hex": 57, "digest": 57, "open": [57, 200, 201, 312, 333], "binari": [57, 76, 118, 137, 144, 150, 312, 318, 319, 320], "form": [9, 57, 312], "mode": [57, 77], "read": [57, 76, 169, 312, 333, 337], "hex_digest": 57, "txt": [57, 76, 80, 307, 311, 312, 318, 319, 320, 333], "d41d8cd98f00b204e9800998ecf8427": 57, "wrap": [58, 59, 338], "interprocess": [58, 59], "commun": [5, 58, 59, 60, 103, 307], "kwargs_for_factori": [60, 104, 106], "connect": [60, 61, 72, 178], "inter": 60, "These": [60, 307, 310, 312, 313, 314, 318, 328, 331, 333, 335], "inner": 60, "up": [60, 61, 308, 316, 317, 325, 332, 333, 338], "listen": 60, "random": [60, 94, 95, 96, 97, 104, 106, 308, 310, 332, 335, 337, 339, 340, 343, 344, 346], "subprocess": [60, 312], "expect": [5, 60, 75, 76, 77, 80, 118, 137, 144, 150, 307, 312, 318, 319, 320, 333, 338], "well": [60, 309, 312, 316, 336, 337, 339], "other": [60, 205, 210, 307, 311, 331, 333, 336, 337, 338], "objective_factori": [60, 286, 307, 309, 318, 327, 333, 335, 337, 338], "determin": 60, "client": 61, "get": [61, 71, 84, 307, 308, 312, 314, 332, 333, 335, 337, 338], "eoferror": 61, "host": 61, "readi": [61, 162], "yet": [61, 307, 332], "connectionrefusederror": 61, "refus": 61, "attempt": 61, "establish": [61, 72], "retri": 61, "befor": [61, 69, 331, 337, 338], "conda_environ": 69, "cwd": [69, 70, 312], "activ": [69, 307, 309, 310, 318, 333], "ad": [69, 118, 286, 317, 333, 338], "current": [69, 327, 335, 336], "either": [70, 116, 122, 219, 312, 318, 327, 333, 343], "mother": [71, 72], "receiv": 72, "wait": [72, 338], "occur": 72, "sent": 72, "back": [72, 223], "quit": [72, 307, 313, 335], "messag": [72, 104], "encod": [74, 165, 166, 178, 179, 318], "For": [74, 80, 118, 161, 192, 200, 201, 259, 293, 307, 310, 312, 317, 318, 328, 333, 335, 336, 338, 340], "amino_acid": 74, "n": [74, 115, 116, 117, 259, 306, 309, 310, 312, 328, 329, 333], "d": [74, 200, 201, 237, 253, 306, 311, 328, 333], "c": [74, 115, 116, 117, 306, 309, 312, 316, 321, 322, 323, 324, 333, 336, 338], "q": [74, 306, 333], "h": [74, 109, 110, 111, 228, 306, 324, 333, 338], "k": [74, 121, 204, 217, 218, 249, 306, 333], "m": [74, 167, 200, 201, 306, 312, 333], "p": [74, 306, 333], "v": [74, 76, 333], "measur": [75, 161, 312, 322, 323], "stabil": [75, 76, 139, 143, 144, 146, 149, 200, 201, 212, 214, 306, 309, 310, 312, 314, 319, 336], "sasa": [75, 76, 132, 136, 137, 138, 146, 149, 150, 151, 212, 214, 310, 314, 319, 320], "foldxinterfac": 75, "queri": [75, 307, 308, 313, 315, 316, 317, 318, 321, 322, 323, 324, 325, 327, 328, 329, 332, 338], "heavili": [5, 75, 312], "inspir": [75, 312], "wai": [19, 75, 308, 309, 312, 332, 333, 335, 336], "lambo": [75, 118, 124, 192, 194, 195, 196, 310, 312, 314, 331], "automat": [75, 106, 306, 307, 311], "acceler": [75, 124, 192, 194, 195, 306], "bayesian": [75, 124, 192, 194, 195, 293, 306, 308, 310, 332], "biolog": [75, 124, 192, 194, 195, 306], "design": [75, 115, 116, 117, 124, 178, 192, 194, 195, 306, 307, 308, 311, 314, 316, 331, 332, 335, 338], "withdenois": 75, "autoencod": [75, 124, 178, 192, 194, 195, 306, 339], "stanton": [75, 124, 192, 194, 195, 306, 310, 311, 312, 321, 331], "samuel": [75, 124, 192, 194, 195, 306], "weslei": [75, 124, 192, 194, 195, 306], "maddox": [75, 124, 192, 194, 195, 306], "nate": [75, 124, 192, 194, 195, 306], "gruver": [75, 124, 192, 194, 195, 306], "phillip": [75, 124, 192, 194, 195, 306], "maffetton": [75, 124, 192, 194, 195, 306], "emili": [75, 124, 192, 194, 195, 306], "delanei": [75, 124, 192, 194, 195, 306], "peyton": [75, 124, 192, 194, 195, 306], "greensid": [75, 124, 192, 194, 195, 306], "andrew": [75, 124, 192, 194, 195, 306], "gordon": [75, 124, 192, 194, 195, 306], "wilson": [75, 124, 192, 194, 195, 306], "arxiv": [75, 124, 192, 194, 195, 306], "juli": [75, 124, 192, 194, 195], "ab": [75, 124, 192, 194, 195, 306], "2203": [75, 124, 192, 194, 195, 306], "12742": [75, 124, 192, 194, 195, 306], "samuelstanton": [75, 118, 318], "working_dir": [76, 312], "interact": [76, 312], "engin": [76, 237, 339], "softwar": [76, 310, 311], "where": [76, 109, 110, 111, 179, 307, 308, 310, 312, 325, 332, 336], "store": [76, 313, 331, 336], "pdb_file": 76, "remove_and_renam": 76, "ph": [76, 312, 319, 320], "remove_heteroatom": 76, "_repair_if_necessary_and_provide_path": 76, "_simulate_mut": 76, "_read_energi": 76, "_compute_sasa": 76, "solvent": [76, 132, 137, 138, 146, 150, 151, 212, 306, 310, 312, 314], "surfac": [76, 132, 137, 138, 146, 150, 151, 212, 310, 312, 314, 319], "area": [76, 132, 137, 138, 146, 150, 151, 212, 310, 312, 314, 319], "compute_st": 76, "structur": [76, 82, 83, 84, 118, 144, 312, 317, 333], "compute_sasa": 76, "compute_stability_and_sasa": 76, "singl": [76, 80, 200, 201, 237, 306, 310, 313, 314, 321, 322, 323, 331, 333, 339, 343], "copy_foldx_fil": 76, "copi": [76, 307, 308, 312, 332, 344], "write_mutations_to_fil": 76, "wildtype_resiud": 76, "output_dir": 76, "write": [76, 118, 307, 309, 312, 317, 326, 330, 333, 334, 338, 341, 342], "stdout": 76, "previou": [76, 104, 106, 312, 333, 337], "reli": [76, 286, 328], "rotabas": [76, 311, 312, 318, 319, 320], "longer": 76, "manipul": [77, 307, 309, 310], "accord": [77, 160, 312, 335, 338], "certain": [77, 307, 310, 312, 316, 337], "first": [77, 78, 80, 307, 312, 315, 331, 332, 337, 338], "letter": [77, 80, 109, 110, 111, 310, 312, 314, 315, 338], "second": [77, 78, 80, 170, 312, 337, 338], "posit": [77, 78, 80, 159, 164, 308, 312, 313, 331, 332, 335], "third": [77, 80], "chain": [77, 80, 312], "fourth": [77, 80], "mutant": [77, 79, 80, 200, 201, 308, 312, 332], "foldxsuit": [77, 311, 312], "crg": [77, 311, 312], "eu": [77, 311, 312], "string_1": 78, "string_2": 78, "edit": [78, 200, 201, 313], "oper": [78, 311, 337], "assertionerror": [78, 337], "abc": 78, "abd": 78, "def": [78, 307, 308, 332, 333, 338], "wildtype_pdb_fil": [79, 319, 320], "mutated_residue_str": [79, 80], "return_hamming_dist": 79, "find": [79, 109, 110, 111, 118, 307, 313, 316, 317, 333, 335, 337], "closest": 79, "ham": 79, "distanc": [79, 80, 110, 313, 315], "along": 79, "best": [79, 308, 331, 332, 340, 344], "candid": [79, 308], "found": [79, 309, 312, 331, 335, 338], "bio": [80, 83, 84, 312], "individual_list": [80, 312], "levenshtein": 80, "track": [80, 306], "written": 80, "line": [80, 310, 312], "ea1r": 80, "still": [80, 307, 336], "need": [9, 80, 118, 307, 311, 312, 317, 318, 319, 320, 331, 333, 337], "dummi": 80, "itself": [80, 307, 309], "ecd": 80, "acd": 80, "would": [80, 307, 312, 313, 333, 338], "ea1a": 80, "load": [81, 105, 153, 161, 170, 312, 333], "them": [81, 118, 293, 307, 308, 309, 312, 313, 314, 317, 332, 335], "path_to_pdb": [82, 83, 84], "structure_nam": [82, 83, 84], "done": [84, 118, 312, 318, 321, 335], "quietli": 84, "some": [84, 174, 196, 293, 309, 310, 312, 318, 328, 333, 335, 338], "get_structur": [84, 312], "pdbparser": [84, 312], "numpi": [96, 226, 307, 309, 310, 315, 316, 317, 318, 321, 322, 323, 324, 327, 328, 329, 333, 336, 338, 339, 343, 344, 345, 346], "obj": [], "dynam": 307, "intern": [306, 307, 324, 327], "constructor": [], "factory_kwarg": [], "processwrapp": 103, "how": [118, 307, 308, 309, 310, 312, 314, 331, 332, 333, 335, 337, 338], "objective_nam": [], "loop": [286, 306, 339], "process_wrapp": 103, "observer_init_info": 104, "force_regist": [104, 106], "force_isol": [104, 106, 116, 122, 137, 144, 150, 184, 196, 219], "instantiant": 104, "associ": [104, 306, 331, 336], "caller": [104, 106, 333], "forward": [104, 106, 333], "logger": [104, 106], "ask": [104, 106], "confirm": [104, 106], "By": [104, 205, 210, 256, 307, 308, 319, 320, 337, 339, 343], "onc": [104, 307, 325, 335, 337, 338], "round": [104, 262, 306], "down": 104, "give": [104, 224, 293, 307, 338], "config": 105, "configpars": 105, "just": [106, 307, 318, 319, 320, 331, 333, 337, 338], "One": [106, 311, 335], "aloha": [106, 309, 310, 314, 331, 332, 335, 338, 344], "arrai": [106, 156, 157, 166, 167, 223, 226, 228, 307, 309, 310, 315, 316, 317, 321, 322, 323, 324, 325, 327, 328, 329, 331, 333, 335, 336, 338], "reshap": [106, 308, 321, 322, 325, 338, 339, 343], "simpl": [109, 110, 111, 115, 116, 117, 160, 204, 205, 209, 210, 307, 308, 331, 332, 335, 337, 338], "goal": [109, 110, 111, 235], "o": [109, 110, 111, 306, 315, 316, 324, 333, 336, 338], "among": [109, 110, 111, 311, 312, 337], "poli__bas": [109, 255, 261], "yml": [109, 118, 255, 261, 318, 338], "simultan": [110, 116, 122, 205, 210, 219, 313], "map": [110, 116], "symbol": [110, 116], "main": [5, 110, 205, 210, 308, 309, 310, 311, 312, 332, 333, 338], "api": [115, 116, 117, 309, 318], "assess": [115, 116, 117, 200, 201, 314], "small": [115, 116, 117, 205, 307, 309, 316, 317, 324, 333, 335, 337], "protein": [115, 116, 117, 136, 143, 144, 149, 200, 201, 214, 306, 309, 311, 313, 316, 317, 335, 336], "easi": [115, 116, 117, 306, 312, 335, 337], "molecular": [115, 116, 117, 136, 143, 149, 214, 306], "better": [115, 116, 117, 306, 312], "benchmark": [19, 115, 116, 117, 237, 255, 259, 306, 310, 314], "ligand": [115, 116, 117, 306, 310, 314, 316], "garc\u00eda": [115, 116, 117, 306, 310, 316], "orteg\u00f3n": [115, 116, 117, 306, 310, 316], "miguel": [115, 116, 117, 306, 310], "gregor": [115, 116, 117, 306], "simm": [115, 116, 117, 306], "austin": [115, 116, 117, 306], "tripp": [115, 116, 117, 306], "jos\u00e9": [115, 116, 117, 200, 201, 306], "hern\u00e1ndez": [115, 116, 117, 306], "lobato": [115, 116, 117, 306], "andrea": [115, 116, 117, 306], "bender": [115, 116, 117, 306], "sergio": [115, 116, 117, 306], "bacallado": [115, 116, 117, 306], "journal": [115, 116, 117, 306], "62": [115, 116, 117, 306], "15": [115, 116, 117, 306, 344], "august": [115, 116, 117, 306], "3486": [115, 116, 117, 306], "3502": [115, 116, 117, 306], "1021": [115, 116, 117, 306], "ac": [115, 116, 117, 306, 325], "jcim": [115, 116, 117, 306], "1c01334": [115, 116, 117, 306], "target_nam": [116, 316, 336], "string_represent": [116, 122, 196, 205, 210, 219, 322, 323], "liter": [116, 122, 184, 196, 205, 210, 219, 259], "There": [118, 331, 333], "sever": [118, 237, 246, 255, 312, 313, 337, 338], "prepare_receptor": 118, "rest": [118, 333, 335], "descript": [118, 333, 338], "show": [118, 309, 312, 331, 338], "center": [118, 317], "websit": [118, 317], "scripp": 118, "edu": 118, "uncompress": [118, 317], "add": [118, 161, 224, 307, 318, 319, 320, 321, 332], "export": [118, 317], "autodock_vina": [118, 317], "bin": [118, 317], "bashrc": [118, 317], "zshrc": [118, 317], "bash": 118, "In": [118, 192, 196, 306, 308, 309, 312, 313, 317, 318, 319, 320, 327, 328, 331, 332, 333, 335, 336, 337, 338, 340, 344], "ccsb": 118, "sh": [118, 317, 338], "thu": [118, 317], "might": [118, 237, 307, 309, 312, 317, 318, 319, 320, 321, 328, 331, 333, 338], "chang": [118, 136, 143, 149, 153, 170, 214, 309, 311, 312, 317, 319, 320, 328], "its": [9, 19, 118, 308, 312, 317, 319, 332, 336, 337, 338], "permiss": [118, 317], "chmod": [118, 317], "abl": [118, 307, 309, 311, 312, 317, 325, 333, 335, 336, 338], "pyscreen": [118, 310, 317], "howev": [118, 313, 317, 338], "sometim": [118, 317], "problemat": [118, 317], "ha": [118, 246, 307, 308, 312, 317, 331, 332, 336, 338, 340], "symlink": [118, 317], "ln": [118, 317], "sf": [118, 317], "easili": [118, 312, 331, 337], "env": [118, 307, 309, 318, 331, 335, 336, 338], "src": [118, 318], "ddr3_dock": 118, "task": [118, 121, 124, 170, 306, 312, 318, 339], "git": [118, 307, 309, 310, 318, 338], "clone": [118, 309, 313, 318, 327], "431b052": [118, 318], "cd": [118, 309, 318], "particular": [118, 196, 212, 318, 328, 331, 333, 336, 337, 338], "proxy_rfp": [118, 318], "proxyrfptask": [118, 318], "rfp": [118, 124, 126, 127, 212, 310, 314], "asset": [118, 318], "fpbase": [118, 318], "And": [118, 331, 338], "now": [118, 307, 309, 312, 335, 338], "py": [5, 118, 259, 308, 309, 312, 331, 332, 333, 335, 336, 337, 338], "query_exampl": 118, "ddr3": 121, "et": [121, 217, 218, 306, 310, 311, 312, 313, 314, 316, 317, 321, 324, 325, 331, 339, 343, 344], "al": [121, 217, 218, 237, 259, 306, 310, 311, 312, 313, 314, 316, 317, 321, 324, 325, 328, 331, 339, 343, 344], "nat": [121, 217, 218], "biol": [121, 217, 218], "1036": [121, 217, 218], "self": [122, 307, 308, 313, 332, 333, 338], "tdcblackbox": [], "denois": [124, 192, 194, 195, 306], "alia": [], "base_candid": [], "specifc": [], "predict": [132, 160, 161, 181, 200, 201, 306, 310, 312, 314, 339], "pair": [136, 149, 214], "biopython": [136, 143, 149, 214, 312, 319, 336], "cock": [136, 143, 149, 214], "pa": [136, 143, 149, 214], "antao": [136, 143, 149, 214], "jt": [136, 143, 149, 214], "chapman": [136, 143, 149, 214], "ba": [136, 143, 149, 214], "cox": [136, 143, 149, 214], "cj": [136, 143, 149, 214], "dalk": [136, 143, 149, 214], "friedberg": [136, 143, 149, 214], "hamelryck": [136, 143, 149, 214], "kauff": [136, 143, 149, 214], "wilczynski": [136, 143, 149, 214], "b": [136, 143, 149, 214, 228, 307, 309, 315, 325, 327, 328, 329, 333, 335, 338], "de": [136, 143, 149, 214, 306], "hoon": [136, 143, 149, 214], "mjl": [136, 143, 149, 214], "2009": [136, 143, 149, 214, 306, 310, 325], "freeli": [136, 143, 149, 214], "tool": [136, 143, 149, 214, 336, 338], "bioinformat": [136, 143, 149, 214], "25": [136, 143, 149, 214], "1422": [136, 143, 149, 214], "1423": [136, 143, 149, 214], "usual": [5, 252, 255, 307, 308, 310, 314, 328, 333, 337, 338, 339], "eager": [137, 150], "v5": [137, 144, 150], "compil": [137, 144, 150, 180, 313], "specif": [137, 144, 150, 328, 335], "foldxblackbox": [], "pre": [143, 308, 309, 313, 319, 320, 336], "20": 306, "shown": [], "core": [307, 308, 330, 331, 332, 337, 338, 344], "through": [144, 308, 309, 332, 335], "total": [144, 160, 312], "cba": [153, 170, 172], "vae": [153, 170, 172, 173, 179, 180, 184, 339], "sb": [153, 170], "bo": 153, "minor": [153, 170], "modif": [153, 170], "conduct": [153, 170], "rm": [153, 170], "creator": [153, 170], "last": [153, 170, 312], "x_aa": [156, 157, 166], "aa_idx": 156, "arn": [156, 157], "becom": [156, 157, 312], "row": [156, 157, 312], "base_seq": 158, "wild": [158, 163, 312], "mtuation": 158, "xt_p": [159, 164], "categor": [159, 164, 182], "probabl": [159, 164], "distribut": [159, 164, 182, 306, 340], "pred": 160, "xt": 160, "predictor": 160, "balaji": 160, "lakshminarayanan": 160, "paper": [160, 172, 306, 336], "scalabl": 160, "uncertainti": [160, 339], "estim": [160, 192, 207, 209, 210, 211, 309, 310, 314], "deep": [160, 200, 201, 306, 339], "ensembl": 160, "2017": [160, 306, 313], "varianc": 160, "random_st": [161, 168], "train_siz": [161, 168], "5000": 161, "return_test": [161, 168], "return_al": 161, "gfp": [161, 162, 163, 169], "test": [161, 237, 308, 328, 332], "ground": [161, 325], "truth": 161, "gp": [161, 184, 185], "partit": [161, 168, 322], "below": [161, 313, 319, 320], "20th": 161, "percentil": [161, 168], "nois": [161, 260, 261, 262, 299, 310, 314, 335], "data_df": 162, "panda": [162, 169, 312], "datafram": [162, 169, 312], "functional_onli": [162, 184], "ignore_stop": [162, 184], "return_str": 162, "raw": 162, "sampl": [164, 229, 306, 329, 333, 339, 345, 346], "aa_str": 165, "pad": [165, 167, 224, 307], "hot": [165, 228], "onehot": 166, "alphabet_s": [166, 308, 332], "dna_str": 167, "base_ord": 167, "atcg": 167, "40": 168, "1000": [168, 337], "df_save_fil": 169, "bright": 169, "author": [170, 192, 310], "credit": 170, "herculean": 170, "go": [170, 310, 311, 338], "aa": [171, 172, 173], "mimic": 172, "kera": [172, 178], "latent_dimension": [172, 173], "enc1_unit": [172, 173, 180], "train": 174, "gaussian": [174, 261, 262, 306, 310, 314, 329, 339], "regress": 174, "sarkisyan": 174, "2016": [174, 306, 325, 339], "plu": [174, 344], "constant": [174, 328], "input_shap": [178, 179], "latent_dim": [178, 179, 180], "variat": [178, 339], "via": [178, 306, 333], "latent": [178, 306, 308, 332, 339], "space": [178, 225, 293, 306, 308, 332, 339, 343], "flatten": [179, 308, 325, 331, 332], "basic": [179, 286, 335, 338], "layer": 179, "n_token": 180, "seq_length": 180, "50": [180, 340], "eps_std": 180, "y_true": [181, 182], "y_pred": [181, 182], "likelihood": 182, "uniqu": [184, 333], "problem_typ": [184, 185], "exact": [192, 308, 332, 338], "logp": [192, 194, 195, 196, 202, 204, 205, 310, 314], "jointli": 192, "quantit": [192, 207, 209, 210, 211, 309, 310, 314], "druglik": [192, 207, 209, 210, 211, 309, 310, 314], "qed": [192, 205, 207, 209, 210, 211, 310, 314], "penal": [192, 196, 310, 314], "solubl": [192, 202, 204, 205, 310, 314], "fair": 192, "comparison": [192, 333], "_exactly_": [194, 195], "adjust": 196, "magic": 196, "empir": [196, 321], "standard": [19, 196, 261, 262, 321, 329], "deviat": [196, 321], "dataset": [196, 237, 306, 321], "todo": [196, 312, 326, 330, 334, 341, 342], "rapid": [200, 201, 306, 310, 314], "sourc": [200, 201, 307], "bird": [200, 201], "ey": [200, 201], "view": [200, 201, 312], "collect": [200, 201, 236, 310, 313], "site": [200, 201, 331, 335, 336], "reader": [200, 201], "consid": [200, 201, 313, 325, 328, 338], "drop": [200, 201, 313, 331, 335], "rosetta": [200, 201, 313], "learn": [200, 201, 306, 313], "blaabjerg": [200, 201, 306, 310, 313], "lass": [200, 201, 306], "maher": [200, 201, 306], "kassem": [200, 201, 306], "lydia": [200, 201, 306], "good": [200, 201, 306, 307, 309, 310, 325, 338], "nicola": [200, 201, 306], "jonsson": [200, 201, 306], "matteo": [200, 201, 306], "cagiada": [200, 201, 306], "kristoff": [200, 201, 306], "johansson": [200, 201, 306], "wouter": [200, 201, 306], "boomsma": [200, 201, 306, 313], "ameli": [200, 201, 306], "stein": [200, 201, 306], "kresten": [200, 201, 306], "lindorff": [200, 201, 306], "larsen": [200, 201, 306], "faraldo": [200, 201], "g\u00f3mez": [200, 201, 306, 339], "detlef": [200, 201], "weigel": [200, 201], "nir": [200, 201], "ben": [200, 201], "tal": [200, 201], "julian": [200, 201, 306], "echav": [200, 201], "elif": [200, 201, 306], "2023": [200, 201, 306, 310, 311, 313], "e82593": [200, 201, 306], "7554": [200, 201, 306], "82593": [200, 201, 306], "whose": [204, 209, 261, 318, 339], "quotient": [204, 310, 314], "descriptor": [204, 338], "both": [204, 209, 312, 319, 320, 337, 338], "poli__chem": [], "want": [307, 308, 312, 319, 320, 335, 337, 338], "local": [246, 308, 309, 327, 333], "environemnt": [], "extra": [307, 336], "interest": [309, 312, 313, 319, 320, 327, 328, 333, 335], "molfromsmil": [205, 210], "known": [19, 205, 210, 322, 331], "silent": [205, 210], "nan": [205, 210, 325], "someth": [205, 210, 307, 325], "than": [205, 210, 293, 337, 338], "continu": [19, 209, 211, 236, 237, 255, 256, 293, 306, 314, 335], "lipinski": [209, 211], "rule": [209, 211, 307], "strongli": [], "advic": 307, "heurist": 211, "discard": 211, "too": 211, "heavi": [211, 307], "pareto": 212, "front": 212, "accessibl": 215, "sa": [215, 310, 314], "toi": [221, 236, 237, 255, 256, 259, 260, 262, 293, 315, 325, 333, 337, 344], "avout": 221, "super": [221, 235, 307, 308, 314, 332, 338], "mario": [221, 225, 235, 306, 314, 338], "bro": [221, 235, 314, 338], "level": [221, 223, 224, 225, 226, 227, 228, 229, 235, 306, 312, 314, 325], "n_pad": 224, "left": 224, "room": 224, "agent": [224, 325], "land": 224, "clean": [225, 312], "remov": [225, 311, 319, 320, 338], "11": [225, 228, 309, 316, 336], "empti": 225, "level_txt": [226, 227], "n_sprite": 228, "integ": [228, 229, 308, 328, 329, 332, 335, 338], "levels_onehot": 229, "probit": 229, "tensor_level": [], "torch": 338, "tensor": [], "level_s": [], "14": 325, "could": [307, 308, 312, 313, 318, 331, 332, 335, 338, 343], "mariogan": [], "jar": 307, "prob_matrix": 231, "item": [231, 304], "sentenc": [], "shape": [9, 307, 308, 309, 315, 327, 328, 329, 332, 335], "z_dim": [], "devic": [], "path_to_state_dict": [], "vaemario": [], "pretrain": [], "landscap": 237, "signatur": 237, "sign": [237, 328], "flip": [237, 328], "becaus": [237, 336, 338], "re": [237, 309, 312, 313, 332, 333, 338], "deal": 237, "ali": [237, 306], "roomi": [237, 259, 306, 310, 328], "2015": [237, 306, 310, 328], "unconstrain": [237, 259, 306], "www": [237, 306], "halifax": 237, "nova": 237, "scotia": 237, "canada": 237, "dalhousi": 237, "univers": 237, "electr": 237, "surjanov": [237, 310], "bingham": [237, 310], "virtual": [237, 325], "sfu": 237, "ca": 237, "ssurjano": 237, "linebo": [243, 328, 343], "kirschnj": 243, "xy": [246, 250, 251], "cross": 246, "trai": 246, "maxima": [246, 250], "quilt": 246, "pattern": 246, "2d": [246, 250, 251, 293], "alpha": [249, 309, 339], "veri": 250, "flat": 250, "pi": 250, "egg": 251, "holder": 251, "especi": [251, 310], "difficult": 251, "know": [251, 312, 331], "optima": [251, 259], "squar": 252, "norm": 252, "shift": 252, "awai": [252, 313], "bit": [252, 312], "normal": [253, 306, 336, 340], "903534": 253, "39": [253, 318], "16599": 253, "divid": 253, "dimens": [255, 256, 259, 293, 306, 328, 339], "focu": [255, 312, 331, 335], "ones": 255, "dimension": [255, 293, 306], "function_nam": [256, 328, 339, 343], "n_dimens": [256, 328, 339, 340, 343], "embed_in": [256, 259, 328], "randomli": [256, 308, 328, 331, 332, 335, 344, 345, 346], "embed": [256, 293, 328], "emb": [256, 293, 328], "toycontinuousproblem": 256, "bound": 256, "lower": [256, 293], "upper": 256, "seri": 258, "testb": 258, "wikipedia": 258, "wiki": 258, "test_functions_for_optim": 258, "ackley_function_01": [259, 310, 314, 328, 339, 343], "alpine_01": [259, 328], "alpine_02": [259, 328], "bent_cigar": [259, 328], "brown": [259, 328], "chung_reynold": [259, 328], "cosine_mixtur": [259, 328], "deb_01": [259, 328], "deb_02": [259, 328], "deflected_corrugated_spr": [259, 328], "styblinski_tang": 259, "shifted_spher": [259, 328], "easom": [259, 310, 314, 328], "cross_in_trai": [259, 328], "egg_hold": [259, 328], "camelback_2d": [259, 328], "n_dim": 259, "definit": [259, 328], "white": [260, 261, 299, 310, 314, 335], "vector": 262, "downward": 262, "exemplifi": 286, "Not": 286, "come": [9, 286, 316, 335, 337], "benefit": 286, "intellisens": 286, "spawn": [288, 307], "higher": [293, 312], "afford": 293, "intrins": 293, "actual": [293, 328], "readm": [], "verbatum": [], "fullnam": 304, "escap": 304, "underlin": 304, "block": 304, "rubric": 304, "endfor": 304, "endif": 304, "endblock": 304, "ar15": 306, "url": [306, 310], "bkj": 306, "maximilian": 306, "balandat": [306, 339, 343], "brian": 306, "karrer": 306, "daniel": 306, "jiang": 306, "daulton": 306, "benjamin": 306, "letham": 306, "eytan": 306, "bakshi": 306, "botorch": [306, 310, 339, 343], "framework": 306, "effici": [306, 333, 339], "mont": 306, "carlo": 306, "decemb": 306, "2020": [306, 310, 339, 343, 344], "1910": 306, "06403": 306, "cs": 306, "math": 306, "stat": 306, "bkg": 306, "23": [306, 309], "bf17": 306, "je": 306, "frellsen": [306, 313], "spheric": 306, "convolut": 306, "applic": 306, "guyon": 306, "u": [306, 333], "von": 306, "luxburg": 306, "bengio": 306, "wallach": 306, "fergu": 306, "vishwanathan": 306, "garnett": 306, "editor": 306, "advanc": 306, "neural": [306, 313], "system": [306, 311, 312], "volum": 306, "30": [306, 328], "curran": 306, "inc": 306, "proceed": 306, "neurip": 306, "cc": [306, 316, 336], "paper_fil": 306, "1113d7a76ffceca1bb350bfe145467c6": 306, "pdf": 306, "dpam02": 306, "deb": [306, 344], "pratap": 306, "agarw": 306, "meyarivan": 306, "fast": 306, "elitist": 306, "multiobject": 306, "genet": [306, 344], "nsga": 306, "ii": 306, "ieee": 306, "transact": 306, "evolutionari": [306, 308, 310, 332, 340], "182": 306, "197": 306, "april": 306, "2002": [306, 344], "1109": 306, "4235": 306, "996017": 306, "gfsc22": 306, "matter": 306, "practic": 306, "thirti": 306, "sixth": 306, "confer": 306, "openreview": 306, "net": 306, "forum": 306, "yczrdi0y7g": 306, "gost": 306, "22": [306, 312], "dockstr": [306, 310, 314, 331, 335, 336], "gpb": 306, "jacob": 306, "gardner": [306, 339], "geoff": 306, "pleiss": 306, "david": [306, 340], "bindel": 306, "kilian": 306, "weinberg": 306, "gpytorch": [306, 339], "blackbox": 306, "matrix": [306, 340], "infer": 306, "gpu": 306, "2018": [306, 310, 325, 339], "gbwd": 306, "rafael": 306, "bombarelli": [306, 339], "jennif": 306, "wei": 306, "duvenaud": 306, "benjam\u00edn": 306, "s\u00e1nchez": 306, "lengel": 306, "denni": 306, "sheberla": 306, "jorg": 306, "aguilera": 306, "iparraguirr": 306, "timothi": 306, "hirzel": 306, "ryan": 306, "adam": 306, "al\u00e1n": 306, "driven": 306, "central": 306, "268": 306, "276": 306, "februari": 306, "acscentsci": 306, "7b00572": 306, "ho96": 306, "hansen": [306, 340], "ostermei": [306, 340], "arbitrari": 306, "evolut": [306, 344], "strategi": [306, 310, 340], "covari": [306, 340], "312": 306, "317": 306, "1996": [306, 340], "icec": 306, "542381": 306, "hfg": 306, "21": [306, 331, 335], "machin": 306, "drug": [306, 335], "discoveri": 306, "develop": [306, 307, 308, 332], "fifth": 306, "2021": [306, 317, 324], "8nvgnornowr": 306, "jrhernandezgarcia": 306, "moksh": 306, "jain": [306, 311], "sharath": 306, "chandra": 306, "raparthi": 306, "alex": 306, "hern": 306, "\u00e1": 306, "ndez": 306, "garc": 306, "\u0131": 306, "jarrid": 306, "rector": 306, "brook": [306, 310], "yoshua": 306, "santiago": 306, "miret": 306, "emmanuel": 306, "gf": 306, "low": [19, 306], "kraus": 306, "emma": 306, "brunskil": 306, "kyunghyun": 306, "cho": 306, "barbara": 306, "engelhardt": 306, "sivan": 306, "sabato": 306, "jonathan": 306, "scarlett": 306, "40th": 306, "202": 306, "14631": 306, "14653": 306, "pmlr": 306, "29": 306, "jul": 306, "mlr": 306, "press": 306, "v202": 306, "jain23a": 306, "kmh": 306, "19": 306, "johann": 306, "kirschner": [306, 343], "mojmir": 306, "mutni": 306, "nicol": 306, "hiller": 306, "rasmu": 306, "ischebeck": 306, "safe": 306, "high": [19, 306], "subspac": 306, "36th": 306, "3429": 306, "3438": 306, "2019": [306, 310, 343], "v97": 306, "kirschner19a": 306, "ssw": 306, "16": [306, 312], "bobak": 306, "shahriari": [306, 339], "kevin": 306, "swerski": 306, "ziyu": 306, "wang": 306, "nando": 306, "freita": 306, "human": [306, 339], "out": [306, 315, 321, 322, 323, 324, 328, 329, 335, 339], "review": 306, "104": 306, "148": 306, "175": 306, "januari": 306, "jproc": 306, "2494218": 306, "sr73": 306, "shrake": [306, 312], "ruplei": [306, 312], "exposur": 306, "atom": 306, "lysozym": 306, "insulin": 306, "79": 306, "351": 306, "371": 306, "sep": 306, "1973": [306, 312], "1016": 306, "0022": 306, "2836": 306, "73": 306, "90011": 306, "smg": 306, "preprint": 306, "blankdeb20": 306, "blank": [306, 344], "pymoo": [306, 344], "89497": 306, "89509": 306, "tutori": [307, 312, 331, 333, 337, 338, 339], "cover": 307, "what": [307, 331, 337], "look": [307, 308, 332, 338], "poli": [307, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 331, 332, 333, 336, 337, 339, 340, 343, 344, 345, 346], "live": [307, 336], "goe": [307, 312, 338], "exactli": [307, 308, 318, 321, 332], "doesn": [307, 333, 336], "mani": [9, 307, 344], "think": 307, "project": [307, 312], "ll": [307, 311, 312, 335, 337], "carri": 307, "let": [307, 309, 312, 325, 331, 333, 335, 336, 338], "super_mario_bro": [307, 310, 331, 335], "pt": [307, 313], "level_util": 307, "md": [307, 308], "As": [307, 312, 331, 336, 338], "don": [307, 310, 316, 336], "end": [307, 312, 325, 333, 337], "ignor": 307, "altern": 307, "averag": 307, "abstract_black_box": [307, 338], "abstract_problem_factori": [307, 338], "problem_setup_inform": [333, 338], "pythonpath": [], "runtim": [307, 338], "imagin": [], "your_local_depend": [], "yourblackbox": [], "your_arg": 307, "your_second_arg": 307, "your_kwarg": 307, "yourproblemfactori": [], "chapter": [308, 309, 310, 312, 332, 333, 335, 337, 338], "your_problem": 307, "problem_info": [327, 333, 335, 338], "__name__": [307, 337, 338], "__main__": [307, 337, 338], "registri": [307, 337], "register_problem": [307, 338], "your_problem_factori": [], "your_env": 307, "That": [307, 318], "camel_cas": 307, "under": [307, 309, 311, 317, 328, 338], "tell": 307, "though": 307, "sai": [307, 312, 328, 331, 336, 338], "channel": [307, 338], "machinelearninglifesci": [307, 308, 309, 310, 338], "dev": [307, 309, 310, 312], "java": [307, 338], "poli__mario": 307, "forg": 307, "pytorch": 307, "openjdk": 307, "cpuonli": 307, "click": [307, 310, 314, 335], "moreov": [307, 308, 332], "googl": [307, 310], "colab": [307, 310], "put": [307, 312, 344], "describ": [9, 307, 312, 318, 335, 337], "register": [], "get_problem": [331, 335, 337, 338], "your_arg_1": 307, "mayb": 307, "your_arg_2": 307, "your_factori": 307, "thereof": 307, "At": [19, 312, 333, 335, 338], "point": [307, 312, 333, 335, 338, 339], "wrote": [], "direct": 343, "life": 313, "debug": [309, 327], "vscode": [], "available_problem_factori": 307, "importerror": 307, "share": [307, 308, 309], "feel": [307, 308, 312], "contribut": [307, 308], "case": [308, 309, 312, 315, 327, 328, 329, 331, 332, 333, 335, 338], "poli_baselin": [308, 309, 331, 335, 337, 339, 340, 343, 344, 345, 346], "almost": [308, 332], "trivial": [308, 309, 332, 335, 338], "complic": [308, 332, 336], "likewis": [308, 332], "explain": [308, 332, 333], "abstractsolv": [308, 331, 332], "abstract_solv": [308, 331, 332], "black_box": [308, 309, 313, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 328, 329, 331, 332, 333, 335, 337, 339, 340, 343, 344, 345, 346], "histori": [308, 331, 332, 335, 345, 346], "x0_i": 308, "y0_i": 308, "ingredi": [308, 312, 331, 332], "next_candid": [308, 331, 332, 335], "propos": [308, 332, 335], "solv": [308, 325, 331, 332, 335, 337, 338, 339, 340, 343, 344, 345, 346], "max_it": [308, 331, 332, 335, 337, 339, 340, 343, 344, 345, 346], "next": [308, 310, 312, 331, 332, 333, 335, 337, 338], "solut": [308, 322, 332, 344], "notimplementederror": [308, 332], "subclass": [307, 308, 332], "100": [308, 332, 335, 344, 345, 346], "rang": [308, 309, 329, 332], "callback": 308, "pre_step_callback": 308, "turn": 308, "updat": [308, 331, 333, 335, 340], "_": [308, 309, 344], "post": 308, "post_step_callback": 308, "get_best_perform": [308, 331], "break_at_perform": [308, 337], "break": [308, 337], "leverag": [308, 332], "fact": [308, 332], "simplest": [308, 331, 332], "random_mut": [308, 331, 332, 335, 337], "len": [308, 332], "best_x": [308, 332], "argmax": [308, 332], "alwai": [308, 315, 328, 329, 332, 336, 338], "next_x": [308, 332], "po": [308, 332], "randint": [308, 332], "choic": [308, 332, 344], "pretti": [308, 312, 332], "lean": [308, 332], "notic": [308, 321, 332, 333], "sort": [308, 327, 332, 344], "logic": [5, 307, 308, 332, 333, 336], "noth": [308, 331, 332], "worri": [308, 310, 332, 338], "slightli": [308, 332, 338], "unfortun": [309, 316], "linux": [309, 316, 336], "maco": [309, 316], "top": [309, 310, 335], "therefor": [309, 336], "anaconda": 309, "went": 309, "okai": [309, 313], "anoth": [309, 312, 331, 335], "right": [309, 333, 336], "bleed": 309, "edg": 309, "while": [235, 309, 331], "stabl": [309, 331, 335], "releas": [309, 312], "shell": [307, 309, 338], "home": [309, 311, 312, 318, 319, 320], "poli_object": [307, 309, 313, 338], "phase": 309, "short": [309, 312], "futur": [309, 312], "everyth": [309, 311, 333], "requisit": 309, "openbabel": [309, 316], "white_nois": [309, 329, 331, 335], "minimal_working_exampl": 309, "plenti": 309, "complex": [5, 307, 309, 312], "rasp": [310, 313, 314, 331, 335], "pytdc": 310, "accces": 310, "featur": [310, 313], "clash": [310, 312], "discuss": [310, 333, 335, 337, 338], "baselin": [310, 331, 333, 335, 336, 337, 339, 344], "place": [310, 311, 312], "fresh": 310, "full": [310, 312], "drawn": [310, 314], "unit": [310, 314], "word": [310, 314, 325, 338], "spell": [310, 314], "3pbl": [310, 314, 317], "implmenet": [310, 314], "fluoresc": [310, 312, 314, 331], "On": 310, "focus": 310, "cma": 310, "es": 310, "vanilla": 310, "acquisit": [310, 339, 343], "over": 310, "encourag": 310, "gonzalezduquebartelsmichael": 310, "2024": [306, 310, 312], "gonz\u00e1lez": 310, "duqu": 310, "bartel": 310, "simon": [306, 310], "michael": [306, 310], "richard": 310, "month": 310, "jan": 310, "titl": 310, "libari": 310, "year": 310, "drd3_dock": [310, 331, 335], "graff": 310, "shakhnovich": 310, "foldx_": 310, "gfp_cba": [310, 331, 335], "park": 310, "listgarten": 310, "gfp_select": [310, 331, 335], "penalized_logp_lambo": [310, 331, 335], "rdkit_": 310, "rfp_foldx_": 310, "sa_tdc": [307, 310, 331, 335], "ertl": 310, "schuffenhau": 310, "volz": [306, 310, 325], "toy_continuous_problem": [309, 310, 331, 335], "2013": 310, "coupl": [310, 338], "guid": 310, "subset": [311, 328, 340], "suit": [307, 311], "thing": [307, 311, 312, 336, 338], "dg": 311, "metric": [235, 311], "recent": 311, "academ": 311, "licens": 311, "zip": 311, "auxiliari": 311, "renam": [311, 312, 318, 319, 320], "help": 311, "mac": [311, 336], "warn": [311, 336], "unverifi": 311, "quarantin": 311, "command": [311, 312, 319, 320], "own": [5, 307, 311], "risk": 311, "xattr": 311, "appl": 311, "familiar": 312, "ourselv": 312, "alreadi": [312, 331, 335], "refresh": 312, "essenti": [312, 333], "notebook": 312, "pathlib": [312, 313, 318, 319, 320, 331, 333], "shutil": 312, "path_to_foldx_fil": 312, "this_dir": [312, 333], "resolv": [312, 331, 333], "tmp": 312, "mkdir": [312, 333], "copyfil": 312, "respons": 312, "transport": 312, "oxigen": 312, "sperm": 312, "whale": 312, "101m": 312, "hand": 312, "urllib": 312, "web_address": 312, "rcsb": 312, "urlretriev": 312, "Of": [312, 335], "cours": [235, 312, 335], "long": [312, 331, 338], "aid": 312, "pdb_name": 312, "choos": 312, "repairpdb": [312, 319, 320], "littl": 312, "consumig": 312, "400sec": 312, "build": [312, 335, 338, 339], "101m_repair": 312, "repair_cmd": 312, "water": [312, 319, 320, 322], "crystal": [312, 319, 320], "tree": 312, "fxout": 312, "unrecognized_molecul": 312, "onward": [312, 339], "inspect": 312, "parser": 312, "get_residu": 312, "dive": [5, 312, 335, 337], "first_residu": 312, "resnam": 312, "index": 312, "get_par": 312, "met": 312, "extract": 312, "sequtil": 312, "seq1": 312, "original_residu": 312, "chain_id": 312, "position_in_sequ": 312, "mutant_residu": 312, "glycin": 312, "Be": [312, 313], "care": [312, 331, 336], "fire": 312, "did": 312, "modifi": [307, 312], "mutation_list": 312, "residue_idx": 312, "li": 312, "tranform": 312, "position_in_chain": 312, "content": [306, 312], "indiviual_list": 312, "ma0g": 312, "won": [312, 325], "buildmodel": 312, "gibb": 312, "foldx_cmd": 312, "consortium": 312, "jesper": 312, "freder": 312, "joost": 312, "lui": 312, "peter": 312, "vanhe": 312, "erik": 312, "verschueren": 312, "baeten": 312, "javier": 312, "delgado": 312, "francoi": 312, "permut": 312, "concept": 312, "raphael": 312, "gueroi": 312, "backhbond": 312, "142": 312, "58": 312, "sidehbond": 312, "48": 312, "61": 312, "energy_vdw": 312, "179": 312, "63": 312, "electro": 312, "energy_solvp": 312, "245": 312, "28": 312, "energy_solvh": 312, "238": 312, "89": 312, "energy_vdwclash": 312, "42": 312, "energy_tors": 312, "70": 312, "backbone_vdwclash": 312, "158": 312, "entropy_sidec": 312, "105": 312, "87": 312, "entropy_mainc": 312, "231": 312, "69": 312, "bond": 312, "00": 312, "helix": 312, "dipol": 312, "75": 312, "loop_entropi": 312, "cis_bond": 312, "disulfid": 312, "kn": 312, "electrostat": 312, "partial": 312, "coval": 312, "energy_ionis": 312, "56": 312, "entropi": 312, "32": 312, "meta0": 312, "gly": 312, "ok": 312, "wed": 312, "feb": 312, "44": 312, "52": 312, "spend": 312, "96": 312, "valid": 312, "101m_repair_1": 312, "successfulli": 312, "completedprocess": 312, "sjt972": [312, 331, 335, 336], "understanding_foldx": 312, "01": 312, "returncod": 312, "average_101m_repair": 312, "dif_101m_repair": 312, "pdblist_101m_repair": 312, "raw_101m_repair": 312, "wt_101m_repair_1": 312, "raw_": 312, "_repair": [312, 319, 320], "tabl": 312, "quantiti": 312, "column_nam": 312, "backbon": 312, "hbond": 312, "sidechain": 312, "van": 312, "der": 312, "waal": 312, "solvat": 312, "polar": 312, "hydrophob": 312, "mainchain": 312, "sloop_entropi": 312, "mloop_entropi": 312, "torsion": 312, "bridg": 312, "kon": 312, "ionis": 312, "pd": 312, "readlin": 312, "df": 312, "split": 312, "column": 312, "var": 312, "l3": 312, "qk9dx6g958765kmn_2wn34t00000gn": 312, "ipykernel_25734": 312, "1758354106": 312, "deprecationwarn": 312, "pyarrow": 312, "major": 312, "arrow": 312, "interoper": 312, "caus": 312, "pleas": [312, 331, 335, 336], "issu": 312, "54466": 312, "overal": 312, "31": 312, "7457": 312, "34": 312, "3436": 312, "notat": 312, "stand": [312, 335, 338], "again": 312, "wt_structur": 312, "mut_structur": 312, "pdb1": 312, "shrakeruplei": 312, "attach": [312, 333], "8407": 312, "731560227876": 312, "8439": 312, "063468009845": 312, "impact": 312, "databas": 312, "desir": [312, 335], "lesser": 312, "stabler": 312, "correl": 312, "present": [312, 338], "supervis": 313, "approach": 313, "network": [306, 313, 339], "drawback": 313, "similar": 313, "foldx_stabl": [313, 331, 335], "awar": [313, 339], "scale": [313, 328], "easier": 313, "poli__rasp": 313, "correct": [327, 338], "breakpoint": [], "satisfi": [], "root": 318, "3ned": [313, 331], "__file__": 313, "wildtype_pdb_paths_for_rasp": [], "f_rasp": [], "wildtype_str": [], "join": 331, "three": [333, 335], "three_mut": [], "wildtype_sequ": [], "ddg": [], "approx": [], "03": 306, "07": [], "clang": 313, "cmake": 313, "reduc": 313, "pin": 313, "hash": 313, "bd23a0bf627ae9b08842102a5c2e9404b4a81924": 313, "cavity_model_15": 313, "ds_model": 313, "3ccebe87e017b6bd737f88e1943557d128c85616": 313, "against": [313, 316], "checksum": 313, "satur": 313, "mutagenesi": 313, "pmo": 314, "jump": [235, 314], "cap": 315, "prepar": 316, "autodock": 316, "vina": 316, "suppos": 316, "batteri": 316, "even": [316, 338], "poli__dockstr": 336, "canon": 317, "risperidon": [316, 336], "dockstringproblemfactori": 316, "drd2": [316, 336], "risperidone_smil": [], "cc1": [316, 336], "n2ccccc2": [316, 336], "n1": [316, 336], "ccn3ccc": [316, 336], "cc3": [316, 336], "c4": [316, 336], "noc5": [316, 336], "c4c": [316, 336], "c5": [316, 336], "handl": 336, "hood": 317, "abov": [317, 318, 337, 338], "success": 317, "underneath": 318, "poli__tdc": [], "text": [318, 319, 320, 338], "foldx_rfp_lambo": [318, 331, 335], "poli__lambo": 318, "avali": 318, "skip": 318, "decid": 318, "11189": 318, "00587946": 318, "8155": 318, "acces": [319, 324], "foldx_stability_and_sasa": [319, 320, 331, 335], "v4": [319, 320], "filenam": [319, 320], "cach": [319, 320], "your_fil": [319, 320], "heteroatom": [319, 320], "pdbtool": [319, 320], "Then": [], "foldx_sasa": [331, 335], "poli__protein": 336, "carefulli": 321, "zinc": 321, "coeffici": 322, "octanol": 322, "rdkit_logp": [331, 335], "carbon": [321, 322, 323], "6361": 322, "rdkit_q": [331, 335], "35978494": [], "assert": 337, "isclos": [], "8548": [], "run_info": 327, "link": 327, "peopl": 328, "sum_": 328, "x_d": 328, "saasbo": 328, "assumpt": 328, "roughli": 328, "speak": 328, "question": [325, 328], "30d": 328, "dimensions_to_embed_in": 328, "mathcal": 329, "But": 330, "idea": 330, "rc": [], "sit": [], "rfp_foldx_stability_and_sasa": [331, 335], "stick": 331, "red": 331, "explor": [331, 339], "ls": 331, "3ned_repair": 331, "optimizing_protein_st": 331, "ipynb": 331, "mrogu": 331, "hopefulli": [], "remind": [], "forgot": [], "traceback": [], "138": [], "typeerror": [], "got": [], "unexpect": [], "176": [], "145": [], "cell": [], "439": [], "437": [], "438": [], "__create_as_isolated_process": [], "440": [], "441": [], "442": [], "443": [], "444": [], "445": [], "446": [], "447": [], "448": [], "449": [], "problem_inform": [], "451": [], "278": [], "tb": [], "msg": [], "277": [], "279": [], "280": [], "281": [], "msg_type": [], "282": [], "five": [], "section": [331, 337, 338], "select": [331, 335, 343], "alter": 331, "special": [331, 335], "n_iter": 331, "178": [], "76": [], "267": [], "80": [], "13": [], "374": [], "65": [], "17": [], "146": [], "340": [], "27": [], "77": 336, "41": [], "na194f": [], "asna194": [], "193": [], "phe": [], "fri": [], "09": [], "51": [], "54": [], "3ned_repair_1": [], "qa114": [], "glna114": [], "113": [], "ser": [], "da3m": [], "aspa3": [], "kei": [309, 331, 337], "get_best_solut": [331, 335, 337, 344, 345, 346], "41639": [], "0629": [], "5983": [], "1298": [], "eednmaiikefmrfkthmegsvnghefeiegegegrpyegtqtaklkvtkggplpfawdilspqfskayvkhpadipdylklsfpegfkwervmnfedggvvtvtqdsslsdgefiykvklrgtnfpsdgpvmqkktmgweacsermypedgalkgemkmrlklkdgghydaevkttykakkpvqlpgayftntklditshnedytiveqyernegrhstggmdelyk": [], "appli": 332, "part": [325, 333, 336], "compar": [333, 336], "qualiti": 333, "save": 333, "json": 333, "mlflow": 333, "weight": 333, "bias": 333, "abstract_observ": 333, "skeleton": 333, "simpleobserv": 333, "init": 333, "servic": 333, "wandb": 333, "adjac": 333, "identifi": 333, "uuid4": 333, "metadata": 333, "uuid": 333, "experiment_path": 333, "as_dict": 333, "recal": 333, "tolist": 333, "dump": 333, "curiou": 333, "rememb": [333, 338], "invent": 333, "wheel": 333, "tensorboard": 333, "fp": 333, "snippet": [333, 337], "scenario": 333, "z": 333, "were": [333, 336], "accordingli": 333, "migu": 333, "flea": [333, 338], "showcas": 333, "behind": 333, "saw": 333, "overwritten": 333, "deeper": [5, 335, 337], "intro": 335, "treat": 335, "anyth": [], "further": [], "page": [306, 335, 338], "randommut": [335, 337, 345, 346], "anaconda3": [331, 335, 336], "docs2": [331, 335], "lib": [331, 335, 336], "python3": [331, 335, 336], "tqdm": [331, 335], "auto": [331, 335], "tqdmwarn": [331, 335], "iprogress": [331, 335], "jupyt": [331, 335], "ipywidget": [331, 335], "readthedoc": [331, 335], "io": [331, 335], "user_instal": [331, 335], "autonotebook": [331, 335], "notebook_tqdm": [331, 335], "16173153": [], "dtype": 335, "u1": 335, "talk": 335, "babel": 336, "No": 336, "freez": 336, "grep": 336, "135": [], "dynamically_instanti": [], "102": [], "92": [], "exec": [], "modulenotfounderror": [], "critic": [], "opt": [], "homebrew": [], "condabin": [], "autodock_vina_1_1_2_mac_catalina_64bit": [], "usr": [], "cryptex": [], "app": [], "sbin": [], "cryptexd": [], "codex": [], "bootstrap": [], "appleintern": [], "tex": [], "texbin": [], "cargo": [], "using_poli": [], "the_bas": [], "python39": [], "dynload": [], "externalblackbox": [], "num_evalu": [], "dockstringwarn": 336, "although": 336, "perfectli": 336, "match": [336, 338], "platform": 336, "report": 336, "f_logp": [], "x0_logp": [], "y0_logp": [], "logpblackbox": 322, "combin": 337, "optimizing_aloha": 337, "01_a_simple_example_of_optim": 337, "our_aloha": [337, 338], "past": [307, 337], "haven": 337, "realli": 337, "Its": 337, "summari": 337, "less": 337, "conclud": 337, "takeawai": 337, "independ": 337, "why": 337, "registering_aloha": 338, "search": [338, 339], "aloof": 338, "syntax": 338, "ouralohablackbox": 338, "sum": 338, "axi": 338, "keepdim": 338, "get_max_sequence_length": 338, "x_0": 338, "alohablackbox": [315, 338], "ascii_uppercas": 338, "ouralohaproblemfactori": 338, "interpret": 338, "poli_aloha": 338, "poli_aloha_problem": 338, "yourself": 338, "aloha_problem_factori": 338, "somewher": 338, "workhors": 338, "querying_aloha": 338, "emphas": 338, "amaz": 338, "x1": 338, "y1": 338, "subtl": 338, "cheminformat": 338, "mechan": 338, "solver": [338, 339, 340, 343, 344, 345, 346], "approxim": 339, "tild": 339, "boldsymbol": [339, 340], "surrog": 339, "render": [325, 339], "smartli": 339, "balanc": 339, "exploit": 339, "grid": 339, "vanillabayesianoptim": 339, "f_acklei": 339, "randn": [339, 343], "clip": [339, 343], "bo_solv": 339, "great": 339, "mostli": 339, "intent": 339, "adversari": [306, 339], "gan": 339, "maintain": [5, 340], "mu": 340, "sigma": 340, "member": 340, "introduct": 340, "blogpost": 340, "pycma": 340, "cma_e": 340, "toycontinuousproblemfactori": 328, "population_s": [340, 343, 344], "initial_mean": 340, "initial_sigma": 340, "restrict": 343, "coordin": 343, "singletaskgp": 343, "type_of_lin": 343, "non": 344, "domin": 344, "mate": 344, "procedur": [306, 344], "upon": 344, "alohaproblemfactori": [315, 344, 345, 346], "multi_objective_black_box": 344, "multiobjectiveblackbox": 344, "discretensgaii": 344, "hyperparamet": 344, "max_iter": 344, "num_mut": 344, "f_aloha": 344, "togeth": 344, "popul": 344, "56267": [], "846902": [], "39441": [], "eednmaiikefmrfkthmegsvnghefeiegegegrpyegtqtaklkvtkggplpfawdilspqfskayvkhpadipdylklsfpegfkwervmnfedggvvtvtqdsslqdgefiykvklrgtnfpsdgpvmqkktmgweacsermypedgalkgemkmrlklkdgghydaevkttykakkpvqlpgayntntklditshnedytiveqyernegrhstggmdelyk": [], "258": [], "userwarn": [], "Will": [], "env_nam": [], "269": [], "compat": 5, "abstractisolatedfunct": [5, 307, 336], "externalfunct": 5, "external_isolated_function_script": 5, "properti": 9, "fix": [9, 307], "fidel": [19, 333], "noisi": 19, "etc": [19, 325], "black_box_inform": [21, 307], "blackboxinform": [21, 307, 329, 331], "abstractproblem": 104, "plan": [122, 219, 325], "elbo": 184, "n_starting_point": 184, "playabl": 235, "checklist": 307, "pai": 307, "attent": 307, "my_problem_nam": 307, "desc": 307, "boilerpl": 307, "my_problem_inform": 307, "fixed_length": [307, 329, 333], "determinist": [307, 329, 331, 333], "potenti": 307, "padding_token": [307, 329, 333], "entri": 307, "rout": 307, "whatev": 307, "one_depend": 307, "another_depend": 307, "yet_another_depend": 307, "complicatedclass": 307, "abstract_isolated_funct": 307, "myisolatedlog": 307, "register_isolated_funct": 307, "my_problem_name__isol": 307, "__isol": 307, "conda_env_inside_environment_fil": 307, "instance_function_as_isolated_process": 307, "my_problem_info": 307, "myblackbox": 307, "my_problem": 307, "inner_funct": [307, 336], "weren": 307, "problem_name__isol": 307, "static": 307, "staticmethod": 307, "get_black_box_info": 307, "myproblemfactori": 307, "my_problem_factori": 307, "available_black_box": [307, 309], "dict_kei": 309, "whitenoiseblackbox": [329, 335], "08390547": 335, "properli": 331, "foldxstabilityproblemfactori": [320, 331], "foldxstabilityblackbox": [320, 331], "46959": 331, "4687": 331, "14886": 331, "56841": 331, "eednmaiikefmrfkthmegsvnghefeiegegegrpyegtqtaklkvtkggplpfawdilspqfskayvkhpadipdylklsfpegfkwervmnfedggvvtvtqdsslqdgefiykvklrgtnfpsdgpvmqkktmgweacsermypedgalkgimkmrlklkdgghydaevkttykakkpvqlpgayntntklditshnedytiveqyernegrhstggmdelyk": 331, "dockstringblackbox": [316, 336], "submodul": 336, "multiprocess": 336, "qedproblemfactori": 323, "qedblackbox": 323, "35978": 323, "toycontinuousblackbox": [328, 339, 340, 343], "whitenoiseproblemfactori": 329, "logpproblemfactori": 322, "drd3problemfactori": 317, "drd3blackbox": 317, "c1ccccc1": 317, "penalizedlogplamboproblemfactori": 321, "penalizedlogplamboblackbox": 321, "2238": 321, "saproblemfactori": 324, "sablackbox": 324, "ccnc": 324, "c1ccc": 324, "nc": 324, "n2cc": 324, "c2": 324, "c1": 324, "85483733": 324, "wildtype_repair": [319, 320], "foldxsasaproblemfactori": 319, "foldxsasablackbox": 319, "raspblackbox": 313, "raspproblemfactori": 313, "static_files_for_test": [], "ssmnonv16": 306, "jame": 306, "summervil": [306, 325], "sam": 306, "snodgrass": 306, "matea": 306, "onta": 306, "villar": 306, "vglc": 306, "video": 306, "game": [306, 325], "corpu": 306, "7th": 306, "workshop": 306, "tkb10": 306, "togeliu": [306, 325], "sergei": 306, "karakovskii": 306, "robin": [306, 325], "baumgarten": [306, 325], "ai": 306, "competit": [306, 325], "congress": 306, "2010": [306, 325], "cec": 306, "5586133": 306, "classic": 325, "floor": 325, "pipe": 325, "enemi": 325, "action": 325, "constrain": 325, "constraint": 325, "frame": 325, "buffer": 325, "screen": 325, "dropwdown": [], "hpc": 325, "cluster": [], "docker": 325, "xvfb": 325, "99": 325, "1024x768x24": 325, "extens": 325, "glx": 325, "noreset": 325, "background": 325, "marioai": 325, "supermariobrosblackbox": 325, "supermariobrosproblemfactori": 325, "visual": 325, "kha09": 306, "ahm": 306, "khalifa": [306, 325], "amidos2006": 306, "vl": 306, "vanessa": 306, "luca": 306, "schrum": 306, "smith": 306, "jialin": 306, "liu": 306, "sebastian": 306, "risi": 306, "evolv": 306, "gecco": 306, "221": 306, "228": 306, "1145": 306, "3205455": 306, "3205517": 306}, "objects": {"": [[0, 0, 0, "-", "poli"]], "poli": [[1, 0, 0, "-", "core"], [102, 0, 0, "-", "objective_factory"], [107, 0, 0, "-", "objective_repository"], [264, 0, 0, "-", "registered_objectives"], [265, 0, 0, "-", "tests"]], "poli.core": [[2, 0, 0, "-", "abstract_black_box"], [5, 0, 0, "-", "abstract_isolated_function"], [6, 0, 0, "-", "abstract_problem_factory"], [9, 0, 0, "-", "black_box_information"], [10, 0, 0, "-", "chemistry"], [14, 0, 0, "-", "exceptions"], [17, 0, 0, "-", "multi_objective_black_box"], [19, 0, 0, "-", "problem"], [20, 0, 0, "-", "problem_setup_information"], [22, 0, 0, "-", "proteins"], [26, 0, 0, "-", "registry"], [35, 0, 0, "-", "util"]], "poli.core.abstract_black_box": [[3, 1, 1, "", "AbstractBlackBox"], [4, 1, 1, "", "NegativeBlackBox"]], "poli.core.abstract_black_box.AbstractBlackBox": [[3, 2, 1, "", "__call__"], [3, 2, 1, "", "__del__"], [3, 2, 1, "", "__enter__"], [3, 2, 1, "", "__exit__"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "__neg__"], [3, 2, 1, "", "_black_box"], [3, 3, 1, "", "batch_size"], [3, 3, 1, "", "num_workers"], [3, 3, 1, "", "observer"], [3, 3, 1, "", "observer_info"], [3, 3, 1, "", "parallelize"], [3, 2, 1, "", "reset_evaluation_budget"], [3, 2, 1, "", "set_observer"], [3, 2, 1, "", "terminate"]], "poli.core.abstract_black_box.NegativeBlackBox": [[4, 2, 1, "", "__init__"]], "poli.core.abstract_problem_factory": [[7, 1, 1, "", "AbstractProblemFactory"], [8, 1, 1, "", "MetaProblemFactory"]], "poli.core.abstract_problem_factory.AbstractProblemFactory": [[7, 2, 1, "", "__init__"]], "poli.core.abstract_problem_factory.MetaProblemFactory": [[8, 2, 1, "", "__init__"]], "poli.core.chemistry": [[13, 0, 0, "-", "tdc_isolated_function"]], "poli.core.exceptions": [[15, 4, 1, "", "BudgetExhaustedException"], [16, 4, 1, "", "PoliException"]], "poli.core.multi_objective_black_box": [[18, 1, 1, "", "MultiObjectiveBlackBox"]], "poli.core.multi_objective_black_box.MultiObjectiveBlackBox": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "_black_box"], [18, 3, 1, "", "objective_functions"]], "poli.core.problem_setup_information": [[21, 1, 1, "", "ProblemSetupInformation"]], "poli.core.problem_setup_information.ProblemSetupInformation": [[21, 2, 1, "", "__init__"]], "poli.core.proteins": [[23, 0, 0, "-", "foldx_black_box"], [25, 0, 0, "-", "foldx_isolated_function"]], "poli.core.proteins.foldx_black_box": [[24, 1, 1, "", "FoldxBlackBox"]], "poli.core.proteins.foldx_black_box.FoldxBlackBox": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "create_working_directory"], [24, 3, 1, "", "experiment_id"], [24, 3, 1, "", "tmp_folder"], [24, 3, 1, "", "wildtype_amino_acids"], [24, 3, 1, "", "wildtype_pdb_paths"], [24, 3, 1, "", "wildtype_residue_strings"], [24, 3, 1, "", "wildtype_residues"]], "poli.core.registry": [[27, 5, 1, "", "delete_observer_run_script"], [28, 5, 1, "", "delete_problem"], [31, 5, 1, "", "register_problem"], [32, 5, 1, "", "register_problem_from_repository"], [33, 5, 1, "", "set_observer"], [34, 5, 1, "", "set_observer_run_script"]], "poli.core.util": [[36, 0, 0, "-", "abstract_observer"], [38, 0, 0, "-", "alignment"], [40, 0, 0, "-", "batch"], [43, 0, 0, "-", "chemistry"], [50, 0, 0, "-", "external_observer"], [52, 0, 0, "-", "files"], [58, 0, 0, "-", "inter_process_communication"], [62, 0, 0, "-", "isolation"], [67, 0, 0, "-", "objective_management"], [71, 0, 0, "-", "observer_wrapper"], [73, 0, 0, "-", "proteins"], [94, 0, 0, "-", "seeding"]], "poli.core.util.abstract_observer": [[37, 1, 1, "", "AbstractObserver"]], "poli.core.util.abstract_observer.AbstractObserver": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "finish"], [37, 2, 1, "", "observe"]], "poli.core.util.alignment": [[39, 0, 0, "-", "is_aligned"]], "poli.core.util.batch": [[41, 0, 0, "-", "batch_input"]], "poli.core.util.batch.batch_input": [[42, 5, 1, "", "batched"]], "poli.core.util.chemistry": [[44, 0, 0, "-", "string_to_molecule"]], "poli.core.util.chemistry.string_to_molecule": [[45, 5, 1, "", "selfies_to_molecules"], [46, 5, 1, "", "smiles_to_molecules"], [47, 5, 1, "", "strings_to_molecules"], [48, 5, 1, "", "translate_selfies_to_smiles"], [49, 5, 1, "", "translate_smiles_to_selfies"]], "poli.core.util.external_observer": [[51, 1, 1, "", "ExternalObserver"]], "poli.core.util.external_observer.ExternalObserver": [[51, 2, 1, "", "__getattr__"], [51, 2, 1, "", "__init__"], [51, 2, 1, "", "finish"], [51, 2, 1, "", "initialize_observer"], [51, 2, 1, "", "observe"]], "poli.core.util.files": [[53, 0, 0, "-", "download_files_from_github"], [56, 0, 0, "-", "integrity"]], "poli.core.util.files.download_files_from_github": [[54, 5, 1, "", "download_file_from_github_repository"], [55, 5, 1, "", "get_sha_for_tag"]], "poli.core.util.files.integrity": [[57, 5, 1, "", "compute_md5_from_filepath"]], "poli.core.util.inter_process_communication": [[59, 0, 0, "-", "process_wrapper"]], "poli.core.util.inter_process_communication.process_wrapper": [[60, 1, 1, "", "ProcessWrapper"], [61, 5, 1, "", "get_connection"]], "poli.core.util.inter_process_communication.process_wrapper.ProcessWrapper": [[60, 2, 1, "", "__init__"]], "poli.core.util.isolation": [[63, 0, 0, "-", "external_black_box"], [64, 0, 0, "-", "external_function"], [65, 0, 0, "-", "instancing"], [66, 0, 0, "-", "isolated_black_box"]], "poli.core.util.objective_management": [[68, 0, 0, "-", "make_run_script"]], "poli.core.util.objective_management.make_run_script": [[69, 5, 1, "", "make_observer_script"], [70, 5, 1, "", "make_run_script"]], "poli.core.util.observer_wrapper": [[72, 5, 1, "", "start_observer_process"]], "poli.core.util.proteins": [[74, 0, 0, "-", "defaults"], [75, 0, 0, "-", "foldx"], [77, 0, 0, "-", "mutations"], [81, 0, 0, "-", "pdb_parsing"], [85, 0, 0, "-", "rasp"]], "poli.core.util.proteins.foldx": [[76, 1, 1, "", "FoldxInterface"]], "poli.core.util.proteins.foldx.FoldxInterface": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "_compute_sasa"], [76, 2, 1, "", "_read_energy"], [76, 2, 1, "", "_repair_if_necessary_and_provide_path"], [76, 2, 1, "", "_simulate_mutations"], [76, 2, 1, "", "compute_sasa"], [76, 2, 1, "", "compute_stability"], [76, 2, 1, "", "compute_stability_and_sasa"], [76, 2, 1, "", "copy_foldx_files"], [76, 2, 1, "", "repair"], [76, 3, 1, "", "verbose"], [76, 3, 1, "", "working_dir"], [76, 2, 1, "", "write_mutations_to_file"]], "poli.core.util.proteins.mutations": [[78, 5, 1, "", "edits_between_strings"], [79, 5, 1, "", "find_closest_wildtype_pdb_file_to_mutant"], [80, 5, 1, "", "mutations_from_wildtype_residues_and_mutant"]], "poli.core.util.proteins.pdb_parsing": [[82, 5, 1, "", "parse_pdb_as_residue_strings"], [83, 5, 1, "", "parse_pdb_as_residues"], [84, 5, 1, "", "parse_pdb_as_structure"]], "poli.core.util.proteins.rasp": [[86, 0, 0, "-", "inner_rasp"], [92, 6, 1, "", "load_models"], [93, 6, 1, "", "rasp_interface"]], "poli.core.util.proteins.rasp.inner_rasp": [[87, 6, 1, "", "PrismData"], [88, 6, 1, "", "cavity_model"], [89, 6, 1, "", "helpers"], [90, 6, 1, "", "run_pipeline"], [91, 6, 1, "", "visualization"]], "poli.core.util.seeding": [[95, 0, 0, "-", "seeding"]], "poli.core.util.seeding.seeding": [[96, 5, 1, "", "seed_numpy"], [97, 5, 1, "", "seed_python"]], "poli.objective_factory": [[103, 1, 1, "", "ExternalBlackBox"], [104, 5, 1, "", "create"], [105, 5, 1, "", "load_config"], [106, 5, 1, "", "start"]], "poli.objective_factory.ExternalBlackBox": [[103, 2, 1, "", "__init__"]], "poli.objective_repository": [[108, 0, 0, "-", "aloha"], [112, 0, 0, "-", "dockstring"], [118, 0, 0, "-", "drd3_docking"], [124, 0, 0, "-", "foldx_rfp_lambo"], [132, 0, 0, "-", "foldx_sasa"], [139, 0, 0, "-", "foldx_stability"], [146, 0, 0, "-", "foldx_stability_and_sasa"], [152, 0, 0, "-", "gfp_cbas"], [186, 0, 0, "-", "gfp_select"], [192, 0, 0, "-", "penalized_logp_lambo"], [198, 0, 0, "-", "rasp"], [202, 0, 0, "-", "rdkit_logp"], [207, 0, 0, "-", "rdkit_qed"], [212, 0, 0, "-", "rfp_foldx_stability_and_sasa"], [215, 0, 0, "-", "sa_tdc"], [221, 0, 0, "-", "super_mario_bros"], [236, 0, 0, "-", "toy_continuous_problem"], [260, 0, 0, "-", "white_noise"]], "poli.objective_repository.aloha": [[109, 0, 0, "-", "register"]], "poli.objective_repository.aloha.register": [[110, 1, 1, "", "AlohaBlackBox"], [111, 1, 1, "", "AlohaProblemFactory"]], "poli.objective_repository.aloha.register.AlohaBlackBox": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "_black_box"], [110, 3, 1, "", "alphabet"]], "poli.objective_repository.aloha.register.AlohaProblemFactory": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "create"], [111, 2, 1, "", "get_setup_information"]], "poli.objective_repository.dockstring": [[113, 0, 0, "-", "information"], [114, 0, 0, "-", "isolated_function"], [115, 0, 0, "-", "register"]], "poli.objective_repository.dockstring.register": [[116, 1, 1, "", "DockstringBlackBox"], [117, 1, 1, "", "DockstringProblemFactory"]], "poli.objective_repository.dockstring.register.DockstringBlackBox": [[116, 2, 1, "", "__init__"], [116, 2, 1, "", "_black_box"], [116, 3, 1, "", "alphabet"]], "poli.objective_repository.dockstring.register.DockstringProblemFactory": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "create"], [117, 2, 1, "", "get_setup_information"]], "poli.objective_repository.drd3_docking": [[119, 0, 0, "-", "information"], [120, 0, 0, "-", "isolated_function"], [121, 0, 0, "-", "register"]], "poli.objective_repository.drd3_docking.register": [[122, 1, 1, "", "DRD3BlackBox"], [123, 1, 1, "", "DRD3ProblemFactory"]], "poli.objective_repository.drd3_docking.register.DRD3BlackBox": [[122, 2, 1, "id0", "__init__"], [122, 3, 1, "", "oracle_name"]], "poli.objective_repository.drd3_docking.register.DRD3ProblemFactory": [[123, 2, 1, "", "__init__"]], "poli.objective_repository.foldx_rfp_lambo": [[125, 0, 0, "-", "information"], [126, 0, 0, "-", "isolated_function"], [127, 0, 0, "-", "register"]], "poli.objective_repository.foldx_sasa": [[134, 0, 0, "-", "information"], [135, 0, 0, "-", "isolated_function"], [136, 0, 0, "-", "register"]], "poli.objective_repository.foldx_sasa.register": [[137, 1, 1, "", "FoldXSASABlackBox"], [138, 1, 1, "", "FoldXSASAProblemFactory"]], "poli.objective_repository.foldx_sasa.register.FoldXSASABlackBox": [[137, 2, 1, "", "__init__"]], "poli.objective_repository.foldx_sasa.register.FoldXSASAProblemFactory": [[138, 2, 1, "", "__init__"]], "poli.objective_repository.foldx_stability": [[141, 0, 0, "-", "information"], [142, 0, 0, "-", "isolated_function"], [143, 0, 0, "-", "register"]], "poli.objective_repository.foldx_stability.register": [[144, 1, 1, "", "FoldXStabilityBlackBox"], [145, 1, 1, "", "FoldXStabilityProblemFactory"]], "poli.objective_repository.foldx_stability.register.FoldXStabilityBlackBox": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "_black_box"]], "poli.objective_repository.foldx_stability.register.FoldXStabilityProblemFactory": [[145, 2, 1, "", "__init__"]], "poli.objective_repository.foldx_stability_and_sasa": [[147, 0, 0, "-", "information"], [148, 0, 0, "-", "isolated_function"], [149, 0, 0, "-", "register"]], "poli.objective_repository.foldx_stability_and_sasa.register": [[150, 1, 1, "", "FoldXStabilityAndSASABlackBox"], [151, 1, 1, "", "FoldXStabilityAndSASAProblemFactory"]], "poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASABlackBox": [[150, 2, 1, "", "__init__"]], "poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASAProblemFactory": [[151, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas": [[153, 0, 0, "-", "abstract_vae_wrapper"], [155, 0, 0, "-", "cbas_alphabet_preprocessing"], [170, 0, 0, "-", "cbas_wrapper"], [174, 0, 0, "-", "gfp_gp"], [175, 0, 0, "-", "information"], [176, 0, 0, "-", "isolated_function"], [177, 0, 0, "-", "make_vae"], [183, 0, 0, "-", "register"]], "poli.objective_repository.gfp_cbas.abstract_vae_wrapper": [[154, 1, 1, "", "AbstractVAEWrapper"]], "poli.objective_repository.gfp_cbas.abstract_vae_wrapper.AbstractVAEWrapper": [[154, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing": [[156, 5, 1, "", "convert_aas_to_idx_array"], [157, 5, 1, "", "convert_idx_array_to_aas"], [158, 5, 1, "", "convert_mutations_to_sequence"], [159, 5, 1, "", "get_argmax"], [160, 5, 1, "", "get_balaji_predictions"], [161, 5, 1, "", "get_experimental_X_y"], [162, 5, 1, "", "get_gfp_X_y_aa"], [163, 5, 1, "", "get_gfp_base_seq"], [164, 5, 1, "", "get_samples"], [165, 5, 1, "", "one_hot_encode_aa"], [166, 5, 1, "", "one_hot_encode_aa_array"], [167, 5, 1, "", "one_hot_encode_dna"], [168, 5, 1, "", "partition_data"], [169, 5, 1, "", "read_gfp_data"]], "poli.objective_repository.gfp_cbas.cbas_wrapper": [[171, 1, 1, "", "CBASVAEWrapper"], [172, 1, 1, "", "ConvertedTorchVaeDecoder"], [173, 1, 1, "", "ConvertedTorchVaeEncoder"]], "poli.objective_repository.gfp_cbas.cbas_wrapper.CBASVAEWrapper": [[171, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeDecoder": [[172, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeEncoder": [[173, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.make_vae": [[178, 1, 1, "", "BaseVAE"], [179, 1, 1, "", "SimpleVAE"], [180, 5, 1, "", "build_vae"], [181, 5, 1, "", "identity_loss"], [182, 5, 1, "", "summed_categorical_crossentropy"]], "poli.objective_repository.gfp_cbas.make_vae.BaseVAE": [[178, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.make_vae.SimpleVAE": [[179, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.register": [[184, 1, 1, "", "GFPCBasBlackBox"], [185, 1, 1, "", "GFPCBasProblemFactory"]], "poli.objective_repository.gfp_cbas.register.GFPCBasBlackBox": [[184, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.register.GFPCBasProblemFactory": [[185, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_select": [[187, 0, 0, "-", "information"], [188, 0, 0, "-", "isolated_function"], [189, 0, 0, "-", "register"]], "poli.objective_repository.gfp_select.register": [[191, 1, 1, "", "GFPSelectionProblemFactory"]], "poli.objective_repository.gfp_select.register.GFPSelectionProblemFactory": [[191, 2, 1, "", "__init__"]], "poli.objective_repository.penalized_logp_lambo": [[193, 0, 0, "-", "information"], [194, 0, 0, "-", "isolated_function"], [195, 0, 0, "-", "register"]], "poli.objective_repository.penalized_logp_lambo.register": [[196, 1, 1, "", "PenalizedLogPLamboBlackBox"], [197, 1, 1, "", "PenalizedLogPLamboProblemFactory"]], "poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboBlackBox": [[196, 2, 1, "", "__init__"]], "poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboProblemFactory": [[197, 2, 1, "", "__init__"]], "poli.objective_repository.rasp": [[199, 0, 0, "-", "information"], [200, 0, 0, "-", "isolated_function"], [201, 0, 0, "-", "register"]], "poli.objective_repository.rdkit_logp": [[203, 0, 0, "-", "information"], [204, 0, 0, "-", "register"]], "poli.objective_repository.rdkit_logp.register": [[205, 1, 1, "", "LogPBlackBox"], [206, 1, 1, "", "LogPProblemFactory"]], "poli.objective_repository.rdkit_logp.register.LogPBlackBox": [[205, 2, 1, "", "__init__"], [205, 2, 1, "", "_black_box"], [205, 3, 1, "", "from_selfies"], [205, 3, 1, "", "from_smiles"]], "poli.objective_repository.rdkit_logp.register.LogPProblemFactory": [[206, 2, 1, "", "__init__"]], "poli.objective_repository.rdkit_qed": [[208, 0, 0, "-", "information"], [209, 0, 0, "-", "register"]], "poli.objective_repository.rdkit_qed.register": [[210, 1, 1, "", "QEDBlackBox"], [211, 1, 1, "", "QEDProblemFactory"]], "poli.objective_repository.rdkit_qed.register.QEDBlackBox": [[210, 2, 1, "", "__init__"], [210, 2, 1, "", "_black_box"], [210, 3, 1, "", "from_selfies"], [210, 3, 1, "", "from_smiles"]], "poli.objective_repository.rdkit_qed.register.QEDProblemFactory": [[211, 2, 1, "", "__init__"], [211, 2, 1, "", "create"], [211, 2, 1, "", "get_setup_information"]], "poli.objective_repository.rfp_foldx_stability_and_sasa": [[213, 0, 0, "-", "information"], [214, 0, 0, "-", "register"]], "poli.objective_repository.sa_tdc": [[216, 0, 0, "-", "information"], [217, 0, 0, "-", "isolated_function"], [218, 0, 0, "-", "register"]], "poli.objective_repository.sa_tdc.register": [[219, 1, 1, "", "SABlackBox"], [220, 1, 1, "", "SAProblemFactory"]], "poli.objective_repository.sa_tdc.register.SABlackBox": [[219, 2, 1, "", "__init__"]], "poli.objective_repository.sa_tdc.register.SAProblemFactory": [[220, 2, 1, "", "__init__"], [220, 2, 1, "", "create"], [220, 2, 1, "", "get_setup_information"]], "poli.objective_repository.super_mario_bros": [[222, 0, 0, "-", "information"], [223, 0, 0, "-", "level_utils"], [235, 0, 0, "-", "register"]], "poli.objective_repository.super_mario_bros.level_utils": [[224, 5, 1, "", "add_padding_to_level"], [225, 5, 1, "", "clean_level"], [226, 5, 1, "", "level_to_array"], [227, 5, 1, "", "level_to_list"], [228, 5, 1, "", "levels_to_onehot"], [229, 5, 1, "", "onehot_to_levels"], [231, 5, 1, "", "vectorized"]], "poli.objective_repository.toy_continuous_problem": [[237, 0, 0, "-", "definitions"], [254, 0, 0, "-", "information"], [255, 0, 0, "-", "register"], [258, 0, 0, "-", "toy_continuous_problem"]], "poli.objective_repository.toy_continuous_problem.definitions": [[238, 5, 1, "", "ackley_function_01"], [239, 5, 1, "", "alpine_01"], [240, 5, 1, "", "alpine_02"], [241, 5, 1, "", "bent_cigar"], [242, 5, 1, "", "brown"], [243, 5, 1, "", "camelback_2d"], [244, 5, 1, "", "chung_reynolds"], [245, 5, 1, "", "cosine_mixture"], [246, 5, 1, "", "cross_in_tray"], [247, 5, 1, "", "deb_01"], [248, 5, 1, "", "deb_02"], [249, 5, 1, "", "deflected_corrugated_spring"], [250, 5, 1, "", "easom"], [251, 5, 1, "", "egg_holder"], [252, 5, 1, "", "shifted_sphere"], [253, 5, 1, "", "styblinski_tang"]], "poli.objective_repository.toy_continuous_problem.register": [[256, 1, 1, "", "ToyContinuousBlackBox"], [257, 1, 1, "", "ToyContinuousProblemFactory"]], "poli.objective_repository.toy_continuous_problem.register.ToyContinuousBlackBox": [[256, 2, 1, "", "__init__"], [256, 2, 1, "", "_black_box"], [256, 3, 1, "", "bounds"], [256, 3, 1, "", "embed_in"], [256, 3, 1, "", "function"], [256, 3, 1, "", "function_name"], [256, 3, 1, "", "n_dimensions"]], "poli.objective_repository.toy_continuous_problem.register.ToyContinuousProblemFactory": [[257, 2, 1, "", "__init__"]], "poli.objective_repository.toy_continuous_problem.toy_continuous_problem": [[259, 1, 1, "", "ToyContinuousProblem"]], "poli.objective_repository.toy_continuous_problem.toy_continuous_problem.ToyContinuousProblem": [[259, 2, 1, "", "__init__"]], "poli.objective_repository.white_noise": [[261, 0, 0, "-", "register"]], "poli.objective_repository.white_noise.register": [[262, 1, 1, "", "WhiteNoiseBlackBox"], [263, 1, 1, "", "WhiteNoiseProblemFactory"]], "poli.objective_repository.white_noise.register.WhiteNoiseBlackBox": [[262, 2, 1, "", "__init__"], [262, 2, 1, "", "_black_box"]], "poli.objective_repository.white_noise.register.WhiteNoiseProblemFactory": [[263, 2, 1, "", "__init__"]], "poli.tests": [[266, 0, 0, "-", "docs_examples"], [274, 0, 0, "-", "registry"], [297, 0, 0, "-", "test_minimal_working_example"], [299, 0, 0, "-", "test_seeding"], [301, 0, 0, "-", "util"]], "poli.tests.registry": [[275, 0, 0, "-", "basic_objectives"], [280, 0, 0, "-", "chemistry"], [282, 0, 0, "-", "proteins"], [286, 0, 0, "-", "test_basic_loop_without_create"], [288, 0, 0, "-", "test_force_isolation"], [289, 0, 0, "-", "test_instancing_black_boxes_alone"], [290, 0, 0, "-", "test_multi_objective_and_negative"], [292, 0, 0, "-", "toy_continuous_problems"]], "poli.tests.registry.basic_objectives": [[276, 0, 0, "-", "test_basic_objectives"]], "poli.tests.registry.basic_objectives.test_basic_objectives": [[277, 5, 1, "", "test_registering_aloha"], [278, 5, 1, "", "test_registering_white_noise"]], "poli.tests.registry.toy_continuous_problems": [[293, 0, 0, "-", "test_embedding_problems_into_higher_dims"]], "poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims": [[294, 5, 1, "", "test_embed_camelback_into_high_dimensions"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"]}, "titleterms": {"poli": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 334, 335, 338], "core": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 333], "abstract_black_box": [2, 3, 4], "abstractblackbox": 3, "negativeblackbox": 4, "abstract_problem_factori": [6, 7, 8], "abstractproblemfactori": 7, "metaproblemfactori": 8, "chemistri": [10, 11, 12, 13, 43, 44, 45, 46, 47, 48, 49, 280, 281], "tdc_black_box": [11, 12], "tdcblackbox": 12, "except": [14, 15, 16], "budgetexhaustedexcept": 15, "poliexcept": 16, "multi_objective_black_box": [17, 18], "multiobjectiveblackbox": 18, "problem_setup_inform": [20, 21], "problemsetupinform": 21, "protein": [22, 23, 24, 25, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 282, 283, 284, 285, 310, 312, 314, 318, 319, 320, 331], "foldx_black_box": [23, 24], "foldxblackbox": 24, "registri": [26, 27, 28, 29, 30, 31, 32, 33, 34, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 338], "delete_observer_run_script": 27, "delete_problem": 28, "get_problem_factori": 29, "get_problem": 30, "register_problem": 31, "register_problem_from_repositori": 32, "set_observ": 33, "set_observer_run_script": 34, "util": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 301, 302, 303], "abstract_observ": [36, 37], "abstractobserv": 37, "align": [38, 39], "is_align": 39, "batch": [40, 41, 42, 332], "batch_input": [41, 42], "string_to_molecul": [44, 45, 46, 47, 48, 49], "selfies_to_molecul": 45, "smiles_to_molecul": 46, "strings_to_molecul": 47, "translate_selfies_to_smil": 48, "translate_smiles_to_selfi": 49, "external_observ": [50, 51], "externalobserv": 51, "file": [52, 53, 54, 55, 56, 57, 312, 317, 319, 320], "download_files_from_github": [53, 54, 55], "download_file_from_github_repositori": 54, "get_sha_for_tag": 55, "integr": [56, 57], "compute_md5_from_filepath": 57, "inter_process_commun": [58, 59, 60, 61], "process_wrapp": [59, 60, 61], "processwrapp": 60, "get_connect": 61, "objective_manag": [67, 68, 69, 70], "make_run_script": [68, 69, 70], "make_observer_script": 69, "observer_wrapp": [71, 72], "start_observer_process": 72, "default": 74, "foldx": [75, 76, 311, 318, 319, 320], "foldxinterfac": 76, "mutat": [77, 78, 79, 80, 312, 331, 345], "edits_between_str": 78, "find_closest_wildtype_pdb_file_to_mut": 79, "mutations_from_wildtype_residues_and_mut": 80, "pdb_pars": [81, 82, 83, 84], "parse_pdb_as_residue_str": 82, "parse_pdb_as_residu": 83, "parse_pdb_as_structur": 84, "rasp": [85, 86, 87, 88, 89, 90, 91, 92, 93, 198, 199, 200, 201], "inner_rasp": [86, 87, 88, 89, 90, 91], "prismdata": 87, "cavity_model": 88, "helper": 89, "run_pipelin": 90, "visual": 91, "load_model": 92, "rasp_interfac": 93, "seed": [94, 95, 96, 97], "seed_numpi": 96, "seed_python": 97, "object": [98, 99, 100, 101, 310, 314, 315, 327, 328, 329, 331, 335, 336, 337, 338], "dynamically_instanti": 99, "parse_factory_kwarg": 100, "run": [101, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 336, 339, 340, 343, 344, 345, 346], "objective_factori": [102, 103, 104, 105, 106], "externalblackbox": 103, "creat": [104, 118, 328, 335, 338], "load_config": 105, "start": [106, 309, 310], "objective_repositori": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "aloha": [108, 109, 110, 111, 315, 333, 337], "regist": [109, 110, 111, 115, 116, 117, 121, 122, 123, 127, 128, 129, 130, 131, 136, 137, 138, 143, 144, 145, 149, 150, 151, 183, 184, 185, 189, 190, 191, 195, 196, 197, 201, 204, 205, 206, 209, 210, 211, 214, 218, 219, 220, 235, 255, 256, 257, 261, 262, 263, 307, 330, 331, 337, 338], "alohablackbox": 110, "alohaproblemfactori": 111, "dockstr": [112, 113, 114, 115, 116, 117, 316], "dockstringblackbox": 116, "dockstringproblemfactori": 117, "drd3_dock": [118, 119, 120, 121, 122, 123], "prerequisit": [118, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 337], "instal": [118, 307, 309, 311, 317, 318], "autodock": [118, 317], "vina": [118, 317], "adfr": [118, 317], "suit": [118, 317], "poli__lambo": 118, "environ": [118, 307, 318, 338], "drd3blackbox": 122, "drd3problemfactori": 123, "foldx_rfp_lambo": [124, 125, 126, 127, 128, 129, 130, 131], "config": 128, "rfpwrapper": 129, "rfpwrapperfactori": 130, "get_config": 131, "foldx_sasa": [132, 133, 134, 135, 136, 137, 138], "foldx_util": [133, 140], "foldxsasablackbox": 137, "foldxsasaproblemfactori": 138, "foldx_stabl": [139, 140, 141, 142, 143, 144, 145], "foldxstabilityblackbox": 144, "foldxstabilityproblemfactori": 145, "foldx_stability_and_sasa": [146, 147, 148, 149, 150, 151], "foldxstabilityandsasablackbox": 150, "foldxstabilityandsasaproblemfactori": 151, "gfp_cba": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "abstract_vae_wrapp": [153, 154], "abstractvaewrapp": 154, "cbas_alphabet_preprocess": [155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "convert_aas_to_idx_arrai": 156, "convert_idx_array_to_aa": 157, "convert_mutations_to_sequ": 158, "get_argmax": 159, "get_balaji_predict": 160, "get_experimental_x_i": 161, "get_gfp_x_y_aa": 162, "get_gfp_base_seq": 163, "get_sampl": 164, "one_hot_encode_aa": 165, "one_hot_encode_aa_arrai": 166, "one_hot_encode_dna": 167, "partition_data": 168, "read_gfp_data": 169, "cbas_wrapp": [170, 171, 172, 173], "cbasvaewrapp": 171, "convertedtorchvaedecod": 172, "convertedtorchvaeencod": 173, "gfp_gp": 174, "make_va": [177, 178, 179, 180, 181, 182], "baseva": 178, "simpleva": 179, "build_va": 180, "identity_loss": 181, "summed_categorical_crossentropi": 182, "gfpcbasblackbox": 184, "gfpcbasproblemfactori": 185, "gfp_select": [186, 187, 188, 189, 190, 191], "gfpblackbox": 190, "gfpselectionproblemfactori": 191, "penalized_logp_lambo": [192, 193, 194, 195, 196, 197], "penalizedlogplamboblackbox": 196, "penalizedlogplamboproblemfactori": 197, "rdkit_logp": [202, 203, 204, 205, 206], "logpblackbox": 205, "logpproblemfactori": 206, "rdkit_q": [207, 208, 209, 210, 211], "qedblackbox": 210, "qedproblemfactori": 211, "rfp_foldx_stability_and_sasa": [212, 213, 214], "sa_tdc": [215, 216, 217, 218, 219, 220], "sablackbox": 219, "saproblemfactori": 220, "super_mario_bro": [221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235], "level_util": [223, 224, 225, 226, 227, 228, 229, 230, 231], "add_padding_to_level": 224, "clean_level": 225, "level_to_arrai": 226, "level_to_list": 227, "levels_to_onehot": 228, "onehot_to_level": 229, "tensor_to_sim_level": 230, "vector": 231, "model": [232, 233, 234], "vaemario": 233, "load_example_model": 234, "toy_continuous_problem": [236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 292, 293, 294, 295], "definit": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253], "ackley_function_01": 238, "alpine_01": 239, "alpine_02": 240, "bent_cigar": 241, "brown": 242, "camelback_2d": 243, "chung_reynold": 244, "cosine_mixtur": 245, "cross_in_trai": 246, "deb_01": 247, "deb_02": 248, "deflected_corrugated_spr": 249, "easom": 250, "egg_hold": 251, "shifted_spher": 252, "styblinski_tang": 253, "toycontinuousblackbox": 256, "toycontinuousproblemfactori": 257, "toycontinuousproblem": 259, "white_nois": [260, 261, 262, 263], "whitenoiseblackbox": 262, "whitenoiseproblemfactori": 263, "registered_object": 264, "test": [265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 309], "docs_exampl": [266, 267, 268, 269, 270, 271, 272, 273], "test_objective_funct": [267, 268, 269, 270, 271, 272, 273], "test_aloha_exampl": 268, "test_logp_exampl": 269, "test_logp_example_using_str": 270, "test_qed_exampl": 271, "test_qed_example_using_str": 272, "test_white_noise_exampl": 273, "basic_object": [275, 276, 277, 278, 279], "test_basic_object": [276, 277, 278], "test_registering_aloha": 277, "test_registering_white_nois": 278, "test_budget_exhaust": 279, "test_chemistry_object": 281, "test_foldx": 283, "test_foldx_rfp_lambo": 284, "test_rasp": 285, "test_basic_loop_without_cr": 286, "test_force_isol": 288, "test_passing_array_of_str": 291, "test_embedding_problems_into_higher_dim": [293, 294], "test_embed_camelback_into_high_dimens": 294, "test_instancing_of_toy_continuous_problem": 295, "test_minimal_working_exampl": [297, 298], "test_seed": [299, 300], "test_seeding_in_white_nois": 300, "test_foldx_interfac": 302, "test_protein_util": 303, "api": 305, "document": 305, "refer": [306, 346], "ad": [307, 308], "new": [307, 308], "problem": [19, 307, 308, 310, 314, 328, 331, 332, 337, 338], "repositori": 307, "The": [307, 333, 335], "structur": 307, "A": 307, "gener": 307, "py": 307, "yml": 307, "why": [307, 338], "conda": [307, 309, 338], "your": [307, 309, 335, 338], "option": 336, "make": 317, "avail": [], "depend": 338, "ar": 312, "met": [], "submit": [307, 308], "pull": [307, 308], "request": [307, 308], "optim": [308, 310, 325, 331, 335, 337, 339, 342, 343, 346], "baselin": [308, 309], "an": [308, 332, 333, 337, 338], "abstract": [308, 332, 333], "solver": [308, 310, 331, 332, 335, 337], "exampl": [308, 332, 333, 338], "randommut": [308, 331, 332], "get": [309, 310], "first": 309, "script": 309, "us": [309, 310, 317, 318, 319, 320, 321, 324, 331, 335], "librari": 310, "discret": [310, 338, 344], "function": [310, 314, 315, 327, 328, 329, 331, 335, 336, 337, 338], "black": [307, 310, 329, 336, 338], "box": [307, 310, 329, 336, 338], "toi": [310, 314, 328], "small": [310, 314], "molecul": [310, 314], "algorithm": [310, 341, 346], "cite": 310, "other": [310, 312, 314], "relev": 310, "work": [310, 334], "contribut": 310, "comput": 312, "energi": 312, "singl": 312, "python": [312, 318, 338], "set": [312, 317], "up": 312, "folder": [312, 317], "download": [312, 317], "pdb": 312, "repair": [312, 319, 320], "what": [312, 332, 335, 336], "pars": 312, "wildtyp": 312, "defin": [312, 331, 332, 333, 338], "s": [307, 312, 338], "sasa": [312, 318], "score": 312, "conclus": [312, 333, 335, 337, 338], "rapid": 313, "stabil": [313, 318, 320, 331], "predict": 313, "how": [313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 334, 339, 340, 343, 344, 345, 346], "warn": 313, "further": 313, "read": [313, 336], "all": [314, 317, 333], "about": [315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 332, 339, 340, 343, 344, 345, 346], "drd3": 317, "dock": 317, "tdc": [317, 324], "add": [317, 338], "binari": 317, "path": [317, 338], "prepare_receptor": 317, "from": [], "sure": 317, "you": [317, 319, 320], "re": 317, "rfp": 318, "lambo": [318, 321], "we": [318, 319, 320], "can": [318, 319, 320], "automat": 318, "solvent": 319, "access": [319, 324], "penal": 321, "logp": [321, 322], "keyword": [], "argument": [], "log": [322, 333], "solubl": 322, "quantit": 323, "estim": 323, "druglik": 323, "qed": 323, "synthet": 324, "jump": 325, "super": 325, "mario": 325, "bro": 325, "therapeut": 326, "data": 326, "common": 326, "oracl": 326, "name": 327, "see": [327, 339, 344], "also": 327, "continu": [310, 328], "low": 328, "intrins": 328, "dimension": 328, "white": 329, "nois": 329, "observ": [330, 333], "isol": [62, 63, 64, 65, 66, 330, 336], "process": 330, "random": [331, 345], "mroug": 331, "check": 331, "result": 331, "poli_baselin": 332, "candid": 332, "want": 333, "more": [333, 336, 338, 339, 344], "complex": 333, "instanc": [65, 333, 337], "simpl": 333, "initi": 333, "put": 333, "togeth": 333, "coupl": 333, "queri": 333, "dive": 334, "deeper": 334, "doe": 334, "under": [334, 336], "hood": [334, 336], "content": [334, 335], "usual": 335, "develop": 335, "loop": 335, "identifi": 335, "own": 335, "when": [], "have": [], "right": [], "Is": 337, "factori": 338, "entir": 338, "need": 338, "where": 338, "thi": [325, 338], "call": 338, "bayesian": [339, 342, 343], "cma": 340, "es": 340, "graph": 341, "genet": 341, "latent": 342, "space": 342, "line": 343, "nsga": 344, "2": 344, "templat": 346, "abstract_isolated_funct": 5, "black_box_inform": 9, "tdc_isolated_funct": 13, "foldx_isolated_funct": 25, "external_black_box": 63, "external_funct": 64, "isolated_black_box": 66, "inform": [113, 119, 125, 134, 141, 147, 175, 187, 193, 199, 203, 208, 213, 216, 222, 254, 307, 329], "isolated_funct": [114, 120, 126, 135, 142, 148, 176, 188, 194, 200, 217, 307], "test_instancing_black_boxes_alon": 289, "specifi": 307, "__init__": 307, "happen": 336, "test_black_box_instanc": 287, "test_multi_objective_and_neg": 290, "test_core_promis": 296, "cluster": 325}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 56}})