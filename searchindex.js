Search.setIndex({"docnames": ["_autosummary/poli", "_autosummary/poli.core", "_autosummary/poli.core.abstract_black_box", "_autosummary/poli.core.abstract_black_box.AbstractBlackBox", "_autosummary/poli.core.abstract_black_box.NegativeBlackBox", "_autosummary/poli.core.abstract_problem_factory", "_autosummary/poli.core.abstract_problem_factory.AbstractProblemFactory", "_autosummary/poli.core.abstract_problem_factory.MetaProblemFactory", "_autosummary/poli.core.chemistry", "_autosummary/poli.core.chemistry.tdc_black_box", "_autosummary/poli.core.chemistry.tdc_black_box.TDCBlackBox", "_autosummary/poli.core.exceptions", "_autosummary/poli.core.exceptions.BudgetExhaustedException", "_autosummary/poli.core.exceptions.PoliException", "_autosummary/poli.core.multi_objective_black_box", "_autosummary/poli.core.multi_objective_black_box.MultiObjectiveBlackBox", "_autosummary/poli.core.problem_setup_information", "_autosummary/poli.core.problem_setup_information.ProblemSetupInformation", "_autosummary/poli.core.proteins", "_autosummary/poli.core.proteins.foldx_black_box", "_autosummary/poli.core.proteins.foldx_black_box.FoldxBlackBox", "_autosummary/poli.core.registry", "_autosummary/poli.core.registry.delete_observer_run_script", "_autosummary/poli.core.registry.delete_problem", "_autosummary/poli.core.registry.get_problem_factories", "_autosummary/poli.core.registry.get_problems", "_autosummary/poli.core.registry.register_problem", "_autosummary/poli.core.registry.register_problem_from_repository", "_autosummary/poli.core.registry.set_observer", "_autosummary/poli.core.registry.set_observer_run_script", "_autosummary/poli.core.util", "_autosummary/poli.core.util.abstract_observer", "_autosummary/poli.core.util.abstract_observer.AbstractObserver", "_autosummary/poli.core.util.alignment", "_autosummary/poli.core.util.alignment.is_aligned", "_autosummary/poli.core.util.batch", "_autosummary/poli.core.util.batch.batch_input", "_autosummary/poli.core.util.batch.batch_input.batched", "_autosummary/poli.core.util.chemistry", "_autosummary/poli.core.util.chemistry.string_to_molecule", "_autosummary/poli.core.util.chemistry.string_to_molecule.selfies_to_molecules", "_autosummary/poli.core.util.chemistry.string_to_molecule.smiles_to_molecules", "_autosummary/poli.core.util.chemistry.string_to_molecule.strings_to_molecules", "_autosummary/poli.core.util.chemistry.string_to_molecule.translate_selfies_to_smiles", "_autosummary/poli.core.util.chemistry.string_to_molecule.translate_smiles_to_selfies", "_autosummary/poli.core.util.external_observer", "_autosummary/poli.core.util.external_observer.ExternalObserver", "_autosummary/poli.core.util.files", "_autosummary/poli.core.util.files.download_files_from_github", "_autosummary/poli.core.util.files.download_files_from_github.download_file_from_github_repository", "_autosummary/poli.core.util.files.download_files_from_github.get_sha_for_tag", "_autosummary/poli.core.util.files.integrity", "_autosummary/poli.core.util.files.integrity.compute_md5_from_filepath", "_autosummary/poli.core.util.inter_process_communication", "_autosummary/poli.core.util.inter_process_communication.process_wrapper", "_autosummary/poli.core.util.inter_process_communication.process_wrapper.ProcessWrapper", "_autosummary/poli.core.util.inter_process_communication.process_wrapper.get_connection", "_autosummary/poli.core.util.objective_management", "_autosummary/poli.core.util.objective_management.make_run_script", "_autosummary/poli.core.util.objective_management.make_run_script.make_observer_script", "_autosummary/poli.core.util.objective_management.make_run_script.make_run_script", "_autosummary/poli.core.util.observer_wrapper", "_autosummary/poli.core.util.observer_wrapper.start_observer_process", "_autosummary/poli.core.util.proteins", "_autosummary/poli.core.util.proteins.defaults", "_autosummary/poli.core.util.proteins.foldx", "_autosummary/poli.core.util.proteins.foldx.FoldxInterface", "_autosummary/poli.core.util.proteins.mutations", "_autosummary/poli.core.util.proteins.mutations.edits_between_strings", "_autosummary/poli.core.util.proteins.mutations.find_closest_wildtype_pdb_file_to_mutant", "_autosummary/poli.core.util.proteins.mutations.mutations_from_wildtype_residues_and_mutant", "_autosummary/poli.core.util.proteins.pdb_parsing", "_autosummary/poli.core.util.proteins.pdb_parsing.parse_pdb_as_residue_strings", "_autosummary/poli.core.util.proteins.pdb_parsing.parse_pdb_as_residues", "_autosummary/poli.core.util.proteins.pdb_parsing.parse_pdb_as_structure", "_autosummary/poli.core.util.proteins.rasp", "_autosummary/poli.core.util.proteins.rasp.inner_rasp", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.PrismData", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.cavity_model", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.helpers", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.run_pipeline", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.visualization", "_autosummary/poli.core.util.proteins.rasp.load_models", "_autosummary/poli.core.util.proteins.rasp.rasp_interface", "_autosummary/poli.core.util.seeding", "_autosummary/poli.core.util.seeding.seeding", "_autosummary/poli.core.util.seeding.seeding.seed_numpy", "_autosummary/poli.core.util.seeding.seeding.seed_python", "_autosummary/poli.objective", "_autosummary/poli.objective.dynamically_instantiate", "_autosummary/poli.objective.parse_factory_kwargs", "_autosummary/poli.objective.run", "_autosummary/poli.objective_factory", "_autosummary/poli.objective_factory.ExternalBlackBox", "_autosummary/poli.objective_factory.create", "_autosummary/poli.objective_factory.load_config", "_autosummary/poli.objective_factory.start", "_autosummary/poli.objective_repository", "_autosummary/poli.objective_repository.aloha", "_autosummary/poli.objective_repository.aloha.register", "_autosummary/poli.objective_repository.aloha.register.AlohaBlackBox", "_autosummary/poli.objective_repository.aloha.register.AlohaProblemFactory", "_autosummary/poli.objective_repository.dockstring", "_autosummary/poli.objective_repository.dockstring.register", "_autosummary/poli.objective_repository.dockstring.register.DockstringBlackBox", "_autosummary/poli.objective_repository.dockstring.register.DockstringProblemFactory", "_autosummary/poli.objective_repository.drd3_docking", "_autosummary/poli.objective_repository.drd3_docking.register", "_autosummary/poli.objective_repository.drd3_docking.register.DRD3BlackBox", "_autosummary/poli.objective_repository.drd3_docking.register.DRD3ProblemFactory", "_autosummary/poli.objective_repository.foldx_rfp_lambo", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.Config", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.RFPWrapper", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.RFPWrapperFactory", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.get_config", "_autosummary/poli.objective_repository.foldx_sasa", "_autosummary/poli.objective_repository.foldx_sasa.foldx_utils", "_autosummary/poli.objective_repository.foldx_sasa.register", "_autosummary/poli.objective_repository.foldx_sasa.register.FoldXSASABlackBox", "_autosummary/poli.objective_repository.foldx_sasa.register.FoldXSASAProblemFactory", "_autosummary/poli.objective_repository.foldx_stability", "_autosummary/poli.objective_repository.foldx_stability.foldx_utils", "_autosummary/poli.objective_repository.foldx_stability.register", "_autosummary/poli.objective_repository.foldx_stability.register.FoldXStabilityBlackBox", "_autosummary/poli.objective_repository.foldx_stability.register.FoldXStabilityProblemFactory", "_autosummary/poli.objective_repository.foldx_stability_and_sasa", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.register", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASABlackBox", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASAProblemFactory", "_autosummary/poli.objective_repository.gfp_cbas", "_autosummary/poli.objective_repository.gfp_cbas.abstract_vae_wrapper", "_autosummary/poli.objective_repository.gfp_cbas.abstract_vae_wrapper.AbstractVAEWrapper", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_aas_to_idx_array", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_idx_array_to_aas", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_mutations_to_sequence", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_argmax", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_balaji_predictions", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_experimental_X_y", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_gfp_X_y_aa", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_gfp_base_seq", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_samples", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_aa", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_aa_array", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_dna", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.partition_data", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.read_gfp_data", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.CBASVAEWrapper", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeDecoder", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeEncoder", "_autosummary/poli.objective_repository.gfp_cbas.gfp_gp", "_autosummary/poli.objective_repository.gfp_cbas.make_vae", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.BaseVAE", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.SimpleVAE", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.build_vae", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.identity_loss", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.summed_categorical_crossentropy", "_autosummary/poli.objective_repository.gfp_cbas.register", "_autosummary/poli.objective_repository.gfp_cbas.register.GFPCBasBlackBox", "_autosummary/poli.objective_repository.gfp_cbas.register.GFPCBasProblemFactory", "_autosummary/poli.objective_repository.gfp_select", "_autosummary/poli.objective_repository.gfp_select.register", "_autosummary/poli.objective_repository.gfp_select.register.GFPBlackBox", "_autosummary/poli.objective_repository.gfp_select.register.GFPSelectionProblemFactory", "_autosummary/poli.objective_repository.penalized_logp_lambo", "_autosummary/poli.objective_repository.penalized_logp_lambo.register", "_autosummary/poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboBlackBox", "_autosummary/poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboProblemFactory", "_autosummary/poli.objective_repository.rasp", "_autosummary/poli.objective_repository.rasp.register", "_autosummary/poli.objective_repository.rdkit_logp", "_autosummary/poli.objective_repository.rdkit_logp.register", "_autosummary/poli.objective_repository.rdkit_logp.register.LogPBlackBox", "_autosummary/poli.objective_repository.rdkit_logp.register.LogPProblemFactory", "_autosummary/poli.objective_repository.rdkit_qed", "_autosummary/poli.objective_repository.rdkit_qed.register", "_autosummary/poli.objective_repository.rdkit_qed.register.QEDBlackBox", "_autosummary/poli.objective_repository.rdkit_qed.register.QEDProblemFactory", "_autosummary/poli.objective_repository.rfp_foldx_stability_and_sasa", "_autosummary/poli.objective_repository.rfp_foldx_stability_and_sasa.register", "_autosummary/poli.objective_repository.sa_tdc", "_autosummary/poli.objective_repository.sa_tdc.register", "_autosummary/poli.objective_repository.sa_tdc.register.SABlackBox", "_autosummary/poli.objective_repository.sa_tdc.register.SAProblemFactory", "_autosummary/poli.objective_repository.super_mario_bros", "_autosummary/poli.objective_repository.super_mario_bros.level_utils", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.add_padding_to_level", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.clean_level", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.level_to_array", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.level_to_list", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.levels_to_onehot", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.onehot_to_levels", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.tensor_to_sim_level", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.vectorized", "_autosummary/poli.objective_repository.super_mario_bros.model", "_autosummary/poli.objective_repository.super_mario_bros.model.VAEMario", "_autosummary/poli.objective_repository.super_mario_bros.model.load_example_model", "_autosummary/poli.objective_repository.toy_continuous_problem", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.ackley_function_01", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.alpine_01", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.alpine_02", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.bent_cigar", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.brown", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.camelback_2d", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.chung_reynolds", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.cosine_mixture", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.cross_in_tray", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.deb_01", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.deb_02", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.deflected_corrugated_spring", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.easom", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.egg_holder", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.shifted_sphere", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.styblinski_tang", "_autosummary/poli.objective_repository.toy_continuous_problem.register", "_autosummary/poli.objective_repository.toy_continuous_problem.register.ToyContinuousBlackBox", "_autosummary/poli.objective_repository.toy_continuous_problem.register.ToyContinuousProblemFactory", "_autosummary/poli.objective_repository.toy_continuous_problem.toy_continuous_problem", "_autosummary/poli.objective_repository.toy_continuous_problem.toy_continuous_problem.ToyContinuousProblem", "_autosummary/poli.objective_repository.white_noise", "_autosummary/poli.objective_repository.white_noise.register", "_autosummary/poli.objective_repository.white_noise.register.WhiteNoiseBlackBox", "_autosummary/poli.objective_repository.white_noise.register.WhiteNoiseProblemFactory", "_autosummary/poli.registered_objectives", "_autosummary/poli.tests", "_autosummary/poli.tests.docs_examples", "_autosummary/poli.tests.docs_examples.test_objective_functions", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_aloha_example", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_logp_example", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_logp_example_using_strings", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_qed_example", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_qed_example_using_strings", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_white_noise_example", "_autosummary/poli.tests.registry", "_autosummary/poli.tests.registry.basic_objectives", "_autosummary/poli.tests.registry.basic_objectives.test_basic_objectives", "_autosummary/poli.tests.registry.basic_objectives.test_basic_objectives.test_registering_aloha", "_autosummary/poli.tests.registry.basic_objectives.test_basic_objectives.test_registering_white_noise", "_autosummary/poli.tests.registry.basic_objectives.test_budget_exhaustion", "_autosummary/poli.tests.registry.chemistry", "_autosummary/poli.tests.registry.chemistry.test_chemistry_objectives", "_autosummary/poli.tests.registry.proteins", "_autosummary/poli.tests.registry.proteins.test_foldx", "_autosummary/poli.tests.registry.proteins.test_foldx_rfp_lambo", "_autosummary/poli.tests.registry.proteins.test_rasp", "_autosummary/poli.tests.registry.test_basic_loop_without_create", "_autosummary/poli.tests.registry.test_force_isolation", "_autosummary/poli.tests.registry.test_passing_array_of_strings", "_autosummary/poli.tests.registry.toy_continuous_problems", "_autosummary/poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims", "_autosummary/poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims.test_embed_camelback_into_high_dimensions", "_autosummary/poli.tests.registry.toy_continuous_problems.test_instancing_of_toy_continuous_problems", "_autosummary/poli.tests.test_minimal_working_example", "_autosummary/poli.tests.test_minimal_working_example.test_minimal_working_example", "_autosummary/poli.tests.test_seeding", "_autosummary/poli.tests.test_seeding.test_seeding_in_white_noise", "_autosummary/poli.tests.util", "_autosummary/poli.tests.util.test_foldx_interface", "_autosummary/poli.tests.util.test_protein_utilities", "_templates/custom-module-template", "api", "bibliography", "contributing/a_new_problem", "contributing/a_new_solver", "getting_started/getting_started", "index", "understanding_foldx/00-installing-foldx", "understanding_foldx/01-single-mutation-using-foldx/index", "using_poli/objective_repository/RaSP", "using_poli/objective_repository/all_objectives", "using_poli/objective_repository/aloha", "using_poli/objective_repository/dockstring", "using_poli/objective_repository/drd3_docking", "using_poli/objective_repository/foldx_rfp_lambo", "using_poli/objective_repository/foldx_sasa", "using_poli/objective_repository/foldx_stability", "using_poli/objective_repository/penalized_logp_lambo", "using_poli/objective_repository/rdkit_logp", "using_poli/objective_repository/rdkit_qed", "using_poli/objective_repository/sa_tdc", "using_poli/objective_repository/super_mario_bros", "using_poli/objective_repository/tdc_oracles", "using_poli/objective_repository/template", "using_poli/objective_repository/toy_continuous_problems", "using_poli/objective_repository/white_noise", "using_poli/observers/registering_an_observer", "using_poli/optimization_examples/protein-stability-foldx/optimizing_protein_stability", "using_poli/the_basics/defining_a_problem_solver", "using_poli/the_basics/defining_an_observer", "using_poli/the_basics/diving_deeper", "using_poli/the_basics/intro_to_poli", "using_poli/the_basics/isolation", "using_poli/the_basics/optimizing_an_objective_function", "using_poli/the_basics/registering_an_objective_function", "using_poli_baselines/bayesian_optimization", "using_poli_baselines/cma_es", "using_poli_baselines/graph_ga", "using_poli_baselines/latent_space_bo", "using_poli_baselines/line_bayesian_optimization", "using_poli_baselines/nsga_2", "using_poli_baselines/random_mutations", "using_poli_baselines/template"], "filenames": ["_autosummary/poli.rst", "_autosummary/poli.core.rst", "_autosummary/poli.core.abstract_black_box.rst", "_autosummary/poli.core.abstract_black_box.AbstractBlackBox.rst", "_autosummary/poli.core.abstract_black_box.NegativeBlackBox.rst", "_autosummary/poli.core.abstract_problem_factory.rst", "_autosummary/poli.core.abstract_problem_factory.AbstractProblemFactory.rst", "_autosummary/poli.core.abstract_problem_factory.MetaProblemFactory.rst", "_autosummary/poli.core.chemistry.rst", "_autosummary/poli.core.chemistry.tdc_black_box.rst", "_autosummary/poli.core.chemistry.tdc_black_box.TDCBlackBox.rst", "_autosummary/poli.core.exceptions.rst", "_autosummary/poli.core.exceptions.BudgetExhaustedException.rst", "_autosummary/poli.core.exceptions.PoliException.rst", "_autosummary/poli.core.multi_objective_black_box.rst", "_autosummary/poli.core.multi_objective_black_box.MultiObjectiveBlackBox.rst", "_autosummary/poli.core.problem_setup_information.rst", "_autosummary/poli.core.problem_setup_information.ProblemSetupInformation.rst", "_autosummary/poli.core.proteins.rst", "_autosummary/poli.core.proteins.foldx_black_box.rst", "_autosummary/poli.core.proteins.foldx_black_box.FoldxBlackBox.rst", "_autosummary/poli.core.registry.rst", "_autosummary/poli.core.registry.delete_observer_run_script.rst", "_autosummary/poli.core.registry.delete_problem.rst", "_autosummary/poli.core.registry.get_problem_factories.rst", "_autosummary/poli.core.registry.get_problems.rst", "_autosummary/poli.core.registry.register_problem.rst", "_autosummary/poli.core.registry.register_problem_from_repository.rst", "_autosummary/poli.core.registry.set_observer.rst", "_autosummary/poli.core.registry.set_observer_run_script.rst", "_autosummary/poli.core.util.rst", "_autosummary/poli.core.util.abstract_observer.rst", "_autosummary/poli.core.util.abstract_observer.AbstractObserver.rst", "_autosummary/poli.core.util.alignment.rst", "_autosummary/poli.core.util.alignment.is_aligned.rst", "_autosummary/poli.core.util.batch.rst", "_autosummary/poli.core.util.batch.batch_input.rst", "_autosummary/poli.core.util.batch.batch_input.batched.rst", "_autosummary/poli.core.util.chemistry.rst", "_autosummary/poli.core.util.chemistry.string_to_molecule.rst", "_autosummary/poli.core.util.chemistry.string_to_molecule.selfies_to_molecules.rst", "_autosummary/poli.core.util.chemistry.string_to_molecule.smiles_to_molecules.rst", "_autosummary/poli.core.util.chemistry.string_to_molecule.strings_to_molecules.rst", "_autosummary/poli.core.util.chemistry.string_to_molecule.translate_selfies_to_smiles.rst", "_autosummary/poli.core.util.chemistry.string_to_molecule.translate_smiles_to_selfies.rst", "_autosummary/poli.core.util.external_observer.rst", "_autosummary/poli.core.util.external_observer.ExternalObserver.rst", "_autosummary/poli.core.util.files.rst", "_autosummary/poli.core.util.files.download_files_from_github.rst", "_autosummary/poli.core.util.files.download_files_from_github.download_file_from_github_repository.rst", "_autosummary/poli.core.util.files.download_files_from_github.get_sha_for_tag.rst", "_autosummary/poli.core.util.files.integrity.rst", "_autosummary/poli.core.util.files.integrity.compute_md5_from_filepath.rst", "_autosummary/poli.core.util.inter_process_communication.rst", "_autosummary/poli.core.util.inter_process_communication.process_wrapper.rst", "_autosummary/poli.core.util.inter_process_communication.process_wrapper.ProcessWrapper.rst", "_autosummary/poli.core.util.inter_process_communication.process_wrapper.get_connection.rst", "_autosummary/poli.core.util.objective_management.rst", "_autosummary/poli.core.util.objective_management.make_run_script.rst", "_autosummary/poli.core.util.objective_management.make_run_script.make_observer_script.rst", "_autosummary/poli.core.util.objective_management.make_run_script.make_run_script.rst", "_autosummary/poli.core.util.observer_wrapper.rst", "_autosummary/poli.core.util.observer_wrapper.start_observer_process.rst", "_autosummary/poli.core.util.proteins.rst", "_autosummary/poli.core.util.proteins.defaults.rst", "_autosummary/poli.core.util.proteins.foldx.rst", "_autosummary/poli.core.util.proteins.foldx.FoldxInterface.rst", "_autosummary/poli.core.util.proteins.mutations.rst", "_autosummary/poli.core.util.proteins.mutations.edits_between_strings.rst", "_autosummary/poli.core.util.proteins.mutations.find_closest_wildtype_pdb_file_to_mutant.rst", "_autosummary/poli.core.util.proteins.mutations.mutations_from_wildtype_residues_and_mutant.rst", "_autosummary/poli.core.util.proteins.pdb_parsing.rst", "_autosummary/poli.core.util.proteins.pdb_parsing.parse_pdb_as_residue_strings.rst", "_autosummary/poli.core.util.proteins.pdb_parsing.parse_pdb_as_residues.rst", "_autosummary/poli.core.util.proteins.pdb_parsing.parse_pdb_as_structure.rst", "_autosummary/poli.core.util.proteins.rasp.rst", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.rst", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.PrismData.rst", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.cavity_model.rst", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.helpers.rst", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.run_pipeline.rst", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.visualization.rst", "_autosummary/poli.core.util.proteins.rasp.load_models.rst", "_autosummary/poli.core.util.proteins.rasp.rasp_interface.rst", "_autosummary/poli.core.util.seeding.rst", "_autosummary/poli.core.util.seeding.seeding.rst", "_autosummary/poli.core.util.seeding.seeding.seed_numpy.rst", "_autosummary/poli.core.util.seeding.seeding.seed_python.rst", "_autosummary/poli.objective.rst", "_autosummary/poli.objective.dynamically_instantiate.rst", "_autosummary/poli.objective.parse_factory_kwargs.rst", "_autosummary/poli.objective.run.rst", "_autosummary/poli.objective_factory.rst", "_autosummary/poli.objective_factory.ExternalBlackBox.rst", "_autosummary/poli.objective_factory.create.rst", "_autosummary/poli.objective_factory.load_config.rst", "_autosummary/poli.objective_factory.start.rst", "_autosummary/poli.objective_repository.rst", "_autosummary/poli.objective_repository.aloha.rst", "_autosummary/poli.objective_repository.aloha.register.rst", "_autosummary/poli.objective_repository.aloha.register.AlohaBlackBox.rst", "_autosummary/poli.objective_repository.aloha.register.AlohaProblemFactory.rst", "_autosummary/poli.objective_repository.dockstring.rst", "_autosummary/poli.objective_repository.dockstring.register.rst", "_autosummary/poli.objective_repository.dockstring.register.DockstringBlackBox.rst", "_autosummary/poli.objective_repository.dockstring.register.DockstringProblemFactory.rst", "_autosummary/poli.objective_repository.drd3_docking.rst", "_autosummary/poli.objective_repository.drd3_docking.register.rst", "_autosummary/poli.objective_repository.drd3_docking.register.DRD3BlackBox.rst", "_autosummary/poli.objective_repository.drd3_docking.register.DRD3ProblemFactory.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.Config.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.RFPWrapper.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.RFPWrapperFactory.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.get_config.rst", "_autosummary/poli.objective_repository.foldx_sasa.rst", "_autosummary/poli.objective_repository.foldx_sasa.foldx_utils.rst", "_autosummary/poli.objective_repository.foldx_sasa.register.rst", "_autosummary/poli.objective_repository.foldx_sasa.register.FoldXSASABlackBox.rst", "_autosummary/poli.objective_repository.foldx_sasa.register.FoldXSASAProblemFactory.rst", "_autosummary/poli.objective_repository.foldx_stability.rst", "_autosummary/poli.objective_repository.foldx_stability.foldx_utils.rst", "_autosummary/poli.objective_repository.foldx_stability.register.rst", "_autosummary/poli.objective_repository.foldx_stability.register.FoldXStabilityBlackBox.rst", "_autosummary/poli.objective_repository.foldx_stability.register.FoldXStabilityProblemFactory.rst", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.rst", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.register.rst", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASABlackBox.rst", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASAProblemFactory.rst", "_autosummary/poli.objective_repository.gfp_cbas.rst", "_autosummary/poli.objective_repository.gfp_cbas.abstract_vae_wrapper.rst", "_autosummary/poli.objective_repository.gfp_cbas.abstract_vae_wrapper.AbstractVAEWrapper.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_aas_to_idx_array.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_idx_array_to_aas.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_mutations_to_sequence.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_argmax.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_balaji_predictions.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_experimental_X_y.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_gfp_X_y_aa.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_gfp_base_seq.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_samples.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_aa.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_aa_array.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_dna.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.partition_data.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.read_gfp_data.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.CBASVAEWrapper.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeDecoder.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeEncoder.rst", "_autosummary/poli.objective_repository.gfp_cbas.gfp_gp.rst", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.rst", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.BaseVAE.rst", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.SimpleVAE.rst", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.build_vae.rst", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.identity_loss.rst", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.summed_categorical_crossentropy.rst", "_autosummary/poli.objective_repository.gfp_cbas.register.rst", "_autosummary/poli.objective_repository.gfp_cbas.register.GFPCBasBlackBox.rst", "_autosummary/poli.objective_repository.gfp_cbas.register.GFPCBasProblemFactory.rst", "_autosummary/poli.objective_repository.gfp_select.rst", "_autosummary/poli.objective_repository.gfp_select.register.rst", "_autosummary/poli.objective_repository.gfp_select.register.GFPBlackBox.rst", "_autosummary/poli.objective_repository.gfp_select.register.GFPSelectionProblemFactory.rst", "_autosummary/poli.objective_repository.penalized_logp_lambo.rst", "_autosummary/poli.objective_repository.penalized_logp_lambo.register.rst", "_autosummary/poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboBlackBox.rst", "_autosummary/poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboProblemFactory.rst", "_autosummary/poli.objective_repository.rasp.rst", "_autosummary/poli.objective_repository.rasp.register.rst", "_autosummary/poli.objective_repository.rdkit_logp.rst", "_autosummary/poli.objective_repository.rdkit_logp.register.rst", "_autosummary/poli.objective_repository.rdkit_logp.register.LogPBlackBox.rst", "_autosummary/poli.objective_repository.rdkit_logp.register.LogPProblemFactory.rst", "_autosummary/poli.objective_repository.rdkit_qed.rst", "_autosummary/poli.objective_repository.rdkit_qed.register.rst", "_autosummary/poli.objective_repository.rdkit_qed.register.QEDBlackBox.rst", "_autosummary/poli.objective_repository.rdkit_qed.register.QEDProblemFactory.rst", "_autosummary/poli.objective_repository.rfp_foldx_stability_and_sasa.rst", "_autosummary/poli.objective_repository.rfp_foldx_stability_and_sasa.register.rst", "_autosummary/poli.objective_repository.sa_tdc.rst", "_autosummary/poli.objective_repository.sa_tdc.register.rst", "_autosummary/poli.objective_repository.sa_tdc.register.SABlackBox.rst", "_autosummary/poli.objective_repository.sa_tdc.register.SAProblemFactory.rst", "_autosummary/poli.objective_repository.super_mario_bros.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.add_padding_to_level.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.clean_level.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.level_to_array.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.level_to_list.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.levels_to_onehot.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.onehot_to_levels.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.tensor_to_sim_level.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.vectorized.rst", "_autosummary/poli.objective_repository.super_mario_bros.model.rst", "_autosummary/poli.objective_repository.super_mario_bros.model.VAEMario.rst", "_autosummary/poli.objective_repository.super_mario_bros.model.load_example_model.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.ackley_function_01.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.alpine_01.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.alpine_02.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.bent_cigar.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.brown.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.camelback_2d.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.chung_reynolds.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.cosine_mixture.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.cross_in_tray.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.deb_01.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.deb_02.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.deflected_corrugated_spring.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.easom.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.egg_holder.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.shifted_sphere.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.styblinski_tang.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.register.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.register.ToyContinuousBlackBox.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.register.ToyContinuousProblemFactory.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.toy_continuous_problem.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.toy_continuous_problem.ToyContinuousProblem.rst", "_autosummary/poli.objective_repository.white_noise.rst", "_autosummary/poli.objective_repository.white_noise.register.rst", "_autosummary/poli.objective_repository.white_noise.register.WhiteNoiseBlackBox.rst", "_autosummary/poli.objective_repository.white_noise.register.WhiteNoiseProblemFactory.rst", "_autosummary/poli.registered_objectives.rst", "_autosummary/poli.tests.rst", "_autosummary/poli.tests.docs_examples.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_aloha_example.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_logp_example.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_logp_example_using_strings.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_qed_example.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_qed_example_using_strings.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_white_noise_example.rst", "_autosummary/poli.tests.registry.rst", "_autosummary/poli.tests.registry.basic_objectives.rst", "_autosummary/poli.tests.registry.basic_objectives.test_basic_objectives.rst", "_autosummary/poli.tests.registry.basic_objectives.test_basic_objectives.test_registering_aloha.rst", "_autosummary/poli.tests.registry.basic_objectives.test_basic_objectives.test_registering_white_noise.rst", "_autosummary/poli.tests.registry.basic_objectives.test_budget_exhaustion.rst", "_autosummary/poli.tests.registry.chemistry.rst", "_autosummary/poli.tests.registry.chemistry.test_chemistry_objectives.rst", "_autosummary/poli.tests.registry.proteins.rst", "_autosummary/poli.tests.registry.proteins.test_foldx.rst", "_autosummary/poli.tests.registry.proteins.test_foldx_rfp_lambo.rst", "_autosummary/poli.tests.registry.proteins.test_rasp.rst", "_autosummary/poli.tests.registry.test_basic_loop_without_create.rst", "_autosummary/poli.tests.registry.test_force_isolation.rst", "_autosummary/poli.tests.registry.test_passing_array_of_strings.rst", "_autosummary/poli.tests.registry.toy_continuous_problems.rst", "_autosummary/poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims.rst", "_autosummary/poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims.test_embed_camelback_into_high_dimensions.rst", "_autosummary/poli.tests.registry.toy_continuous_problems.test_instancing_of_toy_continuous_problems.rst", "_autosummary/poli.tests.test_minimal_working_example.rst", "_autosummary/poli.tests.test_minimal_working_example.test_minimal_working_example.rst", "_autosummary/poli.tests.test_seeding.rst", "_autosummary/poli.tests.test_seeding.test_seeding_in_white_noise.rst", "_autosummary/poli.tests.util.rst", "_autosummary/poli.tests.util.test_foldx_interface.rst", "_autosummary/poli.tests.util.test_protein_utilities.rst", "_templates/custom-module-template.rst", "api.rst", "bibliography.md", "contributing/a_new_problem.md", "contributing/a_new_solver.md", "getting_started/getting_started.md", "index.md", "understanding_foldx/00-installing-foldx.md", "understanding_foldx/01-single-mutation-using-foldx/index.ipynb", "using_poli/objective_repository/RaSP.md", "using_poli/objective_repository/all_objectives.md", "using_poli/objective_repository/aloha.md", "using_poli/objective_repository/dockstring.md", "using_poli/objective_repository/drd3_docking.md", "using_poli/objective_repository/foldx_rfp_lambo.md", "using_poli/objective_repository/foldx_sasa.md", "using_poli/objective_repository/foldx_stability.md", "using_poli/objective_repository/penalized_logp_lambo.md", "using_poli/objective_repository/rdkit_logp.md", "using_poli/objective_repository/rdkit_qed.md", "using_poli/objective_repository/sa_tdc.md", "using_poli/objective_repository/super_mario_bros.md", "using_poli/objective_repository/tdc_oracles.md", "using_poli/objective_repository/template.md", "using_poli/objective_repository/toy_continuous_problems.md", "using_poli/objective_repository/white_noise.md", "using_poli/observers/registering_an_observer.md", "using_poli/optimization_examples/protein-stability-foldx/optimizing_protein_stability.ipynb", "using_poli/the_basics/defining_a_problem_solver.md", "using_poli/the_basics/defining_an_observer.ipynb", "using_poli/the_basics/diving_deeper.md", "using_poli/the_basics/intro_to_poli.ipynb", "using_poli/the_basics/isolation.ipynb", "using_poli/the_basics/optimizing_an_objective_function.md", "using_poli/the_basics/registering_an_objective_function.md", "using_poli_baselines/bayesian_optimization.md", "using_poli_baselines/cma_es.md", "using_poli_baselines/graph_ga.md", "using_poli_baselines/latent_space_bo.md", "using_poli_baselines/line_bayesian_optimization.md", "using_poli_baselines/nsga_2.md", "using_poli_baselines/random_mutations.md", "using_poli_baselines/template.md"], "titles": ["poli", "poli.core", "poli.core.abstract_black_box", "poli.core.abstract_black_box.AbstractBlackBox", "poli.core.abstract_black_box.NegativeBlackBox", "poli.core.abstract_problem_factory", "poli.core.abstract_problem_factory.AbstractProblemFactory", "poli.core.abstract_problem_factory.MetaProblemFactory", "poli.core.chemistry", "poli.core.chemistry.tdc_black_box", "poli.core.chemistry.tdc_black_box.TDCBlackBox", "poli.core.exceptions", "poli.core.exceptions.BudgetExhaustedException", "poli.core.exceptions.PoliException", "poli.core.multi_objective_black_box", "poli.core.multi_objective_black_box.MultiObjectiveBlackBox", "poli.core.problem_setup_information", "poli.core.problem_setup_information.ProblemSetupInformation", "poli.core.proteins", "poli.core.proteins.foldx_black_box", "poli.core.proteins.foldx_black_box.FoldxBlackBox", "poli.core.registry", "poli.core.registry.delete_observer_run_script", "poli.core.registry.delete_problem", "poli.core.registry.get_problem_factories", "poli.core.registry.get_problems", "poli.core.registry.register_problem", "poli.core.registry.register_problem_from_repository", "poli.core.registry.set_observer", "poli.core.registry.set_observer_run_script", "poli.core.util", "poli.core.util.abstract_observer", "poli.core.util.abstract_observer.AbstractObserver", "poli.core.util.alignment", "poli.core.util.alignment.is_aligned", "poli.core.util.batch", "poli.core.util.batch.batch_input", "poli.core.util.batch.batch_input.batched", "poli.core.util.chemistry", "poli.core.util.chemistry.string_to_molecule", "poli.core.util.chemistry.string_to_molecule.selfies_to_molecules", "poli.core.util.chemistry.string_to_molecule.smiles_to_molecules", "poli.core.util.chemistry.string_to_molecule.strings_to_molecules", "poli.core.util.chemistry.string_to_molecule.translate_selfies_to_smiles", "poli.core.util.chemistry.string_to_molecule.translate_smiles_to_selfies", "poli.core.util.external_observer", "poli.core.util.external_observer.ExternalObserver", "poli.core.util.files", "poli.core.util.files.download_files_from_github", "poli.core.util.files.download_files_from_github.download_file_from_github_repository", "poli.core.util.files.download_files_from_github.get_sha_for_tag", "poli.core.util.files.integrity", "poli.core.util.files.integrity.compute_md5_from_filepath", "poli.core.util.inter_process_communication", "poli.core.util.inter_process_communication.process_wrapper", "poli.core.util.inter_process_communication.process_wrapper.ProcessWrapper", "poli.core.util.inter_process_communication.process_wrapper.get_connection", "poli.core.util.objective_management", "poli.core.util.objective_management.make_run_script", "poli.core.util.objective_management.make_run_script.make_observer_script", "poli.core.util.objective_management.make_run_script.make_run_script", "poli.core.util.observer_wrapper", "poli.core.util.observer_wrapper.start_observer_process", "poli.core.util.proteins", "poli.core.util.proteins.defaults", "poli.core.util.proteins.foldx", "poli.core.util.proteins.foldx.FoldxInterface", "poli.core.util.proteins.mutations", "poli.core.util.proteins.mutations.edits_between_strings", "poli.core.util.proteins.mutations.find_closest_wildtype_pdb_file_to_mutant", "poli.core.util.proteins.mutations.mutations_from_wildtype_residues_and_mutant", "poli.core.util.proteins.pdb_parsing", "poli.core.util.proteins.pdb_parsing.parse_pdb_as_residue_strings", "poli.core.util.proteins.pdb_parsing.parse_pdb_as_residues", "poli.core.util.proteins.pdb_parsing.parse_pdb_as_structure", "poli.core.util.proteins.rasp", "poli.core.util.proteins.rasp.inner_rasp", "poli.core.util.proteins.rasp.inner_rasp.PrismData", "poli.core.util.proteins.rasp.inner_rasp.cavity_model", "poli.core.util.proteins.rasp.inner_rasp.helpers", "poli.core.util.proteins.rasp.inner_rasp.run_pipeline", "poli.core.util.proteins.rasp.inner_rasp.visualization", "poli.core.util.proteins.rasp.load_models", "poli.core.util.proteins.rasp.rasp_interface", "poli.core.util.seeding", "poli.core.util.seeding.seeding", "poli.core.util.seeding.seeding.seed_numpy", "poli.core.util.seeding.seeding.seed_python", "poli.objective", "poli.objective.dynamically_instantiate", "poli.objective.parse_factory_kwargs", "poli.objective.run", "poli.objective_factory", "poli.objective_factory.ExternalBlackBox", "poli.objective_factory.create", "poli.objective_factory.load_config", "poli.objective_factory.start", "poli.objective_repository", "poli.objective_repository.aloha", "poli.objective_repository.aloha.register", "poli.objective_repository.aloha.register.AlohaBlackBox", "poli.objective_repository.aloha.register.AlohaProblemFactory", "poli.objective_repository.dockstring", "poli.objective_repository.dockstring.register", "poli.objective_repository.dockstring.register.DockstringBlackBox", "poli.objective_repository.dockstring.register.DockstringProblemFactory", "poli.objective_repository.drd3_docking", "poli.objective_repository.drd3_docking.register", "poli.objective_repository.drd3_docking.register.DRD3BlackBox", "poli.objective_repository.drd3_docking.register.DRD3ProblemFactory", "poli.objective_repository.foldx_rfp_lambo", "poli.objective_repository.foldx_rfp_lambo.register", "poli.objective_repository.foldx_rfp_lambo.register.Config", "poli.objective_repository.foldx_rfp_lambo.register.RFPWrapper", "poli.objective_repository.foldx_rfp_lambo.register.RFPWrapperFactory", "poli.objective_repository.foldx_rfp_lambo.register.get_config", "poli.objective_repository.foldx_sasa", "poli.objective_repository.foldx_sasa.foldx_utils", "poli.objective_repository.foldx_sasa.register", "poli.objective_repository.foldx_sasa.register.FoldXSASABlackBox", "poli.objective_repository.foldx_sasa.register.FoldXSASAProblemFactory", "poli.objective_repository.foldx_stability", "poli.objective_repository.foldx_stability.foldx_utils", "poli.objective_repository.foldx_stability.register", "poli.objective_repository.foldx_stability.register.FoldXStabilityBlackBox", "poli.objective_repository.foldx_stability.register.FoldXStabilityProblemFactory", "poli.objective_repository.foldx_stability_and_sasa", "poli.objective_repository.foldx_stability_and_sasa.register", "poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASABlackBox", "poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASAProblemFactory", "poli.objective_repository.gfp_cbas", "poli.objective_repository.gfp_cbas.abstract_vae_wrapper", "poli.objective_repository.gfp_cbas.abstract_vae_wrapper.AbstractVAEWrapper", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_aas_to_idx_array", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_idx_array_to_aas", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_mutations_to_sequence", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_argmax", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_balaji_predictions", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_experimental_X_y", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_gfp_X_y_aa", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_gfp_base_seq", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_samples", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_aa", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_aa_array", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_dna", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.partition_data", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.read_gfp_data", "poli.objective_repository.gfp_cbas.cbas_wrapper", "poli.objective_repository.gfp_cbas.cbas_wrapper.CBASVAEWrapper", "poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeDecoder", "poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeEncoder", "poli.objective_repository.gfp_cbas.gfp_gp", "poli.objective_repository.gfp_cbas.make_vae", "poli.objective_repository.gfp_cbas.make_vae.BaseVAE", "poli.objective_repository.gfp_cbas.make_vae.SimpleVAE", "poli.objective_repository.gfp_cbas.make_vae.build_vae", "poli.objective_repository.gfp_cbas.make_vae.identity_loss", "poli.objective_repository.gfp_cbas.make_vae.summed_categorical_crossentropy", "poli.objective_repository.gfp_cbas.register", "poli.objective_repository.gfp_cbas.register.GFPCBasBlackBox", "poli.objective_repository.gfp_cbas.register.GFPCBasProblemFactory", "poli.objective_repository.gfp_select", "poli.objective_repository.gfp_select.register", "poli.objective_repository.gfp_select.register.GFPBlackBox", "poli.objective_repository.gfp_select.register.GFPSelectionProblemFactory", "poli.objective_repository.penalized_logp_lambo", "poli.objective_repository.penalized_logp_lambo.register", "poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboBlackBox", "poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboProblemFactory", "poli.objective_repository.rasp", "poli.objective_repository.rasp.register", "poli.objective_repository.rdkit_logp", "poli.objective_repository.rdkit_logp.register", "poli.objective_repository.rdkit_logp.register.LogPBlackBox", "poli.objective_repository.rdkit_logp.register.LogPProblemFactory", "poli.objective_repository.rdkit_qed", "poli.objective_repository.rdkit_qed.register", "poli.objective_repository.rdkit_qed.register.QEDBlackBox", "poli.objective_repository.rdkit_qed.register.QEDProblemFactory", "poli.objective_repository.rfp_foldx_stability_and_sasa", "poli.objective_repository.rfp_foldx_stability_and_sasa.register", "poli.objective_repository.sa_tdc", "poli.objective_repository.sa_tdc.register", "poli.objective_repository.sa_tdc.register.SABlackBox", "poli.objective_repository.sa_tdc.register.SAProblemFactory", "poli.objective_repository.super_mario_bros", "poli.objective_repository.super_mario_bros.level_utils", "poli.objective_repository.super_mario_bros.level_utils.add_padding_to_level", "poli.objective_repository.super_mario_bros.level_utils.clean_level", "poli.objective_repository.super_mario_bros.level_utils.level_to_array", "poli.objective_repository.super_mario_bros.level_utils.level_to_list", "poli.objective_repository.super_mario_bros.level_utils.levels_to_onehot", "poli.objective_repository.super_mario_bros.level_utils.onehot_to_levels", "poli.objective_repository.super_mario_bros.level_utils.tensor_to_sim_level", "poli.objective_repository.super_mario_bros.level_utils.vectorized", "poli.objective_repository.super_mario_bros.model", "poli.objective_repository.super_mario_bros.model.VAEMario", "poli.objective_repository.super_mario_bros.model.load_example_model", "poli.objective_repository.toy_continuous_problem", "poli.objective_repository.toy_continuous_problem.definitions", "poli.objective_repository.toy_continuous_problem.definitions.ackley_function_01", "poli.objective_repository.toy_continuous_problem.definitions.alpine_01", "poli.objective_repository.toy_continuous_problem.definitions.alpine_02", "poli.objective_repository.toy_continuous_problem.definitions.bent_cigar", "poli.objective_repository.toy_continuous_problem.definitions.brown", "poli.objective_repository.toy_continuous_problem.definitions.camelback_2d", "poli.objective_repository.toy_continuous_problem.definitions.chung_reynolds", "poli.objective_repository.toy_continuous_problem.definitions.cosine_mixture", "poli.objective_repository.toy_continuous_problem.definitions.cross_in_tray", "poli.objective_repository.toy_continuous_problem.definitions.deb_01", "poli.objective_repository.toy_continuous_problem.definitions.deb_02", "poli.objective_repository.toy_continuous_problem.definitions.deflected_corrugated_spring", "poli.objective_repository.toy_continuous_problem.definitions.easom", "poli.objective_repository.toy_continuous_problem.definitions.egg_holder", "poli.objective_repository.toy_continuous_problem.definitions.shifted_sphere", "poli.objective_repository.toy_continuous_problem.definitions.styblinski_tang", "poli.objective_repository.toy_continuous_problem.register", "poli.objective_repository.toy_continuous_problem.register.ToyContinuousBlackBox", "poli.objective_repository.toy_continuous_problem.register.ToyContinuousProblemFactory", "poli.objective_repository.toy_continuous_problem.toy_continuous_problem", "poli.objective_repository.toy_continuous_problem.toy_continuous_problem.ToyContinuousProblem", "poli.objective_repository.white_noise", "poli.objective_repository.white_noise.register", "poli.objective_repository.white_noise.register.WhiteNoiseBlackBox", "poli.objective_repository.white_noise.register.WhiteNoiseProblemFactory", "poli.registered_objectives", "poli.tests", "poli.tests.docs_examples", "poli.tests.docs_examples.test_objective_functions", "poli.tests.docs_examples.test_objective_functions.test_aloha_example", "poli.tests.docs_examples.test_objective_functions.test_logp_example", "poli.tests.docs_examples.test_objective_functions.test_logp_example_using_strings", "poli.tests.docs_examples.test_objective_functions.test_qed_example", "poli.tests.docs_examples.test_objective_functions.test_qed_example_using_strings", "poli.tests.docs_examples.test_objective_functions.test_white_noise_example", "poli.tests.registry", "poli.tests.registry.basic_objectives", "poli.tests.registry.basic_objectives.test_basic_objectives", "poli.tests.registry.basic_objectives.test_basic_objectives.test_registering_aloha", "poli.tests.registry.basic_objectives.test_basic_objectives.test_registering_white_noise", "poli.tests.registry.basic_objectives.test_budget_exhaustion", "poli.tests.registry.chemistry", "poli.tests.registry.chemistry.test_chemistry_objectives", "poli.tests.registry.proteins", "poli.tests.registry.proteins.test_foldx", "poli.tests.registry.proteins.test_foldx_rfp_lambo", "poli.tests.registry.proteins.test_rasp", "poli.tests.registry.test_basic_loop_without_create", "poli.tests.registry.test_force_isolation", "poli.tests.registry.test_passing_array_of_strings", "poli.tests.registry.toy_continuous_problems", "poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims", "poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims.test_embed_camelback_into_high_dimensions", "poli.tests.registry.toy_continuous_problems.test_instancing_of_toy_continuous_problems", "poli.tests.test_minimal_working_example", "poli.tests.test_minimal_working_example.test_minimal_working_example", "poli.tests.test_seeding", "poli.tests.test_seeding.test_seeding_in_white_noise", "poli.tests.util", "poli.tests.util.test_foldx_interface", "poli.tests.util.test_protein_utilities", "&lt;no title&gt;", "API documentation for poli", "References", "Adding a new problem to the repository", "Adding a new optimizer to <code class=\"docutils literal notranslate\"><span class=\"pre\">poli-baselines</span></code>", "Getting started", "poli \ud83e\uddea: a library of discrete objective functions", "Installing <code class=\"docutils literal notranslate\"><span class=\"pre\">foldx</span></code>", "Computing the energy of a protein and a single mutation", "Rapid Stability Predictions", "All objective functions", "Aloha objective function", "dockstring", "DRD3 docking (using TDC)", "Protein (RFP) stability and SASA (using <code class=\"docutils literal notranslate\"><span class=\"pre\">foldx</span></code>,<code class=\"docutils literal notranslate\"><span class=\"pre\">lambo</span></code>)", "Protein solvent accessibility (using <code class=\"docutils literal notranslate\"><span class=\"pre\">foldx</span></code>)", "Protein stability (using <code class=\"docutils literal notranslate\"><span class=\"pre\">foldx</span></code>)", "Penalized logP (using <code class=\"docutils literal notranslate\"><span class=\"pre\">lambo</span></code>)", "Log-solubility (logP)", "Quantitative Estimate of Druglikeness (QED)", "Synthetic Accessibility (using TDC)", "Optimizing jumps in Super Mario Bros", "Therapeutics Data Commons\u2019 oracles", "Objective function name", "Toy continuous objective functions", "White Noise objective function", "Registering and running observers in isolated processes", "Optimizing protein stability using random mutations", "Defining a problem solver in <code class=\"docutils literal notranslate\"><span class=\"pre\">poli_baselines</span></code>", "Defining an observer", "Diving deeper: how does poli work under the hood?", "What is poli?", "Isolating black box objective functions", "Optimizing an objective function", "Registering an objective function in poli", "Bayesian Optimization", "CMA-ES", "Graph Genetic Algorithms", "Latent Space Bayesian Optimization", "Line Bayesian Optimization", "Discrete NSGA-2", "Random mutations", "Template: optimization algorithm"], "terms": {"modul": [0, 1, 2, 5, 8, 18, 19, 21, 30, 33, 35, 36, 38, 47, 48, 51, 53, 54, 57, 58, 63, 64, 65, 67, 71, 84, 97, 98, 102, 103, 106, 110, 116, 121, 126, 130, 150, 152, 162, 166, 167, 170, 171, 172, 176, 180, 182, 186, 199, 222, 227, 228, 229, 236, 237, 242, 244, 248, 249, 251, 257, 259, 262], "thi": [2, 4, 5, 6, 14, 15, 19, 21, 22, 23, 26, 27, 28, 29, 32, 36, 37, 43, 44, 48, 49, 51, 55, 56, 58, 62, 64, 65, 66, 67, 70, 71, 89, 90, 91, 94, 96, 99, 103, 106, 109, 118, 123, 127, 148, 152, 167, 171, 173, 177, 181, 200, 216, 217, 218, 223, 229, 248, 249, 252, 257, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 293, 294, 295, 297, 298, 301, 302, 303, 304], "implement": [2, 4, 5, 8, 9, 14, 15, 16, 18, 19, 36, 65, 100, 103, 104, 107, 119, 124, 128, 131, 148, 154, 166, 167, 171, 183, 184, 218, 266, 268, 272, 274, 276, 279, 286, 289, 290, 293, 294, 295, 296, 297, 298, 302], "abstract": [2, 3, 5, 6, 31, 32, 265, 289, 296], "black": [0, 2, 3, 4, 8, 9, 10, 14, 15, 18, 19, 20, 38, 63, 93, 94, 96, 97, 99, 100, 101, 103, 104, 108, 111, 113, 116, 118, 119, 121, 123, 124, 126, 127, 128, 160, 164, 168, 171, 173, 174, 177, 178, 180, 181, 184, 218, 223, 224, 249, 265, 266, 269, 271, 274, 280, 281, 289, 290, 291, 293, 295, 297, 302], "box": [0, 2, 3, 4, 8, 9, 10, 14, 15, 18, 19, 20, 38, 63, 93, 94, 96, 97, 99, 100, 101, 103, 104, 108, 111, 113, 116, 118, 119, 121, 123, 124, 126, 127, 128, 160, 164, 168, 171, 173, 174, 177, 178, 180, 181, 184, 218, 223, 224, 249, 265, 266, 269, 271, 273, 274, 280, 281, 286, 287, 289, 290, 291, 293, 295, 297, 302], "class": [1, 2, 3, 4, 5, 6, 7, 9, 10, 13, 14, 15, 16, 17, 19, 20, 28, 31, 32, 45, 46, 54, 55, 65, 66, 92, 93, 99, 100, 101, 103, 104, 105, 107, 108, 109, 111, 113, 114, 118, 119, 120, 123, 124, 125, 127, 128, 129, 131, 132, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 163, 164, 165, 167, 168, 169, 171, 173, 174, 175, 177, 178, 179, 181, 183, 184, 185, 196, 197, 217, 218, 219, 220, 221, 223, 224, 225, 265, 266, 290, 291, 296], "from": [2, 10, 20, 23, 25, 27, 37, 43, 44, 47, 48, 49, 50, 51, 52, 65, 66, 70, 89, 90, 96, 106, 119, 124, 128, 134, 139, 142, 155, 171, 190, 193, 198, 200, 206, 215, 256, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304], "which": [2, 3, 7, 16, 20, 45, 52, 66, 70, 74, 95, 103, 168, 177, 179, 217, 218, 224, 265, 266, 268, 270, 271, 274, 275, 276, 279, 282, 286, 289, 290, 291, 293, 294, 295, 296, 297], "all": [2, 92, 94, 97, 99, 100, 101, 106, 148, 200, 224, 229, 265, 266, 267, 270, 271, 273, 274, 281, 289, 290, 293, 296], "object": [0, 2, 3, 4, 14, 15, 17, 19, 20, 32, 46, 50, 55, 56, 59, 66, 73, 74, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 111, 113, 118, 119, 121, 123, 124, 127, 128, 160, 164, 168, 173, 177, 178, 179, 181, 183, 184, 200, 216, 217, 218, 221, 223, 229, 248, 249, 252, 264, 265, 266, 267, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 290, 291, 297, 302], "function": [0, 2, 3, 4, 9, 14, 15, 21, 22, 23, 26, 27, 28, 29, 32, 34, 35, 36, 37, 39, 43, 44, 48, 49, 51, 53, 54, 56, 58, 61, 62, 67, 70, 71, 85, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 102, 103, 104, 106, 108, 111, 113, 115, 116, 119, 121, 124, 128, 133, 153, 160, 164, 167, 168, 173, 174, 177, 178, 179, 184, 187, 196, 199, 200, 216, 217, 218, 220, 221, 223, 224, 229, 238, 248, 249, 252, 255, 257, 264, 265, 266, 267, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 290, 291, 297, 301, 302], "should": [2, 55, 106, 265, 266, 267, 269, 273, 275, 280, 281, 286, 287, 289, 290, 291, 294, 295, 296], "inherit": [2, 10, 15, 266, 289, 290, 291, 296], "info": [3, 4, 10, 15, 20, 93, 100, 104, 108, 113, 119, 124, 128, 160, 164, 168, 174, 178, 184, 218, 224, 265, 266, 290, 291, 293, 296, 302], "problemsetupinform": [3, 4, 10, 15, 20, 32, 93, 94, 100, 104, 108, 113, 119, 124, 128, 160, 164, 168, 174, 178, 184, 218, 224, 265, 276, 291, 296], "batch_siz": [3, 4, 10, 15, 20, 94, 100, 104, 108, 113, 119, 124, 128, 144, 160, 164, 168, 174, 178, 184, 218, 224, 265, 296, 302], "option": [3, 4, 10, 15, 17, 20, 22, 26, 27, 28, 29, 40, 42, 43, 44, 46, 49, 52, 59, 60, 66, 68, 69, 72, 73, 74, 86, 87, 94, 96, 100, 104, 108, 113, 119, 124, 128, 160, 164, 168, 174, 178, 184, 197, 218, 221, 224], "int": [3, 4, 10, 15, 17, 20, 32, 37, 56, 62, 68, 69, 86, 87, 91, 94, 96, 100, 104, 108, 113, 119, 124, 128, 149, 160, 164, 168, 174, 178, 184, 188, 189, 192, 194, 197, 218, 221, 224, 265, 266, 290, 291, 295, 296], "none": [3, 4, 10, 15, 20, 22, 26, 28, 29, 32, 43, 44, 46, 49, 59, 60, 66, 86, 87, 91, 94, 96, 100, 104, 108, 113, 119, 124, 128, 143, 145, 147, 160, 161, 164, 168, 174, 178, 184, 197, 218, 221, 224, 265, 266, 273, 274, 280, 281, 285, 286, 287, 289, 291, 295, 296], "parallel": [3, 4, 10, 20, 94, 100, 104, 108, 113, 119, 124, 128, 160, 164, 168, 174, 178, 184, 218, 224, 265], "bool": [3, 4, 10, 17, 20, 25, 26, 27, 40, 41, 42, 43, 44, 49, 66, 68, 69, 72, 73, 74, 94, 96, 100, 104, 108, 113, 119, 124, 128, 140, 160, 164, 168, 174, 178, 184, 216, 218, 224, 265, 279, 295], "fals": [3, 4, 10, 17, 20, 25, 26, 27, 41, 42, 43, 44, 49, 66, 69, 72, 73, 74, 94, 96, 100, 104, 108, 113, 119, 124, 128, 139, 140, 146, 160, 164, 168, 174, 178, 184, 193, 218, 224, 265, 291, 293, 295], "num_work": [3, 4, 10, 20, 94, 100, 104, 108, 113, 119, 124, 128, 160, 164, 168, 174, 178, 184, 218, 224, 265], "evaluation_budget": [3, 4, 10, 20, 94, 100, 104, 108, 113, 119, 124, 128, 160, 164, 168, 174, 178, 184, 218, 224, 265], "inf": [3, 4, 10, 20, 94, 100, 104, 108, 113, 119, 124, 128, 160, 164, 168, 174, 178, 184, 218, 224, 265, 294], "base": [3, 6, 13, 32, 55, 106, 154, 267, 268, 270, 272, 275, 282, 289, 293, 296, 302], "optim": [3, 17, 32, 65, 110, 166, 167, 199, 200, 217, 220, 252, 264, 269, 270, 272, 286, 290, 291, 296, 302, 303], "problem": [3, 4, 5, 6, 10, 15, 16, 17, 20, 21, 23, 24, 25, 26, 27, 34, 57, 58, 60, 93, 94, 99, 100, 101, 104, 105, 108, 109, 113, 119, 120, 124, 128, 129, 160, 164, 173, 174, 177, 178, 179, 180, 184, 185, 186, 200, 217, 218, 222, 223, 224, 252, 267, 276, 291, 293, 302], "paramet": [3, 4, 6, 10, 15, 17, 20, 22, 23, 25, 26, 27, 28, 29, 37, 40, 41, 42, 43, 44, 46, 49, 50, 52, 55, 56, 59, 60, 62, 66, 67, 68, 69, 70, 72, 73, 74, 86, 87, 89, 90, 91, 93, 94, 96, 100, 101, 104, 105, 108, 113, 119, 120, 124, 128, 129, 160, 164, 174, 178, 179, 184, 185, 218, 224], "The": [3, 4, 10, 15, 17, 19, 20, 22, 23, 26, 27, 28, 29, 37, 46, 49, 50, 52, 55, 56, 59, 60, 62, 65, 66, 68, 69, 70, 72, 73, 74, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 104, 106, 108, 113, 118, 119, 123, 124, 127, 128, 154, 160, 164, 166, 173, 174, 177, 178, 179, 181, 184, 214, 215, 217, 218, 223, 224, 266, 268, 270, 271, 272, 274, 277, 278, 279, 289, 290, 294, 295, 296, 302], "setup": [3, 4, 6, 10, 15, 16, 20, 46, 62, 100, 101, 104, 105, 108, 109, 113, 119, 120, 124, 128, 129, 160, 164, 174, 178, 179, 184, 185, 218, 224, 275, 276, 279, 282], "inform": [3, 4, 6, 10, 15, 16, 20, 32, 46, 62, 93, 94, 96, 100, 101, 103, 104, 105, 108, 109, 113, 119, 120, 124, 128, 129, 160, 164, 171, 174, 178, 179, 184, 185, 218, 221, 224, 264, 265, 270, 291, 296], "provid": [3, 15, 46, 92, 109, 119, 124, 178, 268, 269, 270, 291, 293], "detail": [3, 9, 67, 90, 91, 270, 289, 293], "about": [3, 10, 27, 90, 91, 93, 94, 96, 265, 268, 269, 272, 289, 293, 296], "batch": [3, 4, 10, 15, 20, 94, 100, 104, 108, 113, 119, 124, 128, 160, 164, 174, 178, 184, 218, 224], "size": [3, 4, 10, 15, 20, 37, 94, 100, 104, 108, 113, 119, 124, 128, 160, 164, 174, 178, 184, 218, 224, 296, 298, 302], "evalu": [3, 4, 10, 14, 15, 20, 94, 96, 100, 104, 108, 113, 119, 124, 128, 160, 164, 174, 178, 179, 184, 218, 224, 266, 267, 279, 289, 290, 291, 294, 296], "default": [3, 4, 10, 15, 17, 20, 22, 27, 28, 29, 46, 49, 52, 66, 68, 69, 72, 73, 74, 94, 100, 104, 108, 113, 119, 124, 128, 160, 164, 174, 178, 184, 218, 224, 265, 266, 276, 277, 278, 286, 296, 297, 301], "flag": [3, 4, 10, 20, 26, 100, 104, 108, 113, 119, 124, 128, 160, 164, 174, 178, 184, 218], "indic": [3, 4, 10, 20, 26, 100, 104, 108, 113, 119, 124, 128, 134, 135, 160, 164, 174, 178, 184, 218, 266, 290], "whether": [3, 4, 10, 17, 20, 25, 26, 49, 72, 73, 100, 104, 108, 113, 119, 124, 128, 160, 164, 174, 178, 184, 218, 224, 249, 257, 270, 279, 280, 281, 291, 293, 296], "number": [3, 4, 10, 20, 37, 56, 62, 84, 85, 86, 87, 91, 94, 96, 100, 104, 108, 113, 119, 124, 128, 160, 164, 168, 174, 178, 184, 218, 224, 266, 272, 286, 290, 293, 295], "worker": [3, 4, 10, 20, 100, 104, 108, 113, 119, 124, 128, 160, 164, 174, 178, 184, 218, 224], "us": [3, 7, 10, 20, 22, 26, 28, 29, 32, 43, 44, 46, 49, 51, 55, 56, 60, 64, 65, 66, 88, 89, 94, 96, 99, 100, 104, 106, 107, 108, 119, 123, 124, 126, 128, 138, 139, 140, 166, 167, 168, 171, 172, 173, 174, 176, 177, 178, 180, 183, 184, 217, 223, 248, 252, 264, 265, 266, 269, 270, 271, 272, 274, 280, 281, 286, 288, 290, 291, 294, 295, 296, 297, 298, 301, 302], "half": [3, 94, 224], "avail": [3, 24, 25, 94, 106, 118, 123, 127, 181, 224, 229, 267, 270, 272, 276, 277, 278, 279, 286, 289, 293, 295, 296], "cpu": [3, 94, 224], "maximum": [3, 4, 94, 100, 104, 108, 113, 119, 124, 128, 160, 164, 174, 178, 184, 218, 224, 296], "allow": [3, 4, 7, 19, 20, 94, 113, 118, 119, 123, 124, 127, 128, 160, 164, 173, 177, 181, 217, 218, 265, 266, 269, 270, 286, 290, 293, 295, 296], "float": [3, 4, 20, 113, 119, 124, 128, 160, 164, 174, 177, 178, 184, 212, 218, 224, 265, 268, 295], "type": [3, 10, 15, 20, 22, 24, 25, 40, 41, 42, 43, 44, 50, 55, 56, 59, 60, 66, 68, 69, 70, 72, 73, 74, 90, 95, 100, 104, 108, 136, 141, 174, 178, 218, 265, 270, 294, 296], "observ": [3, 21, 22, 28, 29, 30, 31, 32, 45, 46, 57, 58, 59, 61, 62, 89, 94, 96, 139, 268, 289, 295, 296], "record": 3, "dure": [3, 62, 265, 286], "abstractobserv": [3, 28, 59, 94, 96, 291], "set_observ": [3, 288], "set": [3, 26, 28, 29, 32, 55, 74, 106, 138, 140, 146, 152, 174, 178, 265, 266, 271, 274, 290, 291, 293], "__call__": [3, 4, 268], "x": [3, 4, 15, 32, 46, 94, 96, 100, 104, 106, 124, 140, 145, 146, 174, 178, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 216, 218, 224, 265, 266, 267, 271, 273, 274, 275, 280, 281, 285, 286, 287, 289, 290, 291, 296, 297], "context": [3, 15, 32, 46, 96, 100, 104, 124, 174, 178, 218, 224, 265, 291, 296], "given": [3, 15, 22, 43, 44, 56, 59, 60, 66, 69, 74, 103, 104, 105, 124, 136, 137, 138, 198, 266, 267, 271, 274, 290], "input": [3, 10, 15, 22, 29, 34, 36, 94, 100, 104, 108, 124, 174, 178, 184, 218, 224, 265, 267, 268, 273, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 289, 290, 296, 297, 301, 302], "_black_box": [3, 4, 15, 100, 104, 124, 174, 178, 218, 224, 265, 296], "method": [3, 4, 6, 7, 10, 15, 17, 20, 32, 46, 55, 66, 70, 74, 93, 94, 100, 101, 104, 105, 108, 109, 113, 114, 119, 120, 124, 125, 128, 129, 132, 138, 149, 150, 151, 154, 155, 160, 161, 164, 165, 168, 169, 174, 175, 178, 179, 184, 185, 197, 218, 219, 221, 224, 225, 265, 266, 270, 276, 277, 278, 289, 290, 291, 293, 294, 295, 296], "termin": [3, 62, 274, 277, 278, 279, 280, 281, 291, 296], "__enter__": 3, "enter": 3, "manag": [3, 96], "__exit__": 3, "exc_typ": 3, "exc_val": 3, "exc_tb": 3, "exit": 3, "__del__": 3, "destructor": 3, "__neg__": 3, "creat": [3, 6, 20, 26, 27, 28, 55, 57, 58, 59, 60, 92, 96, 101, 105, 109, 120, 129, 173, 177, 179, 185, 186, 248, 265, 266, 267, 268, 269, 270, 271, 273, 274, 276, 277, 278, 279, 280, 281, 285, 287, 289, 291, 294, 295, 297, 298, 301, 302, 303, 304], "new": [3, 108, 173, 177, 268, 270, 290, 296], "neg": [3, 158, 274, 278], "origin": [3, 4, 66, 67, 70, 131, 215, 268, 270, 289], "one": [3, 143, 178, 192, 264, 265, 266, 268, 270, 271, 272, 289, 290, 293, 301], "__init__": [3, 4, 6, 7, 10, 15, 17, 20, 32, 46, 55, 66, 93, 100, 101, 104, 105, 108, 109, 113, 114, 119, 120, 124, 125, 128, 129, 132, 149, 150, 151, 154, 155, 160, 161, 164, 165, 168, 169, 174, 175, 178, 179, 184, 185, 197, 218, 219, 221, 224, 225, 265, 266, 290, 291, 296], "initi": [3, 4, 10, 15, 17, 20, 32, 46, 55, 62, 66, 93, 94, 96, 100, 104, 108, 113, 119, 124, 128, 160, 164, 174, 178, 184, 218, 224, 266, 270, 289, 290, 293, 296, 302], "execut": [3, 4, 51, 55, 59, 88, 106, 108, 113, 160, 164, 184, 218, 269, 275], "f": [4, 19, 64, 65, 94, 96, 118, 123, 127, 181, 265, 266, 267, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 289, 291, 293, 294, 295, 296, 297, 298, 302, 303, 304], "abstractblackbox": [4, 10, 15, 94, 96, 113, 160, 164, 218, 265, 266, 289, 290, 291, 296], "factori": [5, 6, 19, 24, 26, 27, 55, 60, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 101, 102, 103, 105, 109, 111, 118, 119, 120, 121, 123, 124, 127, 129, 173, 177, 179, 181, 185, 217, 223, 265, 268, 289], "defin": [6, 28, 67, 180, 200, 252, 265, 266, 286, 293, 295], "interfac": [6, 65, 92, 268, 294], "instanc": [6, 10, 15, 101, 105, 108, 120, 129, 179, 185, 218, 267, 289, 296, 302], "framework": 264, "get_setup_inform": [6, 101, 105, 109, 120, 129, 179, 185, 265, 296], "return": [4, 6, 20, 22, 24, 25, 40, 41, 42, 43, 44, 50, 52, 56, 59, 60, 66, 68, 69, 70, 72, 73, 74, 90, 94, 95, 96, 101, 105, 120, 124, 129, 136, 137, 138, 141, 143, 156, 157, 168, 173, 174, 177, 178, 179, 185, 191, 194, 222, 223, 224, 265, 266, 273, 274, 276, 277, 278, 280, 281, 287, 289, 290, 294, 296], "specifi": [6, 49, 50, 94, 101, 105, 120, 129, 137, 142, 150, 154, 179, 185, 217, 265, 270, 280, 281, 295, 296, 302], "metaclass": 7, "abstractproblemfactori": [7, 24, 26, 60, 265, 296], "overrid": 7, "__repr__": 7, "__str__": 7, "arg": [7, 150, 151, 154, 155, 197, 265, 270], "kwarg": [7, 26, 60, 89, 90, 91, 150, 151, 154, 155, 197, 265, 296], "In": [106, 166, 168, 264, 266, 267, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 285, 286, 289, 290, 291, 293, 294, 295, 296, 298, 302], "we": [9, 14, 20, 27, 64, 70, 94, 106, 118, 119, 123, 124, 127, 128, 139, 166, 167, 173, 174, 177, 178, 181, 200, 214, 216, 217, 252, 265, 266, 267, 268, 270, 271, 274, 275, 276, 279, 286, 289, 290, 291, 293, 294, 295, 296, 297, 298, 301, 302], "synthet": [9, 182, 183, 184, 185, 268, 272], "access": [9, 66, 106, 116, 119, 120, 126, 128, 129, 180, 183, 184, 185, 264, 265, 268, 270, 272, 275, 286], "tdc": [9, 10, 106, 107, 182, 183, 184, 268, 272], "oracl": [9, 10, 107, 108, 182, 183, 184, 268, 272, 275, 282], "1": [9, 19, 27, 37, 65, 68, 70, 96, 103, 104, 105, 107, 110, 118, 123, 127, 134, 135, 139, 146, 156, 166, 167, 168, 171, 177, 181, 183, 184, 188, 200, 206, 215, 217, 221, 264, 266, 267, 268, 270, 271, 273, 275, 279, 280, 281, 285, 286, 287, 289, 290, 291, 293, 294, 296, 297, 298, 301, 302], "huang": [9, 107, 183, 264, 268, 275, 282], "kexin": [9, 264], "tianfan": [9, 264], "fu": [9, 107, 183, 264], "wenhao": [9, 264], "gao": [9, 107, 183, 264, 272], "yue": [9, 264], "zhao": [9, 264], "yusuf": [9, 264], "roohani": [9, 264], "jure": [9, 264], "leskovec": [9, 264], "connor": [9, 264], "w": [9, 64, 107, 183, 192, 197, 264, 268, 270, 275, 291], "colei": [9, 264, 268], "cao": [9, 264], "xiao": [9, 264], "jimeng": [9, 264], "sun": [9, 264], "marinka": [9, 264], "zitnik": [9, 264], "artifici": [9, 107, 183, 200], "intellig": [9, 107, 183], "foundat": [9, 107, 183], "therapeut": [9, 10, 107, 183, 264, 268, 272, 275, 282, 296], "scienc": [9, 107, 183, 264], "natur": 9, "chemic": [9, 103, 104, 105, 264], "biologi": [9, 106, 118, 123, 127, 181, 264, 275], "18": [9, 107, 183, 264, 289], "10": [9, 37, 103, 104, 105, 107, 171, 183, 264, 270, 291, 297, 298, 301, 302], "octob": 9, "2022": [9, 65, 103, 104, 105, 107, 110, 166, 167, 183, 264, 268, 269, 270, 272, 274, 279, 289], "1033": [9, 107, 183], "36": 9, "http": [9, 37, 48, 65, 67, 103, 104, 105, 106, 107, 110, 166, 167, 171, 183, 200, 220, 221, 264, 265, 267, 268, 269, 270, 276, 279, 291, 296], "doi": [9, 103, 104, 105, 107, 171, 183, 264], "org": [9, 37, 65, 103, 104, 105, 107, 110, 166, 167, 171, 183, 200, 220, 221, 264, 270], "1038": [9, 107, 183], "s41589": [9, 107, 183], "022": [9, 107, 183], "01131": [9, 107, 183], "2": [9, 27, 37, 65, 68, 107, 118, 123, 127, 134, 135, 181, 183, 197, 200, 216, 218, 221, 264, 267, 270, 282, 285, 286, 287, 289, 293, 297, 301], "oracle_nam": [10, 108], "str": [10, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 40, 41, 42, 43, 44, 46, 49, 50, 52, 55, 56, 59, 60, 62, 66, 68, 69, 70, 72, 73, 74, 89, 90, 91, 94, 96, 104, 108, 119, 124, 128, 161, 178, 190, 191, 197, 218, 265, 270, 277, 278, 279, 291, 296], "from_smil": [10, 108, 168, 174, 178, 184], "true": [10, 27, 40, 41, 42, 43, 44, 49, 66, 68, 69, 74, 94, 96, 108, 140, 155, 160, 168, 174, 178, 184, 216, 270, 275, 277, 278, 279, 280, 281, 282, 289, 291, 293, 295, 296], "repres": [10, 20, 56, 68, 73, 108, 154, 293], "data": [9, 10, 35, 100, 104, 106, 139, 140, 146, 147, 152, 264, 268, 270, 272, 275, 276, 282, 296], "common": [9, 10, 92, 264, 268, 270, 272, 275, 282, 296, 302], "It": [10, 26, 55, 56, 89, 106, 265, 267, 270, 274, 275, 289, 290, 293], "name": [10, 17, 22, 23, 26, 27, 28, 29, 46, 49, 50, 60, 62, 72, 73, 74, 89, 91, 94, 96, 104, 108, 218, 221, 265, 267, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 286, 287, 289, 291, 293, 294, 295, 296, 297, 298, 301], "comput": [10, 19, 52, 66, 68, 70, 100, 104, 106, 108, 118, 119, 123, 124, 126, 127, 128, 166, 167, 172, 174, 178, 180, 181, 200, 264, 267, 268, 269, 271, 272, 275, 277, 278, 279, 282, 294], "dock": [10, 103, 104, 105, 106, 107, 108, 109, 264, 268, 272, 274, 294], "score": [10, 103, 104, 105, 119, 124, 128, 268, 271, 272, 274, 275, 277, 278, 279, 294], "an": [10, 19, 22, 28, 29, 32, 34, 37, 40, 41, 42, 43, 44, 45, 46, 49, 56, 61, 62, 65, 70, 89, 91, 93, 94, 96, 118, 123, 127, 134, 135, 173, 178, 181, 192, 249, 265, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 289, 294, 297, 298, 302], "contain": [8, 10, 16, 18, 21, 37, 51, 58, 60, 64, 67, 68, 69, 71, 89, 90, 91, 95, 134, 135, 152, 221, 229, 265, 267, 270, 277, 278, 296], "process": [10, 26, 28, 32, 45, 46, 55, 56, 61, 62, 89, 91, 93, 94, 96, 100, 104, 119, 123, 124, 128, 152, 173, 174, 178, 249, 264, 265, 270, 275, 276, 277, 278, 279, 280, 281, 282, 286, 293, 294, 295, 296, 297], "multipl": [10, 100, 104, 174, 178], "budget": [3, 10, 12, 20, 96, 119, 124, 128], "infin": [10, 94, 100, 104, 108, 119, 124, 128, 174, 178, 184], "molecul": [10, 39, 40, 41, 42, 103, 104, 105, 168, 174, 178, 179, 264, 267, 270, 274, 275, 282, 293], "ar": [10, 24, 27, 32, 65, 68, 70, 95, 106, 140, 168, 173, 174, 177, 178, 179, 217, 229, 252, 266, 267, 268, 269, 271, 272, 274, 276, 277, 278, 279, 280, 281, 285, 286, 289, 290, 291, 293, 294, 295, 296, 297], "smile": [10, 41, 42, 43, 44, 104, 108, 173, 174, 177, 178, 184, 268, 274, 279, 280, 281], "format": [10, 55, 67, 70, 136], "represent": [10, 39, 42, 104, 108, 171, 264, 294], "custom": [11, 295], "insid": [1, 11, 27, 89, 97, 106, 173, 178, 265, 267, 268, 270, 271, 274, 275, 286, 289, 293, 294, 296], "packag": [11, 13, 43, 44, 48, 275, 291, 294, 296], "rais": [12, 15, 40, 41, 43, 44, 49, 50, 56, 65, 68, 69, 266, 269, 290, 295], "when": [12, 55, 94, 96, 265, 271, 274, 291, 293, 295], "exhaust": 12, "multi_object": 14, "version": [14, 46, 66, 93, 106, 166, 177, 179, 266, 267, 268, 269, 270, 271, 275, 286, 290, 291, 301, 302], "mean": [14, 70, 138, 168, 279, 286, 294, 298], "simpli": [14, 266, 267, 274, 275, 276, 279, 282, 290, 291, 293], "concaten": [14, 15, 174, 178], "result": [14, 15, 66, 174, 178, 270, 291, 294], "individu": [14, 15, 67, 191, 270, 289, 291, 294], "objective_funct": [15, 302], "list": [15, 17, 20, 25, 26, 28, 40, 41, 42, 43, 44, 59, 60, 66, 67, 68, 69, 70, 72, 73, 119, 124, 128, 134, 148, 155, 178, 189, 191, 194, 265, 268, 270, 271, 274, 277, 278, 289, 291, 293, 296], "multi": [15, 264, 302], "requir": [15, 20, 48, 49, 106, 173, 177, 265, 266, 268, 271, 274, 289, 290, 291, 293, 294, 295], "valueerror": [15, 50, 69], "If": [4, 15, 22, 25, 27, 28, 29, 32, 37, 40, 41, 42, 43, 44, 46, 49, 50, 56, 62, 65, 66, 68, 69, 70, 74, 86, 87, 94, 96, 173, 177, 216, 218, 265, 266, 267, 268, 269, 270, 274, 275, 277, 278, 279, 280, 281, 285, 291, 293, 294, 295, 296], "max_sequence_length": [17, 265, 289, 291, 296], "align": [17, 265, 291, 296], "alphabet": [16, 17, 20, 100, 104, 119, 124, 128, 178, 218, 265, 266, 276, 277, 278, 281, 289, 290, 291, 293, 296, 302, 303, 304], "log_transform_recommend": [17, 291], "s": [17, 20, 43, 44, 64, 65, 96, 106, 119, 124, 128, 131, 171, 173, 174, 177, 178, 179, 200, 214, 229, 264, 265, 267, 268, 272, 275, 276, 277, 278, 279, 282, 286, 289, 290, 291, 293, 294, 295, 297, 301, 302], "length": [16, 17, 37, 68, 69, 145, 270, 296], "longest": 17, "sequenc": [16, 17, 65, 99, 100, 101, 110, 134, 135, 136, 137, 141, 142, 143, 166, 167, 264, 266, 268, 270, 273, 287, 289, 290, 293, 296], "have": [17, 27, 37, 106, 119, 124, 128, 200, 248, 265, 266, 267, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 285, 290, 293, 295, 296], "been": [17, 200, 269], "charact": 17, "mai": [17, 27, 171, 264], "appear": [17, 265, 267, 270], "A": [4, 17, 20, 24, 25, 26, 28, 37, 40, 41, 42, 43, 44, 60, 64, 66, 68, 69, 70, 72, 73, 90, 96, 99, 100, 101, 106, 110, 116, 118, 119, 123, 124, 126, 127, 128, 168, 174, 178, 180, 181, 182, 186, 196, 197, 199, 218, 220, 222, 224, 264, 267, 268, 270, 271, 272, 273, 277, 278, 291, 296], "recommend": [17, 106, 267, 268, 271, 274, 275, 298], "algorithm": [17, 32, 217, 252, 264, 266, 270, 286, 290, 291, 293, 295, 296, 297, 302], "log": [17, 46, 158, 166, 172, 173, 174, 268, 272, 296], "transform": [17, 39, 187, 192, 193], "target": [17, 100, 104, 294], "foldx": [19, 20, 67, 70, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 171, 180, 181, 267, 268, 270, 272, 289, 294, 296], "simul": [19, 20, 65, 66, 118, 119, 123, 124, 127, 128, 181, 194, 200, 265, 267], "differ": [4, 19, 68, 118, 123, 127, 181, 229, 265, 266, 267, 270, 271, 290, 291, 296], "free": [19, 118, 123, 127, 181, 265, 266, 269, 270, 293], "energi": [19, 66, 118, 123, 127, 181, 269, 278], "between": [19, 68, 70, 100, 118, 123, 127, 177, 181, 280], "wildtyp": [19, 20, 69, 70, 118, 119, 123, 124, 127, 128, 171, 181, 268, 271, 272, 277, 278], "mutat": [19, 20, 66, 118, 123, 127, 136, 181, 264, 266, 268, 271, 272, 277, 290, 293, 295, 302], "schymkowitz": [19, 65, 118, 123, 127, 181, 268, 270, 289], "j": [19, 65, 103, 104, 105, 118, 123, 127, 181, 264, 291], "borg": [19, 65, 118, 123, 127, 181, 270, 289], "stricher": [19, 65, 118, 123, 127, 181, 270, 289], "ny": [19, 65, 118, 123, 127, 181], "r": [19, 64, 65, 70, 118, 123, 127, 181, 200, 264, 271, 275, 291], "rousseau": [19, 65, 118, 123, 127, 181, 270, 289], "serrano": [19, 65, 118, 123, 127, 181, 270, 289], "l": [19, 64, 65, 96, 99, 100, 101, 118, 123, 127, 144, 149, 150, 151, 171, 181, 264, 265, 266, 267, 273, 285, 287, 290, 291, 293, 294, 296], "2005": [19, 65, 118, 123, 127, 181, 268], "web": [19, 65, 118, 123, 127, 181], "server": [19, 55, 56, 65, 118, 123, 127, 181, 291], "onlin": [19, 65, 118, 123, 127, 181], "forc": [19, 26, 65, 118, 123, 127, 181, 249], "field": [19, 65, 118, 123, 127, 181], "nucleic": [19, 65, 118, 123, 127, 181], "acid": [19, 20, 64, 65, 118, 119, 123, 124, 127, 128, 134, 135, 137, 142, 143, 181], "research": [19, 65, 118, 123, 127, 181, 264], "33": [19, 65, 118, 123, 127, 156, 181, 270, 289], "suppl_2": [19, 65, 118, 123, 127, 181], "w382": [19, 65, 118, 123, 127, 181], "w388": [19, 65, 118, 123, 127, 181], "wildtype_pdb_path": [20, 119, 124, 128, 271, 289], "union": [20, 26, 59, 60, 66, 69, 119, 124, 128], "path": [20, 26, 28, 49, 52, 59, 60, 66, 69, 72, 73, 74, 106, 119, 124, 128, 147, 198, 265, 270, 271, 276, 277, 278, 279, 282, 289, 291], "experiment_id": [20, 119, 124, 128, 291], "tmp_folder": [20, 119, 124, 128], "eager_repair": [20, 119, 124, 128, 277, 278], "pdb": [20, 66, 69, 70, 71, 72, 73, 74, 119, 123, 124, 128, 171, 267, 271, 275, 277, 278, 289, 294], "file": [20, 27, 65, 66, 67, 69, 70, 71, 72, 73, 74, 95, 99, 106, 119, 123, 124, 128, 171, 173, 177, 217, 223, 264, 265, 267, 269, 271, 274, 276, 279, 289, 291, 296], "amino": [20, 64, 119, 124, 128, 134, 135, 137, 142, 143], "experi": [20, 119, 124, 128, 139, 200, 291], "id": [20, 67, 119, 124, 128, 189, 248, 264, 265, 270, 291, 296], "temporari": [20, 119, 124, 128], "folder": [20, 27, 99, 106, 119, 124, 128, 173, 177, 217, 223, 265, 267, 269, 282, 291, 296], "eagerli": [20, 119, 124, 128], "repair": [20, 65, 66, 119, 124, 128, 289], "wildtype_residu": [20, 70], "residu": [20, 67, 69, 70, 72, 73, 270, 289], "each": [20, 32, 37, 68, 70, 137, 142, 270, 291, 294, 295, 298], "wildtype_amino_acid": 20, "wildtype_residue_str": [20, 70], "string": [20, 39, 40, 41, 42, 43, 44, 55, 60, 68, 69, 70, 72, 89, 90, 91, 104, 108, 135, 136, 145, 173, 174, 177, 178, 184, 190, 191, 266, 268, 271, 273, 277, 278, 280, 281, 287, 290, 295, 296, 303, 304], "create_working_directori": 20, "work": [20, 37, 59, 60, 66, 96, 106, 209, 213, 256, 257, 266, 267, 269, 270, 272, 274, 275, 280, 281, 282, 289, 290, 291, 293, 295, 297], "directori": [20, 59, 60, 66, 269, 270, 271, 275, 276, 277, 278, 282, 291], "util": [1, 21, 115, 124, 152, 187, 291, 294, 297], "regist": [21, 25, 26, 27, 28, 29, 94, 95, 96, 106, 267, 271, 274, 277, 278, 280, 281, 293], "observer_nam": [22, 28, 29, 46, 62, 288], "delet": [22, 23, 291], "run": [22, 26, 27, 28, 29, 45, 55, 57, 58, 59, 60, 66, 94, 96, 106, 124, 173, 177, 229, 265, 266, 267, 268, 269, 270, 289, 290, 291, 293, 295, 296], "script": [22, 26, 28, 29, 55, 57, 58, 59, 60, 61, 65, 88, 99, 106, 123, 173, 177, 200, 217, 223, 265, 271, 275, 291, 295, 296], "take": [22, 23, 26, 27, 28, 29, 55, 191, 194, 264, 265, 266, 273, 286, 287, 289, 290, 293, 296, 297], "pass": [22, 26, 28, 29, 46, 55, 70, 74, 89, 90, 94, 265, 270, 276, 277, 278, 289, 296], "locat": [22, 28, 29, 65, 214, 221, 270, 303, 304], "note": [22, 25, 28, 29, 49, 55, 56, 62, 66, 119, 124, 128], "must": [22, 28, 29, 267, 273, 285, 286, 287], "accept": [22, 28, 29, 55], "port": [22, 28, 29, 55, 56, 62, 91], "password": [22, 28, 29, 55, 56, 62, 91], "argument": [10, 22, 26, 28, 29, 46, 55, 89, 94, 96, 108, 277, 278, 289, 295], "problem_nam": [23, 265, 285, 289], "configur": [23, 26, 29, 95], "dict": [10, 24, 26, 55, 89, 90, 94, 96, 100, 104, 108, 265, 296], "dictionari": [24, 55, 90, 289], "problem_factori": [24, 26, 60, 274, 298, 302, 303, 304], "include_repositori": 289, "includ": [25, 106, 265, 267, 268, 271, 274, 275, 286, 289, 291, 294, 295, 296, 297], "repositori": [25, 27, 47, 48, 49, 50, 92, 103, 131, 200, 206, 229, 264, 266, 267, 268, 271, 274, 276, 279, 289, 293, 294], "problem_list": 25, "otherwis": [25, 42, 69, 270, 277, 278], "onli": [4, 9, 25, 96, 131, 139, 148, 209, 213, 214, 265, 266, 267, 270, 271, 274, 275, 276, 278, 279, 282, 286, 289, 290, 295, 296], "user": [25, 28, 49, 55, 119, 124, 128, 154, 252, 266, 270, 290, 291, 294, 296], "conda_environment_nam": [26, 60, 265, 296], "python_path": [26, 28, 59, 60, 296], "conda": [26, 28, 59, 60, 99, 106, 173, 177, 217, 223, 266, 268, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 290, 294], "environ": [26, 27, 28, 49, 59, 60, 99, 173, 177, 217, 223, 264, 266, 267, 268, 270, 271, 274, 277, 278, 280, 281, 285, 290, 294, 295], "python": [26, 28, 37, 59, 60, 64, 87, 96, 106, 118, 123, 127, 181, 264, 265, 267, 268, 275, 277, 278, 291, 294], "addit": [10, 26, 46, 55, 59, 94, 96, 108, 271], "keyword": [10, 26, 46, 55, 89, 94, 96, 108, 265, 277, 278, 289, 295], "With": [26, 28, 295, 296], "can": [25, 26, 27, 28, 37, 45, 55, 62, 74, 106, 155, 171, 174, 178, 196, 265, 266, 267, 269, 270, 271, 274, 275, 276, 279, 280, 281, 282, 285, 286, 289, 290, 291, 293, 294, 295, 296, 301], "instanti": [26, 28, 29, 46, 62, 89, 91, 93, 94, 96, 266, 290, 291, 294, 295, 296], "separ": [26, 28], "also": [26, 89, 106, 123, 265, 267, 268, 271, 276, 277, 278, 279, 286, 289, 291, 293, 295, 296, 301], "so": [9, 26, 70, 174, 178, 266, 270, 279, 290, 294, 296], "later": 26, "append": [26, 28, 60, 290, 291], "overwrit": [26, 49, 66, 94, 96, 291, 296], "exist": [26, 49, 50, 265, 270, 289], "correspond": [27, 100, 104, 135, 224, 270], "objective_repositori": [27, 265, 271, 274, 275, 276, 279, 282, 296, 298, 302, 303, 304], "yaml": 27, "said": [27, 265, 266, 290, 296], "enviro": [27, 265, 266, 290, 296], "sinc": [27, 70, 106, 252, 265, 266, 269, 270, 274, 275, 276, 279, 286, 289, 290, 293, 295, 296, 297], "t": [27, 64, 107, 118, 123, 127, 181, 183, 264, 265, 268, 269, 270, 274, 275, 276, 279, 291, 294, 295, 296], "import": [25, 27, 50, 65, 96, 167, 265, 267, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 289, 291, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304], "depend": [27, 270, 271, 274, 277, 278, 279, 280, 281, 285, 293], "instal": [27, 48, 119, 124, 128, 173, 177, 268, 270, 271, 274, 276, 277, 278, 279, 280, 281, 285, 291, 293, 294, 295, 296], "conda_environment_loc": 28, "extern": [28, 45, 46, 61, 89, 93, 293], "after": [28, 32, 106, 265, 266, 270, 275, 276, 279, 282, 289, 290, 293, 296], "externalobserv": [28, 288], "relev": [28, 270, 271, 274, 275, 277, 278, 280, 281, 282, 286, 296], "script_file_nam": 29, "run_script": [29, 55, 59, 60], "call": [29, 32, 49, 55, 61, 62, 94, 99, 119, 124, 128, 173, 177, 217, 223, 265, 266, 267, 268, 269, 270, 271, 274, 277, 278, 280, 281, 289, 291, 293], "librari": [0, 32, 37, 200, 291, 293, 294], "monitor": 32, "progress": [32, 49, 74, 290], "valu": [32, 64, 86, 87, 94, 96, 139, 140, 146, 216, 270, 279, 286, 289], "decis": 32, "variabl": [32, 49, 174, 178, 270, 286, 291], "iter": [32, 37, 266, 290, 293, 295, 298], "np": [32, 94, 96, 200, 218, 265, 266, 267, 268, 271, 273, 274, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 296, 297, 298, 301, 302, 303, 304], "ndarrai": [32, 94, 144, 188, 189, 190, 192, 193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 265, 266, 289, 290, 291, 296], "y": [32, 46, 64, 94, 96, 140, 146, 266, 271, 274, 281, 289, 290, 291], "creation": [27, 32, 94, 265, 286, 302], "everi": [32, 291], "time": [32, 56, 265, 270, 271, 289, 291, 302], "initialize_observ": [32, 46, 291], "problem_setup_info": [32, 291], "caller_info": [32, 46, 94, 96, 289, 291, 295, 296], "x0": [32, 46, 94, 265, 266, 267, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304], "y0": [32, 46, 94, 265, 266, 267, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304], "seed": [32, 46, 94, 96, 160, 164, 193, 257, 265, 291, 296], "necessari": [32, 66, 265, 276, 277, 278, 296], "finish": [32, 46, 270, 289, 291], "perform": [32, 86, 87, 100, 119, 128, 174, 178, 266, 268, 289, 290, 295, 297, 298], "ani": [32, 55, 94, 96, 150, 151, 197, 265, 270, 287, 289, 291, 293, 295, 296], "cleanup": 32, "final": [32, 291], "step": [32, 266, 289, 295, 296], "complet": [32, 270, 296], "gener": [36, 37, 55, 59, 60, 84, 85, 86, 87, 94, 96, 224, 270, 289, 297], "chunk_siz": 37, "element": [37, 289], "yield": [37, 103, 104, 105, 264], "tupl": [37, 68, 69, 94, 218, 265, 296], "equal": [37, 68, 295], "exampl": [37, 50, 52, 68, 70, 96, 99, 220, 256, 257, 265, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 289, 293, 294, 295, 302], "3": [37, 134, 135, 265, 267, 268, 270, 273, 285, 287, 289, 291, 293, 296, 297, 298], "4": [37, 145, 156, 264, 269, 270, 275, 289, 293], "5": [37, 66, 99, 100, 101, 177, 179, 212, 267, 268, 272, 273, 289, 291, 293, 295, 296, 302], "6": [37, 264, 270, 289, 293], "7": [37, 66, 270, 277, 278, 289, 293], "8": [37, 103, 104, 105, 264, 270, 289, 293], "9": [37, 264, 265, 267, 268, 270, 274, 289, 291, 293, 294, 296], "print": [20, 37, 49, 66, 72, 73, 74, 96, 119, 124, 128, 265, 266, 267, 270, 273, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 289, 291, 293, 294, 295, 296, 302, 303, 304], "rdkit": [39, 40, 41, 42, 50, 172, 173, 174, 176, 177, 178, 268, 272, 274, 280, 281, 282, 296], "selfies_str": [40, 43], "mol": [40, 41, 42], "convert": [40, 41, 42, 55, 134, 135, 140, 145], "selfi": [40, 42, 43, 44, 104, 173, 174, 177, 178, 268, 274, 279, 280, 281], "strict": [40, 41, 43, 44, 49, 68], "error": [40, 41, 43, 44, 49, 65, 265, 289], "fail": [40, 174, 178, 295], "decod": [40, 150, 154, 155, 194, 197], "chem": [40, 41, 42, 107, 174, 177, 178, 183], "smiles_str": [41, 43, 44], "cannot": [41, 43, 44, 174, 178], "pars": [41, 43, 44, 71, 72, 73, 74, 90, 174, 178, 190], "molecule_str": 42, "from_selfi": [42, 174, 178], "assum": [42, 70, 174, 178, 252, 265, 266, 270, 271, 274, 277, 278, 279, 280, 281, 285, 289, 290, 293], "translat": [43, 44], "els": [43, 44, 265, 296], "those": [43, 44], "kwargs_for_observ": 46, "isol": [45, 46, 88, 89, 93, 94, 96, 173, 249, 265, 268, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 291, 296], "send": [46, 62], "verifi": [46, 51, 291, 294], "wa": [46, 48, 70, 167, 266, 270, 275, 279, 289, 290], "correctli": [46, 269], "setup_info": 46, "start": [46, 55, 61, 62, 91, 171, 270, 271, 289, 291, 293, 294, 295, 296], "close": [46, 96, 280, 281], "__getattr__": 46, "__name": 46, "retriev": [46, 62, 109], "attribut": [46, 62, 150, 151, 197, 270, 289], "underli": 46, "taken": [48, 206, 271, 294], "adapt": [48, 264, 270, 298], "gist": 48, "github": [47, 48, 49, 50, 106, 265, 267, 268, 271, 276, 279, 296], "com": [48, 106, 265, 267, 268, 269, 276, 279, 296], "pdashford": 48, "2e4bcd4fc2343e2fd03efe4da17f577d": 48, "permalink_comment_id": 48, "4274705": 48, "gistcom": 48, "repository_nam": 49, "file_path_in_repositori": 49, "download_path_for_fil": 49, "tag": [49, 50], "master": [49, 267, 296], "commit_sha": [49, 50], "exist_ok": [49, 270, 291], "verbos": [20, 49, 66, 72, 73, 74, 119, 124, 128, 266, 295], "download": [47, 48, 49, 51, 106, 265, 269, 271, 282, 289], "i": [49, 64, 100, 118, 123, 127, 139, 174, 178, 181, 216, 224, 264, 266, 268, 270, 271, 274, 278, 290, 291, 296], "e": [16, 49, 64, 70, 96, 100, 106, 134, 135, 139, 171, 174, 178, 179, 216, 224, 264, 266, 267, 268, 270, 271, 272, 274, 276, 277, 278, 279, 287, 290, 291, 295, 296], "repo": [49, 106, 267, 275, 282], "download_path": 49, "branch": [49, 50, 267], "sha": [49, 50], "commit": [49, 50, 271], "exists_ok": 49, "except": [49, 56, 62, 265], "github_token_for_poli": 49, "doe": [49, 167], "try": [49, 265, 277, 278], "without": [49, 94, 96, 173, 177, 248, 265, 266, 290, 293, 295, 296], "anonym": 49, "request": [49, 91, 270], "rate": 49, "limit": [49, 221, 271], "60": 49, "per": 49, "hour": 49, "pygithub": [48, 50], "get_repo": 50, "release_2023_09": 50, "068441957858f786c227825d90eb2c43f4f2b000": 50, "check": [34, 51, 65, 68, 221, 265, 266, 270, 271, 277, 278, 279, 286, 290, 291, 293, 294, 295, 296], "internet": 51, "reproduc": 51, "purpos": 51, "make": [51, 267, 269, 270, 271, 274, 276, 289, 295, 296, 302], "sure": [51, 267, 269, 270, 271, 274, 276, 291, 295, 296], "malici": 51, "code": [48, 51, 152, 171, 265, 270, 275, 276, 279, 282, 289, 293, 296], "being": [51, 269, 271], "filepath": 52, "read_mod": 52, "rb": 52, "md5": [52, 271], "hex": 52, "digest": 52, "open": [52, 171, 270, 291], "binari": [52, 66, 106, 119, 124, 128, 270, 276, 277, 278], "form": [52, 270], "mode": [52, 67], "read": [52, 66, 147, 270, 289, 291, 295], "txt": [52, 66, 70, 269, 270, 276, 277, 278, 291], "d41d8cd98f00b204e9800998ecf8427": 52, "wrap": [53, 54, 296], "interprocess": [53, 54], "commun": [53, 54, 55, 93], "kwargs_for_factori": [55, 94, 96], "connect": [55, 56, 62, 91, 154], "inter": 55, "These": [55, 268, 270, 271, 272, 286, 289, 291, 293], "inner": 55, "up": [55, 56, 266, 274, 275, 289, 290, 291, 296], "authent": [55, 56], "listen": [55, 91, 294], "random": [55, 84, 85, 86, 87, 94, 96, 266, 268, 290, 293, 295, 297, 298, 301, 302, 304], "subprocess": [55, 270], "expect": [55, 65, 66, 67, 70, 106, 119, 124, 128, 174, 270, 276, 277, 278, 279, 291, 296], "well": [55, 267, 270, 274, 294, 295, 297], "other": [55, 174, 178, 265, 269, 289, 291, 294, 295, 296], "objective_factori": [55, 248, 265, 267, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 289, 291, 293, 295, 296, 297, 301], "determin": 55, "client": 56, "get": [56, 61, 74, 265, 266, 270, 271, 272, 290, 291, 293, 295, 296], "eoferror": 56, "host": 56, "readi": [56, 140], "yet": [56, 265, 290], "connectionrefusederror": 56, "refus": 56, "attempt": 56, "establish": [56, 62], "retri": 56, "two": [9, 56, 68, 267, 270, 277, 278, 280, 281, 286, 291, 294, 295, 296, 302], "befor": [56, 59, 289, 295, 296], "conda_environ": 59, "cwd": [59, 60, 270], "activ": [59, 265, 267, 268, 271, 274, 276, 279, 291], "ad": [59, 106, 248, 275, 291, 296], "current": [59, 268, 271, 274, 277, 278, 279, 280, 281, 285, 293, 294], "either": [60, 104, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 291, 301], "mother": [61, 62, 91], "receiv": 62, "wait": [62, 91, 296], "occur": 62, "sent": [62, 194], "back": [62, 187], "quit": [62, 265, 271, 293], "messag": [62, 94, 289], "encod": [64, 143, 144, 154, 155, 178, 276, 277, 278], "queri": [65, 265, 266, 273, 275, 276, 277, 278, 280, 281, 282, 285, 286, 287, 290, 296], "automat": [65, 96, 264, 265, 269, 276, 279], "thei": [65, 167, 168, 270, 279, 289, 291], "working_dir": [66, 270], "interact": [66, 270, 289], "engin": [66, 200, 297], "softwar": [66, 268, 269], "where": [66, 99, 100, 101, 155, 265, 266, 268, 270, 275, 282, 290, 294], "output": [20, 66, 72, 73, 74, 119, 124, 128, 194, 268, 270, 279, 289, 291, 293, 294], "store": [66, 271, 289], "pdb_file": 66, "remove_and_renam": 66, "ph": [66, 270, 277, 278], "0": [3, 66, 68, 119, 124, 128, 156, 177, 193, 212, 266, 267, 268, 270, 271, 277, 278, 280, 281, 286, 287, 289, 290, 291, 293, 294, 295, 297, 298, 301], "remove_heteroatom": 66, "_repair_if_necessary_and_provide_path": 66, "_simulate_mut": 66, "_read_energi": 66, "_compute_sasa": 66, "sasa": [65, 66, 116, 118, 119, 120, 126, 127, 128, 129, 180, 181, 268, 272, 277, 278], "solvent": [66, 116, 119, 120, 126, 128, 129, 180, 264, 268, 270, 272], "surfac": [66, 116, 119, 120, 126, 128, 129, 180, 268, 270, 272, 277], "area": [66, 116, 119, 120, 126, 128, 129, 180, 268, 270, 272, 277], "compute_st": 66, "stabil": [65, 66, 121, 123, 124, 126, 127, 171, 180, 181, 264, 267, 268, 270, 272, 277, 294], "structur": [66, 72, 73, 74, 106, 124, 270, 275, 291], "compute_sasa": 66, "compute_stability_and_sasa": 66, "singl": [66, 70, 171, 200, 264, 268, 271, 272, 280, 281, 289, 291, 297, 301], "copy_foldx_fil": 66, "copi": [66, 266, 270, 290, 302], "write_mutations_to_fil": 66, "wildtype_resiud": 66, "output_dir": 66, "write": [66, 106, 265, 267, 270, 275, 283, 284, 288, 291, 292, 296, 299, 300], "accord": [67, 138, 270, 293, 296], "certain": [67, 265, 268, 270, 274, 295], "first": [67, 68, 70, 265, 270, 271, 273, 289, 290, 295, 296], "letter": [67, 70, 99, 100, 101, 268, 270, 272, 273, 296], "second": [67, 68, 70, 148, 270, 289, 295, 296], "posit": [67, 68, 70, 137, 142, 266, 270, 271, 289, 290, 293], "third": [67, 70], "chain": [67, 70, 270], "fourth": [67, 70], "mutant": [67, 69, 70, 171, 266, 270, 290], "string_1": 68, "string_2": 68, "edit": [68, 171, 271], "oper": [68, 269, 295], "replac": [37, 68, 70, 171, 189, 271, 289, 303, 304], "assertionerror": [68, 295], "abc": 68, "abd": 68, "def": [68, 265, 266, 290, 291, 296], "wildtype_pdb_fil": [69, 277, 278], "mutated_residue_str": [69, 70], "return_hamming_dist": 69, "find": [69, 99, 100, 101, 106, 265, 271, 274, 275, 291, 293, 295], "closest": 69, "ham": 69, "distanc": [69, 70, 100, 271, 273], "along": 69, "best": [69, 266, 289, 290, 298, 302], "candid": [69, 266], "same": [4, 69, 70, 166, 167, 168, 265, 267, 271, 293], "found": [69, 267, 270, 291, 296], "individual_list": [70, 270], "levenshtein": [70, 277, 278], "keep": [70, 265, 277, 278], "track": [70, 264, 265], "written": 70, "line": [70, 268, 270], "g": [16, 64, 70, 134, 135, 179, 266, 267, 268, 270, 272, 277, 278, 287, 290, 291, 295, 296], "ea1r": 70, "still": [70, 294], "need": [70, 106, 265, 269, 270, 275, 276, 277, 278, 279, 289, 291, 295], "dummi": 70, "itself": [70, 265, 267], "For": [64, 70, 106, 139, 166, 171, 221, 252, 265, 268, 270, 275, 276, 279, 286, 289, 291, 293, 294, 296, 298], "ecd": 70, "acd": 70, "would": [70, 271, 274, 291, 296], "ea1a": 70, "load": [71, 95, 131, 139, 148, 198, 270, 289, 291], "them": [71, 106, 252, 265, 266, 267, 270, 271, 272, 275, 290, 293], "path_to_pdb": [72, 73, 74], "structure_nam": [72, 73, 74], "done": [74, 106, 270, 275, 276, 279, 282, 289, 293], "quietli": 74, "you": [4, 66, 74, 106, 173, 174, 177, 178, 200, 265, 266, 267, 268, 269, 270, 271, 274, 276, 279, 280, 281, 282, 285, 286, 289, 290, 291, 293, 295, 296], "some": [74, 152, 168, 252, 267, 268, 270, 276, 279, 286, 291, 293, 296], "get_structur": [74, 270], "pdbparser": [74, 270], "numpi": [86, 190, 265, 267, 268, 271, 273, 274, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 291, 296, 297, 301, 302, 303, 304], "123": [], "obj": 89, "factory_kwarg": [90, 91], "objective_nam": 91, "loop": [91, 248, 264, 297], "param": [], "subpackag": [], "myfactorynam": [], "main": [100, 174, 178, 266, 267, 268, 269, 270, 290, 291, 296], "who": [], "want": [173, 177, 265, 266, 270, 271, 274, 277, 278, 280, 281, 293, 295, 296], "process_wrapp": 93, "force_regist": [94, 96, 275, 277, 278, 280, 281, 282], "force_isol": [94, 96], "instantiant": 94, "shell": [267, 296], "case": [266, 267, 270, 273, 285, 286, 287, 290, 291, 293, 296], "involv": [], "caller": [94, 96, 291], "forward": [94, 96, 291], "logger": [94, 96], "ask": [94, 96, 276, 279], "confirm": [94, 96], "previou": [66, 94, 96, 270, 291, 295], "registr": [27, 94, 96, 99, 173, 177, 217, 223, 265, 295, 296], "onc": [94, 265, 274, 293, 295, 296], "problem_inform": 94, "hold": [], "basic": [155, 248, 293, 296], "properti": [], "arrai": [96, 134, 135, 144, 145, 187, 190, 192, 265, 267, 268, 271, 273, 274, 277, 278, 280, 281, 285, 286, 287, 289, 291, 293, 294, 296], "observer_info": 94, "just": [96, 276, 277, 278, 279, 289, 291, 295, 296], "like": [96, 106, 209, 265, 266, 269, 275, 286, 289, 290, 291, 293, 294, 295, 296, 297], "anyth": 293, "One": [96, 269], "aloha": [96, 267, 268, 272, 289, 290, 293, 296, 302], "reshap": [96, 266, 280, 281, 296, 297, 301], "simpl": [99, 100, 101, 103, 104, 105, 138, 173, 174, 177, 178, 265, 266, 289, 290, 293, 295, 296], "discret": [0, 99, 100, 101, 131, 266, 289, 290, 293, 295, 297], "goal": [99, 100, 101], "o": [99, 100, 101, 273, 274, 291, 296], "h": [64, 99, 100, 101, 192, 197, 264, 291, 296], "among": [99, 100, 101, 269, 270, 295], "poli__bas": [99, 217, 223], "see": [9, 43, 44, 67, 90, 91, 99, 106, 173, 177, 200, 217, 220, 223, 265, 267, 270, 271, 274, 276, 289, 291, 294, 296], "yml": [99, 106, 173, 177, 217, 223, 271, 274, 276, 279, 296], "simultan": [100, 104, 108, 174, 178, 184, 271], "map": [100, 104], "symbol": [100, 104], "garc\u00eda": [103, 104, 105, 264, 268, 274], "orteg\u00f3n": [103, 104, 105, 264, 268, 274], "miguel": [103, 104, 105, 264, 268], "gregor": [103, 104, 105, 264], "n": [64, 103, 104, 105, 221, 264, 267, 268, 270, 271, 282, 286, 287, 291], "c": [64, 103, 104, 105, 264, 265, 267, 270, 274, 275, 280, 281, 282, 289, 291, 296], "simm": [103, 104, 105, 264], "austin": [103, 104, 105, 264], "tripp": [103, 104, 105, 264], "jos\u00e9": [103, 104, 105, 171, 264], "hern\u00e1ndez": [103, 104, 105, 264], "lobato": [103, 104, 105, 264], "andrea": [103, 104, 105, 264], "bender": [103, 104, 105, 264], "sergio": [103, 104, 105, 264], "bacallado": [103, 104, 105, 264], "easi": [103, 104, 105, 264, 265, 270, 293, 295], "molecular": [103, 104, 105, 118, 123, 127, 181, 264], "better": [103, 104, 105, 264, 265], "benchmark": [103, 104, 105, 200, 217, 221, 264, 268, 272], "ligand": [103, 104, 105, 264, 268, 272, 274], "design": [65, 103, 104, 105, 110, 154, 166, 167, 264, 266, 269, 272, 274, 289, 290, 293, 296], "journal": [103, 104, 105, 264], "model": [34, 65, 103, 104, 105, 139, 140, 152, 154, 156, 264, 265, 270, 271, 289, 297], "62": [103, 104, 105, 264], "15": [103, 104, 105, 264, 302], "august": [103, 104, 105, 264], "3486": [103, 104, 105, 264], "3502": [103, 104, 105, 264], "1021": [103, 104, 105, 264], "ac": [103, 104, 105, 264], "jcim": [103, 104, 105, 264], "1c01334": [103, 104, 105, 264], "target_nam": [104, 274, 294], "string_represent": [104, 274, 279, 280, 281], "api": [103, 104, 105, 267], "assess": [103, 104, 105, 171, 272], "small": [103, 104, 105, 174, 265, 267, 274, 275, 282, 291, 293, 295], "protein": [103, 104, 105, 118, 123, 124, 127, 171, 181, 264, 267, 269, 271, 274, 275, 293, 294], "refer": [9, 19, 65, 103, 104, 105, 106, 107, 110, 166, 167, 183, 268, 276, 279], "ddr3": 107, "task": [106, 107, 110, 113, 115, 148, 264, 270, 276, 279, 297], "k": [64, 107, 173, 183, 212, 264, 291], "et": [107, 183, 264, 268, 269, 270, 271, 272, 274, 275, 279, 282, 289, 297, 301, 302], "al": [107, 183, 200, 221, 264, 268, 269, 270, 271, 272, 274, 275, 279, 282, 286, 289, 297, 301, 302], "nat": [107, 183], "biol": [107, 183], "1036": [107, 183], "drd3": [9, 106, 108, 109, 268, 272, 274], "self": [108, 265, 266, 271, 290, 291, 296], "tdcblackbox": 108, "alia": 112, "proxyrfptask": [106, 113, 276], "base_candid": 113, "config": [95, 115, 289], "lambo": [65, 106, 110, 113, 115, 166, 167, 168, 268, 270, 272, 275, 289], "specifc": 115, "rfp": [106, 110, 111, 115, 180, 268, 272], "pair": [118, 127, 181], "biopython": [118, 123, 127, 181, 270, 277, 278, 294], "cock": [118, 123, 127, 181], "pa": [118, 123, 127, 181], "antao": [118, 123, 127, 181], "chang": [106, 118, 123, 127, 131, 148, 181, 267, 269, 270, 275, 277, 278, 286], "jt": [118, 123, 127, 181], "chapman": [118, 123, 127, 181], "ba": [118, 123, 127, 181], "cox": [118, 123, 127, 181], "cj": [118, 123, 127, 181], "dalk": [118, 123, 127, 181], "friedberg": [118, 123, 127, 181], "hamelryck": [118, 123, 127, 181], "kauff": [118, 123, 127, 181], "wilczynski": [118, 123, 127, 181], "b": [118, 123, 127, 181, 192, 265, 267, 273, 285, 286, 287, 291, 293, 296], "de": [118, 123, 127, 181, 264], "hoon": [118, 123, 127, 181], "mjl": [118, 123, 127, 181], "2009": [118, 123, 127, 181, 268], "freeli": [118, 123, 127, 181], "tool": [118, 123, 127, 181, 265, 277, 278, 294, 296], "bioinformat": [118, 123, 127, 181], "25": [118, 123, 127, 181, 289], "1422": [118, 123, 127, 181], "1423": [118, 123, 127, 181], "eager": [119, 128], "foldxblackbox": [119, 124, 128], "pre": [123, 266, 267, 271, 274, 277, 278], "through": [124, 266, 267, 290, 293], "total": [124, 138, 270, 289], "wrapper": [4, 9, 93, 106, 110, 131, 148, 173, 177, 182, 268, 272, 302], "cba": [131, 148, 150], "vae": [131, 148, 150, 151, 155, 156, 194, 196, 197, 297], "sb": [131, 148], "bo": 131, "minor": [131, 148], "modif": [131, 148], "conduct": [131, 148], "rm": [131, 148], "creator": [131, 148], "last": [131, 148, 270], "x_aa": [134, 135, 144], "aa_idx": 134, "arn": [134, 135], "becom": [134, 135], "row": [134, 135, 270], "base_seq": 136, "wild": [136, 141, 270], "mtuation": 136, "xt_p": [137, 142], "categor": [137, 142, 158, 196, 197], "probabl": [137, 142], "distribut": [137, 142, 158, 197, 264, 298], "most": [48, 137, 272], "pred": 138, "xt": 138, "predictor": 138, "built": [37, 90, 91, 138, 267], "balaji": 138, "lakshminarayanan": 138, "paper": [138, 150, 264, 294], "scalabl": 138, "predict": [116, 138, 139, 157, 171, 264, 268, 270, 272, 297], "uncertainti": [138, 297], "estim": [138, 166, 176, 177, 178, 179, 267, 268, 272], "deep": [138, 171, 264, 297], "ensembl": 138, "2017": [138, 264, 271], "varianc": 138, "random_st": [139, 146], "train_siz": [139, 146], "5000": 139, "return_test": [139, 146], "return_al": 139, "gfp": [139, 140, 141, 147], "test": [139, 200, 266, 286, 290], "ground": 139, "truth": 139, "gp": [139, 161], "partit": [139, 146, 280], "below": [139, 271, 274, 277, 278], "20th": 139, "percentil": [139, 146], "add": [106, 139, 188, 265, 277, 278, 279, 290], "measur": [65, 139, 270, 280, 281], "nois": [139, 222, 223, 224, 257, 268, 272], "data_df": 140, "datafram": [140, 147, 270], "functional_onli": [140, 160], "ignore_stop": [140, 160], "return_str": 140, "raw": 140, "sampl": [142, 193, 264, 287, 291, 297, 303, 304], "aa_str": 143, "pad": [143, 145, 188], "hot": [143, 192], "onehot": 144, "alphabet_s": [144, 266, 290], "dna_str": 145, "base_ord": 145, "atcg": 145, "m": [64, 145, 171, 264, 270, 291], "token": [145, 174, 178, 189, 191, 293, 296, 303, 304], "40": 146, "1000": [146, 295], "df_save_fil": 147, "bright": 147, "panda": [140, 147, 270], "author": [148, 166, 268], "credit": 148, "herculean": 148, "go": [148, 268, 269, 296], "aa": [149, 150, 151], "latent_dimension": [150, 151], "enc1_unit": [150, 151, 156], "mimic": 150, "kera": [150, 154], "intern": [89, 264, 265, 282, 285, 293], "state": [], "share": [265, 266, 267], "both": [173, 177, 270, 277, 278, 295, 296], "nn": [], "scriptmodul": [], "input_shap": [154, 155], "latent_dim": [154, 155, 156], "variat": [154, 297], "autoencod": [65, 110, 154, 166, 167, 264, 297], "via": [154, 264, 291], "latent": [154, 266, 290, 297], "space": [154, 189, 252, 266, 290, 297, 301], "flatten": [155, 266, 289, 290], "construct": [4, 155], "layer": 155, "n_token": 156, "seq_length": 156, "50": [156, 298], "eps_std": 156, "compil": [119, 124, 128, 156, 271, 289], "y_true": [157, 158], "y_pred": [157, 158], "likelihood": 158, "logp": [166, 167, 168, 172, 173, 174, 268, 272], "_exactly_": 167, "do": [106, 167, 266, 270, 279, 290, 294, 296], "todo": [168, 270, 283, 284, 288, 292, 299, 300], "penal": [166, 168, 268, 272], "particular": [106, 168, 180, 275, 276, 286, 291, 294, 295, 296], "adjust": 168, "magic": 168, "empir": [168, 279], "standard": [168, 223, 224, 279, 287], "deviat": [168, 279], "dataset": [168, 200, 264, 279], "document": [9, 168, 267, 268, 270, 289, 294], "whose": [173, 177, 223, 297], "quotient": [173, 268, 272], "solubl": [166, 172, 173, 174, 268, 272], "around": [9, 106, 110, 173, 177, 182, 268, 272, 302], "descriptor": [173, 296], "poli__chem": [173, 177, 280, 281], "local": [173, 177, 209, 266, 267, 285, 291], "environemnt": [173, 177], "extra": [173, 177, 265, 289, 294], "interest": [173, 267, 270, 271, 274, 277, 278, 285, 286, 291, 293], "directli": [25, 173, 206, 270, 271, 274, 294], "instead": [4, 173, 200, 266, 277, 278, 290, 294], "pip": [48, 106, 173, 177, 265, 267, 268, 270, 276, 277, 278, 279, 280, 281, 291, 294, 296], "qed": [166, 174, 176, 177, 178, 179, 268, 272], "By": [94, 124, 174, 178, 218, 266, 277, 278, 295, 297, 301], "molfromsmil": [174, 178], "known": [174, 178, 280, 289], "silent": [174, 178], "nan": [174, 178], "someth": [174, 178], "than": [174, 178, 252, 295, 296], "quantit": [166, 176, 177, 178, 179, 267, 268, 272], "druglik": [166, 176, 177, 178, 179, 267, 268, 272], "continu": [177, 179, 199, 200, 217, 218, 252, 264, 268, 272, 293], "lipinski": [177, 179], "rule": [177, 179, 265], "level": [186, 187, 188, 189, 190, 191, 192, 193, 268, 270, 272], "n_pad": 188, "left": 188, "give": [94, 188, 252, 274, 296], "room": 188, "agent": 188, "land": 188, "level_txt": [190, 191], "n_sprite": [192, 197], "11": [189, 192, 197, 267, 274, 294], "levels_onehot": 193, "tensor_level": 194, "tensor": 194, "level_s": 194, "14": [194, 197, 270], "could": [194, 265, 266, 270, 271, 276, 277, 278, 289, 290, 293, 296, 301], "mariogan": 194, "jar": [194, 265], "prob_matrix": 195, "item": [195, 262], "train": [152, 196], "mario": [186, 189, 196, 272, 296], "notat": 270, "veri": 213, "much": [], "follow": [64, 265, 266, 267, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 290, 293, 295, 296, 301], "z_dim": 197, "devic": 197, "sentenc": 197, "shape": [197, 265, 266, 267, 273, 285, 286, 287, 290, 293], "path_to_state_dict": 198, "vaemario": 198, "pretrain": 198, "landscap": 200, "signatur": 200, "might": [106, 200, 265, 267, 270, 275, 276, 277, 278, 279, 286, 289, 291, 296], "sign": [200, 286], "flip": [200, 286], "becaus": [200, 296], "re": [200, 265, 267, 270, 271, 290, 291, 293, 296], "deal": 200, "maxim": [4, 200, 215, 216, 266, 286], "minim": [4, 200, 256, 266, 272, 274, 290, 302], "what": [265, 274, 289, 295], "arbitrari": [264, 286], "dimens": [217, 218, 221, 252, 264, 286, 297], "d": [64, 171, 200, 216, 264, 269, 286, 291], "ali": [200, 264], "roomi": [200, 221, 264, 268, 286], "2015": [200, 264, 268, 286], "unconstrain": [200, 221, 264], "www": [200, 264], "halifax": 200, "nova": 200, "scotia": 200, "canada": 200, "dalhousi": 200, "univers": 200, "electr": 200, "surjanov": [200, 268], "bingham": [200, 268], "virtual": 200, "sfu": 200, "ca": 200, "ssurjano": 200, "html": [37, 200, 264, 291], "linebo": [206, 286, 301], "kirschnj": 206, "xy": [209, 213, 214], "cross": 209, "trai": 209, "ha": [106, 209, 265, 266, 270, 275, 289, 290, 294, 296, 298], "sever": [106, 200, 209, 217, 270, 271, 295, 296], "maxima": [209, 213], "quilt": 209, "pattern": 209, "2d": [209, 213, 214, 252], "alpha": [212, 267, 268, 297], "flat": 213, "pi": 213, "egg": 214, "holder": 214, "especi": [214, 265, 268], "difficult": 214, "know": [214, 270], "optima": [214, 221], "usual": [119, 124, 215, 217, 265, 266, 268, 272, 286, 291, 295, 296, 297], "squar": 215, "norm": 215, "shift": 215, "awai": [215, 271], "bit": [215, 270], "normal": [216, 264, 294, 298], "903534": 216, "39": [216, 276], "16599": 216, "divid": 216, "toi": [186, 199, 200, 217, 218, 221, 222, 224, 252, 273, 291, 295, 302], "focu": [217, 270, 289, 293], "ones": [217, 265], "dimension": [217, 252, 264], "function_nam": [218, 286, 297, 298, 301], "n_dimens": [218, 286, 297, 298, 301], "embed_in": [218, 221, 286], "seri": 220, "testb": 220, "fyi": [], "plot": [], "three": [271, 291, 293], "more": [9, 67, 119, 124, 128, 220, 221, 265, 267, 270, 271, 289, 293], "en": [220, 291], "wikipedia": 220, "wiki": 220, "test_functions_for_optim": 220, "liter": [104, 221, 265], "ackley_function_01": [221, 268, 272, 286, 297, 298, 301], "alpine_01": [221, 286], "alpine_02": [221, 286], "bent_cigar": [221, 286], "brown": [221, 286], "chung_reynold": [221, 286], "cosine_mixtur": [221, 286], "deb_01": [221, 286], "deb_02": [221, 286], "deflected_corrugated_spr": [221, 286], "styblinski_tang": 221, "shifted_spher": [221, 286], "easom": [221, 268, 272, 286], "cross_in_trai": [221, 286], "egg_hold": [221, 286], "camelback_2d": [221, 286], "n_dim": 221, "definit": [221, 265, 286], "py": [106, 221, 266, 267, 290, 291, 294, 295, 296], "gaussian": [152, 223, 224, 264, 268, 272, 287, 297], "instruct": [229, 265, 266, 291, 293], "how": [90, 91, 106, 229, 265, 266, 267, 268, 270, 272, 289, 290, 291, 293, 295, 296], "embed": [218, 252, 286], "higher": [252, 270], "afford": 252, "emb": [218, 252, 286], "bayesian": [65, 110, 166, 167, 252, 264, 266, 268, 290], "intrins": 252, "lower": [218, 252], "actual": [252, 265, 286, 294], "readm": [256, 265], "verbatum": 256, "white": [222, 223, 257, 268, 272], "fullnam": 262, "escap": 262, "underlin": 262, "block": [262, 265], "rubric": 262, "endfor": 262, "endif": 262, "endblock": 262, "ar15": 264, "url": [264, 268], "bkg": 264, "23": [264, 267], "lass": [171, 264], "blaabjerg": [171, 264, 268, 271], "maher": [171, 264], "kassem": [171, 264], "lydia": [171, 264], "good": [171, 264, 265, 267, 268, 289, 296], "nicola": [171, 264], "jonsson": [171, 264], "matteo": [171, 264], "cagiada": [171, 264], "kristoff": [171, 264], "johansson": [171, 264], "wouter": [171, 264], "boomsma": [171, 264, 271], "ameli": [171, 264], "stein": [171, 264], "kresten": [171, 264], "lindorff": [171, 264], "larsen": [171, 264], "rapid": [171, 264, 268, 272], "learn": [171, 264, 271], "elif": [171, 264], "12": [37, 65, 110, 166, 167, 171, 264, 270, 291], "e82593": [171, 264], "2023": [171, 264, 268, 269, 270, 271, 291], "7554": [171, 264], "82593": [171, 264], "bf17": 264, "je": 264, "frellsen": [264, 271], "spheric": 264, "convolut": 264, "applic": 264, "guyon": 264, "u": [264, 291], "von": 264, "luxburg": 264, "bengio": 264, "wallach": 264, "fergu": 264, "vishwanathan": 264, "garnett": 264, "editor": 264, "advanc": 264, "neural": [264, 271], "system": [264, 269], "volum": 264, "30": [264, 286], "curran": 264, "associ": [94, 264, 289, 294], "inc": 264, "proceed": 264, "neurip": 264, "cc": [264, 274], "paper_fil": 264, "1113d7a76ffceca1bb350bfe145467c6": 264, "pdf": 264, "gost": 264, "22": [264, 270, 289, 291], "dockstr": [264, 267, 268, 272, 289, 293, 294], "hfg": 264, "21": [264, 289, 291], "machin": 264, "drug": [264, 293], "discoveri": 264, "develop": [264, 265, 266, 290], "thirti": 264, "fifth": 264, "confer": 264, "round": [94, 224, 264], "2021": [264, 275, 282], "openreview": 264, "net": 264, "forum": 264, "8nvgnornowr": 264, "sr73": 264, "shrake": [264, 270], "ruplei": [264, 270], "exposur": 264, "atom": 264, "lysozym": 264, "insulin": 264, "79": 264, "351": [264, 289], "371": 264, "sep": 264, "1973": [264, 270], "1016": 264, "0022": 264, "2836": 264, "73": 264, "90011": 264, "smg": 264, "samuel": [65, 110, 166, 167, 264], "stanton": [65, 110, 166, 167, 264, 268, 269, 270, 279, 289], "weslei": [65, 110, 166, 167, 264], "maddox": [65, 110, 166, 167, 264], "nate": [65, 110, 166, 167, 264], "gruver": [65, 110, 166, 167, 264], "phillip": [65, 110, 166, 167, 264], "maffetton": [65, 110, 166, 167, 264], "emili": [65, 110, 166, 167, 264], "delanei": [65, 110, 166, 167, 264], "peyton": [65, 110, 166, 167, 264], "greensid": [65, 110, 166, 167, 264], "andrew": [65, 110, 166, 167, 264], "gordon": [65, 110, 166, 167, 264], "wilson": [65, 110, 166, 167, 264], "acceler": [65, 110, 166, 167, 264], "biolog": [65, 110, 166, 167, 264], "denois": [110, 166, 167, 264], "arxiv": [65, 110, 166, 167, 264], "preprint": 264, "2203": [65, 110, 166, 167, 264], "12742": [65, 110, 166, 167, 264], "tutori": [265, 270, 289, 291, 295, 296, 297], "cover": 265, "look": [265, 266, 290, 296], "sourc": [171, 265], "poli": [265, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 294, 295, 297, 298, 301, 302, 303, 304], "live": [265, 294], "goe": [265, 270, 296], "exactli": [265, 266, 276, 279, 290], "doesn": [265, 275, 291, 294], "env": [106, 265, 267, 271, 274, 275, 276, 279, 282, 291, 294, 296], "mani": [265, 302], "think": 265, "project": [265, 270], "here": [265, 268, 270, 289, 296, 302], "ll": [265, 269, 270, 293, 295], "carri": 265, "let": [265, 267, 270, 289, 291, 293, 294, 296], "super_mario_bro": [265, 268, 289, 293], "pt": [265, 271], "level_util": 265, "md": [265, 266], "As": [265, 270, 289, 294, 296], "don": [265, 268, 274, 294], "git": [106, 265, 267, 268, 276, 279, 296], "end": [265, 270, 289, 291, 295], "ignor": 265, "altern": 265, "averag": 265, "core": [124, 265, 266, 288, 289, 290, 295, 296, 302], "abstract_black_box": [265, 296], "abstract_problem_factori": [265, 296], "problem_setup_inform": [265, 291, 296], "pythonpath": 265, "runtim": [265, 296], "imagin": 265, "your_local_depend": 265, "yourblackbox": 265, "super": [186, 265, 266, 272, 290, 296], "yourproblemfactori": 265, "descript": [106, 265, 271, 274, 289, 291, 296], "chapter": [265, 266, 267, 268, 270, 289, 290, 291, 293, 295, 296], "your_problem": 265, "parent": [265, 270, 271, 291, 302], "your_keyword_1": [], "your_keyword_2": [], "your_keyword_3": [], "manipul": [67, 265, 267, 268], "problem_info": [265, 267, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 289, 291, 293, 294, 295, 296, 297, 301], "__name__": [265, 271, 274, 295, 296], "__main__": [265, 271, 274, 295, 296], "registri": [265, 289, 295], "register_problem": [265, 296], "our": [9, 265, 266, 270, 272, 274, 277, 278, 289, 290, 291, 295, 296, 297, 298, 302], "your_problem_factori": 265, "your_env": 265, "That": 265, "advic": [178, 265], "camel_cas": 265, "experiment": [], "under": [265, 267, 269, 274, 275, 286, 296], "tell": 265, "though": 265, "sai": [265, 270, 286, 289, 294, 296], "channel": [265, 296], "machinelearninglifesci": [265, 266, 267, 268, 296], "java": [265, 296], "poli__mario": 265, "forg": 265, "pytorch": 265, "openjdk": 265, "cpuonli": 265, "click": [265, 268, 272, 293], "moreov": [265, 266, 290], "hack": [], "wai": [65, 266, 267, 270, 271, 274, 277, 278, 280, 281, 290, 291, 294], "colab": [265, 268], "put": [265, 270, 302], "describ": [265, 270, 275, 276, 279, 282, 293, 295], "register": 265, "fresh": 268, "get_problem": [265, 267, 289, 293, 295, 296], "fret": [], "abl": [106, 265, 267, 269, 270, 275, 291, 294, 296], "_": [265, 266, 267, 271, 274, 279, 291, 293, 294, 297, 298, 301, 302], "mayb": 265, "your_factori": 265, "now": [106, 265, 267, 270, 293, 294, 296], "support": [9, 248, 265, 267, 268, 290, 291, 294], "At": [265, 270, 291, 293, 296], "point": [265, 270, 291, 293, 296, 297], "wrote": 265, "direct": [265, 301], "life": [265, 271], "come": [248, 265, 274, 293, 295], "debug": [265, 267, 271, 274, 285], "vscode": 265, "src": [106, 265, 271, 274, 275, 276, 279, 282, 289], "rest": [106, 265, 291, 293], "available_problem_factori": 265, "importerror": 265, "feel": [265, 266, 270, 293], "solver": [296, 297, 298, 301, 302, 303, 304], "unfortun": [267, 274], "linux": [267, 274, 294], "maco": [267, 274], "top": [267, 268, 293], "therefor": [267, 294], "anaconda": 267, "went": 267, "okai": [267, 271], "anoth": [267, 270, 289, 293], "right": [267, 291], "clone": [106, 267, 271, 276, 279, 285], "cd": [106, 267, 276, 279], "stabl": [267, 291], "bleed": 267, "edg": 267, "dev": [265, 267, 268], "home": [267, 269, 270, 276, 277, 278], "poli_object": [267, 271, 296], "To": [267, 268, 269, 270, 271, 274, 279, 296], "everyth": [267, 269, 291], "white_nois": [267, 287, 289, 293], "isn": [], "littl": 270, "effort": [], "notic": [266, 274, 279, 290, 291], "minimal_working_exampl": 267, "run_info": [267, 273, 275, 276, 277, 278, 280, 281, 282, 285, 286, 287, 289, 295, 296], "rang": [266, 267, 290], "trivial": [266, 267, 290, 293, 296], "plenti": 267, "complex": [267, 270, 289], "show": [106, 267, 270, 289, 296], "next": [266, 268, 270, 289, 290, 291, 293, 295, 296], "explain": [266, 290, 291], "own": 269, "baselin": [268, 289, 291, 293, 294, 295, 297, 302], "book": [], "its": [106, 266, 270, 271, 274, 275, 277, 289, 290, 294, 295, 296], "complic": [266, 290], "weird": [], "promis": [], "your": [106, 266, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 289, 291, 294], "reliabl": [], "worri": [266, 268, 290, 296], "batteri": 274, "alreadi": [270, 289, 293], "collect": [171, 199, 268, 271], "out": [264, 273, 280, 281, 286, 287, 293, 297], "full": [268, 270], "drawn": [268, 272], "unit": [268, 272], "word": [268, 272, 296], "spell": [268, 272], "3pbl": [268, 272, 275], "implmenet": [268, 272], "sa": [182, 268, 272], "rasp": [268, 271, 272, 289, 293], "fluoresc": [268, 270, 272, 289], "On": 268, "focus": 268, "nsga": 264, "genet": [264, 302], "metric": 269, "wip": [], "cma": 268, "es": 268, "evolutionari": [264, 266, 268, 290, 298], "strategi": [264, 268, 298], "graph": [], "ga": [], "place": [268, 269, 270], "coupl": [268, 296], "guid": 268, "familiar": 270, "ourselv": 270, "refresh": 270, "heavili": [65, 270], "inspir": [65, 270], "essenti": [270, 291], "rotabas": [66, 269, 270, 276, 277, 278], "notebook": [270, 291], "renam": [269, 270, 276, 277, 278], "pathlib": [270, 271, 276, 277, 278, 282, 289, 291], "shutil": 270, "path_to_foldx_fil": 270, "this_dir": [270, 271, 291], "resolv": [270, 271, 289, 291], "tmp": 270, "mkdir": [270, 291], "copyfil": 270, "respons": 270, "transport": 270, "oxigen": 270, "sperm": 270, "whale": 270, "101m": 270, "hand": 270, "urllib": 270, "web_address": 270, "rcsb": 270, "view": [171, 270], "urlretriev": 270, "Of": [270, 293], "cours": [270, 293], "long": [270, 289, 291, 296], "aid": 270, "pdb_name": 270, "choos": [270, 286], "repairpdb": [270, 277, 278], "command": [269, 270, 277, 278], "futur": [267, 270, 291], "consumig": 270, "400sec": 270, "build": [270, 293, 296, 297], "101m_repair": 270, "repair_cmd": 270, "water": [270, 277, 278, 280, 289], "crystal": [270, 277, 278], "tree": 270, "fxout": 270, "unrecognized_molecul": 270, "onward": [270, 297], "inspect": [270, 271, 274], "easili": [106, 270, 275, 282, 289, 295], "bio": [70, 73, 74, 270], "parser": 270, "get_residu": 270, "dive": [270, 293, 295], "first_residu": 270, "resnam": 270, "index": [270, 289], "get_par": 270, "met": [270, 294], "extract": 270, "sequtil": 270, "seq1": 270, "ingredi": [266, 270, 289, 290], "latter": [4, 270], "original_residu": 270, "chain_id": 270, "position_in_sequ": 270, "mutant_residu": 270, "glycin": 270, "Be": [270, 271], "care": [270, 289, 294], "fire": 270, "did": 270, "modifi": 270, "mutation_list": 270, "residue_idx": 270, "li": [270, 289], "tranform": 270, "position_in_chain": 270, "content": 270, "indiviual_list": 270, "ma0g": 270, "won": 270, "buildmodel": [270, 289], "thing": [269, 270, 289, 296], "gibb": 270, "foldx_cmd": 270, "consortium": [270, 289], "jesper": [270, 289], "freder": [270, 289], "joost": [270, 289], "lui": [270, 289], "peter": [270, 289], "vanhe": [270, 289], "erik": [270, 289], "verschueren": [270, 289], "baeten": [270, 289], "javier": [270, 289], "delgado": [270, 289], "francoi": [270, 289], "permut": [270, 289], "concept": [270, 289], "raphael": [270, 289], "gueroi": [270, 289], "backhbond": [270, 289], "142": 270, "58": 270, "sidehbond": [270, 289], "48": 270, "61": [270, 289], "energy_vdw": [270, 289], "179": 270, "63": 270, "electro": [270, 289], "energy_solvp": [270, 289], "245": 270, "28": [270, 271, 289], "energy_solvh": [270, 289], "238": 270, "89": 270, "energy_vdwclash": [270, 289], "42": [270, 289], "energy_tors": [270, 289], "70": [270, 289], "backbone_vdwclash": [270, 289], "158": 270, "16": [264, 270], "entropy_sidec": [270, 289], "105": 270, "87": 270, "entropy_mainc": [270, 289], "231": 270, "69": [270, 289], "bond": [270, 289], "00": [270, 289], "helix": [270, 289], "dipol": [270, 289], "75": [270, 289], "loop_entropi": [270, 289], "cis_bond": [270, 289], "disulfid": [270, 289], "kn": [270, 289], "electrostat": [270, 289], "partial": [270, 289], "coval": [270, 289], "energy_ionis": [270, 289], "56": 270, "entropi": [270, 289], "32": 270, "meta0": 270, "gly": 270, "ok": [270, 289], "fri": [270, 289], "dec": 270, "spend": [270, 289], "20": [124, 264, 270], "valid": [270, 289], "101m_repair_1": 270, "successfulli": [270, 289], "clean": [189, 270, 289], "completedprocess": 270, "sjt972": [270, 291, 294], "doc": [37, 270, 291], "understanding_foldx": 270, "01": 270, "returncod": 270, "average_101m_repair": 270, "dif_101m_repair": 270, "pdblist_101m_repair": 270, "raw_101m_repair": 270, "wt_101m_repair_1": 270, "raw_": 270, "_repair": [270, 277, 278], "tabl": 270, "quantiti": 270, "foldxsuit": [67, 269, 270], "crg": [67, 269, 270], "eu": [67, 269, 270], "column_nam": 270, "backbon": 270, "hbond": 270, "sidechain": 270, "van": 270, "der": 270, "waal": 270, "solvat": 270, "polar": 270, "hydrophob": 270, "clash": [268, 270], "mainchain": 270, "sloop_entropi": 270, "mloop_entropi": 270, "torsion": 270, "bridg": 270, "kon": 270, "ionis": 270, "pd": 270, "readlin": 270, "df": 270, "split": 270, "column": 270, "overal": 270, "31": [270, 291], "7457": 270, "34": 270, "3436": 270, "stand": [270, 293, 296], "pretti": [266, 270, 290], "again": 270, "quiet": [27, 94, 270], "wt_structur": 270, "mut_structur": 270, "pdb1": 270, "shrakeruplei": 270, "attach": [270, 291], "8407": 270, "731560227876": 270, "8439": 270, "063468009845": 270, "short": [267, 270], "impact": 270, "databas": 270, "desir": [270, 293], "lesser": 270, "stabler": 270, "correl": 270, "inde": [34, 249, 270, 277, 278, 295, 296], "present": [270, 296], "supervis": 271, "approach": 271, "featur": [268, 271], "rosetta": [171, 271], "network": [271, 297], "drawback": 271, "consid": [171, 271, 286, 296], "similar": 271, "foldx_stabl": [271, 278, 289, 293], "drop": [171, 271, 289, 293], "awar": [271, 297], "scale": [271, 286], "howev": [106, 271, 275, 294, 296], "easier": 271, "poli__rasp": 271, "correct": [271, 274, 277, 278, 279, 280, 281, 285, 296], "breakpoint": [271, 274], "satisfi": [271, 274], "root": [271, 274, 276, 279], "suppos": [271, 274], "3ned": [271, 289], "__file__": 271, "wildtype_pdb_paths_for_rasp": 271, "f_rasp": 271, "wildtype_str": 271, "join": [271, 289], "three_mut": 271, "wildtype_sequ": 271, "ddg": 271, "approx": 271, "03": 271, "07": [271, 289], "exact": [166, 266, 271, 274, 290, 296], "clang": 271, "cmake": 271, "reduc": 271, "pin": 271, "hash": 271, "bd23a0bf627ae9b08842102a5c2e9404b4a81924": 271, "cavity_model_15": 271, "ds_model": 271, "3ccebe87e017b6bd737f88e1943557d128c85616": 271, "against": [271, 274], "checksum": 271, "satur": 271, "mutagenesi": 271, "pmo": 272, "cite": [], "guacamol": [], "jump": 272, "bro": [186, 272, 296], "cap": 273, "alwai": [266, 273, 286, 287, 290, 294, 296], "openbabel": [267, 274], "prepar": 274, "autodock": 274, "vina": 274, "even": [274, 296], "requisit": [267, 274], "poli__dockstr": [274, 294], "canon": [274, 275], "risperidon": 274, "drd2": [274, 294], "risperidone_smil": 274, "cc1": 274, "n2ccccc2": 274, "n1": 274, "ccn3ccc": 274, "cc3": 274, "c4": 274, "noc5": 274, "c4c": 274, "c5": 274, "handl": [274, 277, 278, 280, 281], "hood": [274, 275], "pyscreen": [106, 268, 275], "center": [106, 275], "websit": [106, 275], "uncompress": [106, 275], "export": [106, 275], "autodock_vina": [106, 275], "bin": [106, 275], "bashrc": [106, 275], "zshrc": [106, 275], "sh": [106, 275, 296], "thu": [106, 275], "permiss": [106, 275], "chmod": [106, 275], "sometim": [106, 275], "problemat": [106, 275], "symlink": [106, 275], "ln": [106, 275], "sf": [106, 275], "drd3_dock": [268, 275, 289, 293], "abov": [275, 276, 279, 282, 295, 296], "success": 275, "underneath": [275, 276, 279, 282, 293], "text": [276, 277, 278, 296], "foldx_rfp_lambo": [276, 279, 289, 293], "poli__lambo": [276, 279], "samuelstanton": [65, 106, 276, 279], "431b052": [106, 276, 279], "proxy_rfp": [106, 113, 276], "asset": [106, 276], "fpbase": [106, 276], "avali": 276, "foldx_rfp": 276, "11189": 276, "00587946": 276, "8155": 276, "acces": [277, 282], "foldx_stability_and_sasa": [277, 278, 289, 293], "filenam": [277, 278], "cach": [277, 278], "your_fil": [277, 278], "remov": [189, 269, 277, 278, 291, 296], "heteroatom": [277, 278], "pdbtool": [277, 278], "Then": [277, 278, 280, 281], "foldx_sasa": [277, 289, 293], "poli__protein": [277, 278, 294], "penalized_logp_lambo": [268, 279, 289, 293], "carefulli": 279, "zinc": 279, "coeffici": 280, "solut": [266, 280, 290, 302], "octanol": 280, "rdkit_logp": [280, 289, 293, 294], "carbon": [280, 281], "6361": 280, "rdkit_q": [281, 289, 293], "35978494": 281, "assert": [281, 295], "isclos": 281, "sa_tdc": [268, 282, 289, 293], "8548": 282, "link": 285, "sort": [266, 285, 290, 302], "peopl": 286, "sum_": 286, "x_d": 286, "specif": [119, 124, 128, 286, 293], "constant": [152, 286], "toy_continuous_problem": [268, 286, 289, 293, 297, 298, 301], "saasbo": 286, "reli": [66, 248, 286], "assumpt": 286, "roughli": 286, "speak": 286, "subset": [269, 286, 298], "question": 286, "30d": 286, "randomli": [218, 266, 286, 289, 290, 293, 302, 303, 304], "dimensions_to_embed_in": 286, "integ": [192, 193, 266, 286, 287, 290, 293, 296], "mathcal": 287, "But": 288, "idea": [288, 289], "rc": 289, "sit": 289, "anaconda3": [291, 294], "lib": [291, 294], "python3": [291, 294], "site": [171, 291, 294], "tqdm": 291, "auto": 291, "tqdmwarn": 291, "iprogress": 291, "pleas": [291, 294], "updat": [266, 291, 298], "jupyt": 291, "ipywidget": 291, "readthedoc": 291, "io": 291, "user_instal": 291, "autonotebook": 291, "notebook_tqdm": 291, "304": [], "154": 291, "miss": 291, "restart": 291, "rich": 291, "warn": [269, 291, 294], "tensorflow": 291, "compat": 291, "v2_compat": 291, "108": 291, "disable_resource_vari": 291, "op": 291, "variable_scop": 291, "deprec": 291, "non": [291, 302], "resourc": 291, "term": 291, "gfp_cba": [268, 289, 293], "gfp_select": [268, 289, 293], "stick": 289, "red": 289, "explor": [289, 297], "expand": [], "autom": [], "ls": 289, "3ned_repair": 289, "optimizing_protein_st": 289, "ipynb": 289, "hopefulli": 289, "remind": 289, "forgot": 289, "178": 289, "76": 289, "267": 289, "80": 289, "13": 289, "374": 289, "65": 289, "17": 289, "146": 289, "340": 289, "27": 289, "77": [289, 294], "41": 289, "ea1": 289, "glua1": 289, "glu": 289, "3ned_repair_1": 289, "four": [], "section": [289, 295, 296], "abstractsolv": [266, 289, 290], "poli_baselin": [266, 267, 289, 293, 295, 297, 298, 301, 302, 303, 304], "abstract_solv": [266, 289, 290], "simplest": [266, 289, 290], "select": [289, 293, 301], "alter": 289, "There": [106, 289, 291, 294], "noth": [266, 289, 290], "special": [289, 293], "next_candid": [266, 289, 290, 293], "random_mut": [266, 289, 290, 293, 295], "black_box": [266, 289, 290, 293, 295, 297, 298, 301, 302, 303, 304], "modulenotfounderror": [], "traceback": [], "recent": 269, "cell": [], "No": 294, "And": [106, 289, 296], "solv": [266, 289, 290, 293, 295, 296, 297, 298, 301, 302, 303, 304], "n_iter": 289, "while": [267, 289], "max_it": [266, 289, 290, 293, 295, 297, 298, 301, 302, 303, 304], "mon": [], "la124w": [], "leua124": [], "trp": [], "43": [], "wa143": [], "trpa143": [], "ser": [], "44": [], "histori": [266, 289, 290, 293, 303, 304], "kei": [289, 295], "get_best_perform": [266, 289], "get_best_solut": [289, 293, 295, 302, 303, 304], "41639": 289, "01168": [], "81194": [], "eednmaiikefmrfkthmegsvnghefeiegegegrpyegtqtaklkvtkggplpfawdilspqfskayvkhpadipdylklsfpegfkwervmnfedggvvtvtqdsslqdgefiykvklrgtnfpsdgpvmqkktmgweacsermypedgalkgemkmrlklkdgghydaevkttykakkpvqlpgayntntklditshnedytiveqyernegrhstggmdelyk": 289, "almost": [266, 290], "likewis": [266, 290], "propos": [266, 290, 293], "notimplementederror": [266, 290], "subclass": [266, 290], "100": [266, 290, 293, 302, 303, 304], "leverag": [266, 290], "fact": [266, 290], "len": [266, 290], "far": [9, 266, 290], "best_x": [266, 290], "argmax": [266, 290], "next_x": [266, 290], "po": [266, 290], "randint": [266, 290], "choic": [266, 290, 302], "lean": [266, 290], "logic": [266, 268, 290, 291], "slightli": [266, 290, 296], "appli": 290, "discuss": [268, 291, 293, 295, 296], "part": [291, 294], "compar": [291, 294], "effici": [264, 291, 297], "qualiti": 291, "comparison": [166, 291], "save": 291, "json": 291, "mlflow": 291, "weight": 291, "bias": 291, "abstract_observ": 291, "skeleton": 291, "simpleobserv": 291, "init": 291, "servic": 291, "wandb": 291, "adjac": 291, "uniqu": [160, 291], "identifi": 291, "uuid4": 291, "metadata": 291, "uuid": 291, "experiment_path": 291, "as_dict": 291, "recal": 291, "tolist": 291, "dump": 291, "curiou": 291, "rememb": [291, 296], "invent": 291, "wheel": 291, "tensorboard": 291, "fp": 291, "snippet": [291, 295], "scenario": 291, "253": 291, "p": [64, 264, 291], "q": [64, 264, 291], "v": [64, 66, 291], "z": 291, "were": [291, 294], "accordingli": 291, "migu": 291, "flea": [291, 296], "showcas": 291, "behind": 291, "saw": 291, "overwritten": 291, "deeper": [293, 295], "intro": 293, "treat": 293, "38": [], "260": [], "further": 293, "prerequisit": [], "page": [293, 296], "yourself": 296, "00_a_simple_objective_function_registr": [], "randommut": [293, 295, 303, 304], "dtype": 293, "u1": 293, "talk": 293, "combin": 295, "optimizing_aloha": 295, "01_a_simple_example_of_optim": 295, "our_aloha": [295, 296], "past": 295, "haven": 295, "realli": 295, "Its": 295, "break_at_perform": [266, 295], "break": [266, 295], "summari": 295, "less": 295, "conclud": 295, "takeawai": 295, "independ": 295, "why": 295, "registering_aloha": 296, "search": [296, 297], "match": [294, 296], "aloof": 296, "syntax": 296, "ouralohablackbox": 296, "sum": 296, "axi": 296, "keepdim": 296, "get_max_sequence_length": 296, "x_0": 296, "alohablackbox": 296, "ascii_uppercas": 296, "ouralohaproblemfactori": 296, "interpret": 296, "poli_aloha": 296, "poli_aloha_problem": 296, "aloha_problem_factori": 296, "somewher": 296, "workhors": 296, "querying_aloha": 296, "emphas": 296, "amaz": 296, "x1": 296, "y1": 296, "subtl": 296, "torch": [194, 296], "cheminformat": 296, "mechan": 296, "prism": [], "implment": [], "prismpars": [], "deriv": [], "variantdata": [], "help": 269, "preprocess": [], "infer": 264, "effect": [], "caviti": [], "downstream": [], "apach": [], "licens": 269, "duli": [], "inner_rasp": [], "bird": 171, "ey": 171, "reader": 171, "099": [], "372": [], "459": [], "251": [], "788": [], "26": [], "476": [], "622": [], "45": [], "138": [], "29": 264, "602": [], "377": [], "reset_evaluation_budget": 3, "reset": [3, 96], "made": 3, "relat": [8, 18, 38, 63, 269], "477": [], "tue": [], "47": [], "787": [], "negat": 4, "kwargs_for_oracl": [10, 108], "888": [], "02": [], "19": [264, 289], "677": [], "24": [], "05": [], "698": [], "144": [], "160": [], "06": [], "35": [], "686": [], "966": [], "wed": [], "855": [], "itertool": 37, "aspuru": [43, 44, 264], "guzik": [43, 44, 264], "lab": [43, 44], "group": [43, 44], "hex_digest": 52, "amino_acid": 64, "foldxinterfac": 65, "codebas": [], "faraldo": 171, "g\u00f3mez": [171, 264, 297], "detlef": 171, "weigel": 171, "nir": 171, "ben": 171, "tal": 171, "julian": 171, "echav": 171, "04": [], "68": [], "917": [], "dynam": 89, "constructor": 89, "processwrapp": [90, 91, 93], "down": 94, "configpars": 95, "162": [], "46": 289, "479": [], "prepare_receptor": 106, "adfr": [], "suit": 269, "scripp": 106, "edu": 106, "bash": 106, "ccsb": 106, "ddr3_dock": 106, "manual": [], "query_exampl": 106, "54": [], "409": [], "55": [], "628": [], "036": [], "089": [], "465": [], "98": [], "37": 289, "163": [], "juli": [65, 110, 166, 167], "ab": [65, 110, 166, 167, 264], "388": [], "913": [], "jointli": 166, "fair": 166, "string_to_idx": [], "idx_to_str": [], "strongli": 178, "heurist": 179, "discard": 179, "too": 179, "heavi": 179, "accessibl": 182, "51": 289, "610": [], "52": [], "74": [], "09": 289, "369": [], "avout": 186, "empti": 189, "probit": 193, "toycontinuousproblem": 218, "bound": 218, "upper": 218, "vector": 224, "downward": 224, "527": [], "93": [], "53": 289, "273": [], "081": [], "670": [], "982": [], "keyboardinterrupt": [], "objective_manag": [], "make_run_script": [], "make_observer_script": [], "available_object": [], "_default": [], "_observ": [], "101": [], "gfpcbasproblemfactori": [], "103": [], "104": 264, "filenotfounderror": [], "seed_numpi": [], "seed_python": [], "cbas_wrapp": [], "cbasvaewrapp": [], "cbas_alphabet_preprocess": [], "get_gfp_x_y_aa": [], "one_hot_encode_aa_arrai": [], "gfpcbasblackbox": [], "abstract_vae_wrapp": [], "abstractvaewrapp": [], "make_va": [], "build_va": [], "tf": [], "backend": [], "_api": [], "v2": [], "autograph": [], "bitwis": [], "public": [], "namespac": [], "sy": [], "_sy": [], "v1": [], "forward_compatibility_horizon": [], "125": 289, "forward_compat": [], "lazy_load": [], "lazyload": [], "_lazyload": [], "keraslazyload": [], "_keraslazyload": [], "__internal__": [], "__operators__": [], "audio": [], "341": [], "339": [], "_current_modul": [], "_tf": [], "342": [], "__path__": [], "343": [], "_module_util": [], "get_parent_dir": [], "344": [], "setattr": [], "frozen": [], "importlib": [], "_bootstrap": [], "1007": [], "_find_and_load": [], "import_": [], "986": [], "_find_and_load_unlock": [], "680": [], "_load_unlock": [], "spec": [], "_bootstrap_extern": [], "846": [], "exec_modul": [], "941": [], "get_cod": [], "1039": [], "get_data": [], "107": [], "32895038": [], "49": 289, "079": [], "squelch": [27, 94], "feedback": [27, 94], "parent_folders_exist_ok": [], "account": [], "secur": [], "person": [], "fine": 267, "grain": [], "longer": 66, "v5": [119, 124, 128], "shown": 124, "regress": 152, "sarkisyan": 152, "2016": [152, 264, 297], "plu": [152, 302], "problem_typ": 161, "exemplifi": 248, "Not": 248, "benefit": 248, "intellisens": 248, "spawn": 249, "2024": [268, 289], "858": [], "jan": [268, 289], "149": [], "only_avail": [25, 293], "highli": [], "063": [], "typeerror": [], "got": [], "unexpect": [], "releas": 267, "548": [], "57433265": 293, "phase": 267, "simple__": 289, "mrogu": 289, "67": 289, "ia119l": 289, "ilea119": 289, "118": 289, "leu": 289, "na23c": 289, "asna23": 289, "cy": 289, "ga126q": 289, "glya126": 289, "gln": 289, "57": 289, "86": 289, "99477": 289, "42085": 289, "16703": 289, "five": 289, "gfsc22": 264, "matter": 264, "practic": 264, "sixth": 264, "yczrdi0y7g": 264, "dockstringproblemfactori": 274, "v4": [277, 278], "nameerror": [], "readili": 25, "pareto": 180, "front": 180, "equival": [], "intend": [], "skip": [], "whole": [], "domin": 302, "deb": [264, 302], "2002": [264, 302], "mate": 302, "procedur": 302, "upon": 302, "pymoo": [264, 302], "alohaproblemfactori": [302, 303, 304], "multi_objective_black_box": 302, "multiobjectiveblackbox": 302, "discretensgaii": 302, "hyperparamet": 302, "population_s": [298, 302], "max_iter": 302, "num_mut": 302, "f_aloha": 302, "togeth": 302, "popul": 302, "evolut": [264, 302], "dpam02": 264, "pratap": 264, "agarw": 264, "meyarivan": 264, "fast": 264, "elitist": 264, "multiobject": 264, "ii": 264, "ieee": 264, "transact": 264, "182": 264, "197": 264, "april": 264, "1109": 264, "4235": 264, "996017": 264, "blankdeb20": 264, "blank": [264, 302], "89497": 264, "89509": 264, "2020": [264, 268, 297, 301, 302], "approxim": 297, "tild": 297, "bm": [], "surrog": 297, "acquisit": [268, 297, 301], "render": 297, "smartli": 297, "balanc": 297, "exploit": 297, "gpytorch": [264, 297], "botorch": [264, 268, 297, 301], "balandat": [264, 297, 301], "gardner": [264, 297], "2018": [264, 268, 297], "grid": 297, "vanillabayesianoptim": 297, "f_acklei": [297, 301], "randn": [297, 301], "clip": [297, 301], "bo_solv": 297, "human": [264, 297], "great": 297, "mostli": 297, "intent": 297, "adversari": 297, "gan": 297, "restrict": 301, "coordin": 301, "singletaskgp": 301, "type_of_lin": 301, "gbwd": 264, "rafael": 264, "bombarelli": [264, 297], "jennif": 264, "wei": 264, "david": [264, 298], "duvenaud": 264, "benjam\u00edn": 264, "s\u00e1nchez": 264, "lengel": 264, "denni": 264, "sheberla": 264, "jorg": 264, "aguilera": 264, "iparraguirr": 264, "timothi": 264, "hirzel": 264, "ryan": 264, "adam": 264, "al\u00e1n": 264, "driven": 264, "central": 264, "268": 264, "276": 264, "februari": 264, "acscentsci": 264, "7b00572": 264, "kmh": 264, "johann": 264, "kirschner": [264, 301], "mojmir": 264, "mutni": 264, "nicol": 264, "hiller": 264, "rasmu": 264, "ischebeck": 264, "kraus": 264, "safe": 264, "high": 264, "subspac": 264, "36th": 264, "3429": 264, "3438": 264, "pmlr": 264, "2019": [264, 268, 301], "mlr": 264, "press": 264, "v97": 264, "kirschner19a": 264, "ssw": 264, "bobak": 264, "shahriari": [264, 297], "kevin": 264, "swerski": 264, "ziyu": 264, "wang": 264, "nando": 264, "freita": 264, "review": 264, "148": 264, "175": 264, "januari": 264, "jproc": 264, "2494218": 264, "bkj": 264, "gpb": 264, "jacob": 264, "geoff": 264, "pleiss": 264, "bindel": 264, "kilian": 264, "weinberg": 264, "blackbox": 264, "matrix": [264, 298], "gpu": 264, "usepackag": [], "covari": [264, 298], "maintain": 298, "mu": 298, "sigma": 298, "member": 298, "ho96": 264, "hansen": [264, 298], "ostermei": [264, 298], "312": 264, "317": 264, "1996": [264, 298], "icec": 264, "542381": 264, "introduct": 298, "blogpost": 298, "pycma": 298, "cma_e": 298, "initial_mean": 298, "initial_sigma": 298, "toycontinuousproblemfactori": 298, "mathbf": [], "boldsymbol": [297, 298], "maximilian": 264, "brian": 264, "karrer": 264, "daniel": 264, "jiang": 264, "daulton": 264, "benjamin": 264, "letham": 264, "eytan": 264, "bakshi": 264, "mont": 264, "carlo": 264, "decemb": 264, "1910": 264, "06403": 264, "cs": 264, "math": 264, "stat": 264, "vanilla": 268, "over": 268, "babel": 294, "diagram": [], "freez": 294, "grep": 294, "dockstringwarn": 294, "although": 294, "mac": [269, 294], "perfectli": 294, "platform": 294, "report": 294, "externalblackbox": 294, "num_evalu": 294, "f_logp": 294, "x0_logp": 294, "y0_logp": 294, "logpblackbox": 294, "withdenois": 65, "stdout": 66, "dg": 269, "academ": 269, "zip": 269, "auxiliari": 269, "unverifi": 269, "quarantin": 269, "risk": 269, "xattr": 269, "appl": 269, "your_arg": 265, "your_second_arg": 265, "your_kwarg": 265, "googl": [265, 268], "your_arg_1": 265, "your_arg_2": 265, "thereof": 265, "contribut": [265, 266], "x0_i": 266, "y0_i": 266, "callback": 266, "pre_step_callback": 266, "turn": 266, "post": 266, "post_step_callback": 266, "jrhernandezgarcia": 264, "moksh": 264, "jain": [264, 269], "sharath": 264, "chandra": 264, "raparthi": 264, "alex": 264, "hern": 264, "\u00e1": 264, "ndez": 264, "garc": 264, "\u0131": 264, "jarrid": 264, "rector": 264, "brook": [264, 268], "yoshua": 264, "santiago": 264, "miret": 264, "emmanuel": 264, "gf": 264, "low": 264, "emma": 264, "brunskil": 264, "kyunghyun": 264, "cho": 264, "barbara": 264, "engelhardt": 264, "sivan": 264, "sabato": 264, "jonathan": 264, "scarlett": 264, "40th": 264, "202": 264, "14631": 264, "14653": 264, "jul": 264, "v202": 264, "jain23a": 264, "pytdc": 268, "accces": 268, "stage": 268, "encourag": 268, "gonzalezduquebartelsmichael": 268, "gonz\u00e1lez": 268, "duqu": 268, "bartel": 268, "simon": 268, "michael": 268, "richard": 268, "month": 268, "titl": 268, "libari": 268, "year": 268, "graff": 268, "shakhnovich": 268, "foldx_": 268, "park": 268, "listgarten": 268, "rdkit_": 268, "rfp_foldx_": 268, "ertl": 268, "schuffenhau": 268, "volz": 268, "2013": 268}, "objects": {"": [[0, 0, 0, "-", "poli"]], "poli": [[1, 0, 0, "-", "core"], [88, 0, 0, "-", "objective"], [92, 0, 0, "-", "objective_factory"], [97, 0, 0, "-", "objective_repository"], [226, 0, 0, "-", "registered_objectives"], [227, 0, 0, "-", "tests"]], "poli.core": [[2, 0, 0, "-", "abstract_black_box"], [5, 0, 0, "-", "abstract_problem_factory"], [8, 0, 0, "-", "chemistry"], [11, 0, 0, "-", "exceptions"], [14, 0, 0, "-", "multi_objective_black_box"], [16, 0, 0, "-", "problem_setup_information"], [18, 0, 0, "-", "proteins"], [21, 0, 0, "-", "registry"], [30, 0, 0, "-", "util"]], "poli.core.abstract_black_box": [[3, 1, 1, "", "AbstractBlackBox"], [4, 1, 1, "", "NegativeBlackBox"]], "poli.core.abstract_black_box.AbstractBlackBox": [[3, 2, 1, "", "__call__"], [3, 2, 1, "", "__del__"], [3, 2, 1, "", "__enter__"], [3, 2, 1, "", "__exit__"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "__neg__"], [3, 2, 1, "", "_black_box"], [3, 3, 1, "", "batch_size"], [3, 3, 1, "", "info"], [3, 3, 1, "", "num_workers"], [3, 3, 1, "", "observer"], [3, 3, 1, "", "parallelize"], [3, 2, 1, "", "reset_evaluation_budget"], [3, 2, 1, "", "set_observer"], [3, 2, 1, "", "terminate"]], "poli.core.abstract_black_box.NegativeBlackBox": [[4, 2, 1, "", "__init__"]], "poli.core.abstract_problem_factory": [[6, 1, 1, "", "AbstractProblemFactory"], [7, 1, 1, "", "MetaProblemFactory"]], "poli.core.abstract_problem_factory.AbstractProblemFactory": [[6, 2, 1, "", "__init__"]], "poli.core.abstract_problem_factory.MetaProblemFactory": [[7, 2, 1, "", "__init__"]], "poli.core.chemistry": [[9, 0, 0, "-", "tdc_black_box"]], "poli.core.chemistry.tdc_black_box": [[10, 1, 1, "", "TDCBlackBox"]], "poli.core.chemistry.tdc_black_box.TDCBlackBox": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "from_smiles"], [10, 3, 1, "", "oracle"]], "poli.core.exceptions": [[12, 4, 1, "", "BudgetExhaustedException"], [13, 4, 1, "", "PoliException"]], "poli.core.multi_objective_black_box": [[15, 1, 1, "", "MultiObjectiveBlackBox"]], "poli.core.multi_objective_black_box.MultiObjectiveBlackBox": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "_black_box"], [15, 3, 1, "", "objective_functions"]], "poli.core.problem_setup_information": [[17, 1, 1, "", "ProblemSetupInformation"]], "poli.core.problem_setup_information.ProblemSetupInformation": [[17, 2, 1, "", "__init__"]], "poli.core.proteins": [[19, 0, 0, "-", "foldx_black_box"]], "poli.core.proteins.foldx_black_box": [[20, 1, 1, "", "FoldxBlackBox"]], "poli.core.proteins.foldx_black_box.FoldxBlackBox": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "create_working_directory"], [20, 3, 1, "", "experiment_id"], [20, 3, 1, "", "tmp_folder"], [20, 3, 1, "", "wildtype_amino_acids"], [20, 3, 1, "", "wildtype_pdb_paths"], [20, 3, 1, "", "wildtype_residue_strings"], [20, 3, 1, "", "wildtype_residues"]], "poli.core.registry": [[22, 5, 1, "", "delete_observer_run_script"], [23, 5, 1, "", "delete_problem"], [24, 5, 1, "", "get_problem_factories"], [25, 5, 1, "", "get_problems"], [26, 5, 1, "", "register_problem"], [27, 5, 1, "", "register_problem_from_repository"], [28, 5, 1, "", "set_observer"], [29, 5, 1, "", "set_observer_run_script"]], "poli.core.util": [[31, 0, 0, "-", "abstract_observer"], [33, 0, 0, "-", "alignment"], [35, 0, 0, "-", "batch"], [38, 0, 0, "-", "chemistry"], [45, 0, 0, "-", "external_observer"], [47, 0, 0, "-", "files"], [53, 0, 0, "-", "inter_process_communication"], [57, 0, 0, "-", "objective_management"], [61, 0, 0, "-", "observer_wrapper"], [63, 0, 0, "-", "proteins"], [84, 0, 0, "-", "seeding"]], "poli.core.util.abstract_observer": [[32, 1, 1, "", "AbstractObserver"]], "poli.core.util.abstract_observer.AbstractObserver": [[32, 2, 1, "", "__init__"], [32, 2, 1, "", "finish"], [32, 2, 1, "", "observe"]], "poli.core.util.alignment": [[34, 0, 0, "-", "is_aligned"]], "poli.core.util.batch": [[36, 0, 0, "-", "batch_input"]], "poli.core.util.batch.batch_input": [[37, 5, 1, "", "batched"]], "poli.core.util.chemistry": [[39, 0, 0, "-", "string_to_molecule"]], "poli.core.util.chemistry.string_to_molecule": [[40, 5, 1, "", "selfies_to_molecules"], [41, 5, 1, "", "smiles_to_molecules"], [42, 5, 1, "", "strings_to_molecules"], [43, 5, 1, "", "translate_selfies_to_smiles"], [44, 5, 1, "", "translate_smiles_to_selfies"]], "poli.core.util.external_observer": [[46, 1, 1, "", "ExternalObserver"]], "poli.core.util.external_observer.ExternalObserver": [[46, 2, 1, "", "__getattr__"], [46, 2, 1, "", "__init__"], [46, 2, 1, "", "finish"], [46, 2, 1, "", "initialize_observer"], [46, 2, 1, "", "observe"]], "poli.core.util.files": [[48, 0, 0, "-", "download_files_from_github"], [51, 0, 0, "-", "integrity"]], "poli.core.util.files.download_files_from_github": [[49, 5, 1, "", "download_file_from_github_repository"], [50, 5, 1, "", "get_sha_for_tag"]], "poli.core.util.files.integrity": [[52, 5, 1, "", "compute_md5_from_filepath"]], "poli.core.util.inter_process_communication": [[54, 0, 0, "-", "process_wrapper"]], "poli.core.util.inter_process_communication.process_wrapper": [[55, 1, 1, "", "ProcessWrapper"], [56, 5, 1, "", "get_connection"]], "poli.core.util.inter_process_communication.process_wrapper.ProcessWrapper": [[55, 2, 1, "", "__init__"]], "poli.core.util.objective_management": [[58, 0, 0, "-", "make_run_script"]], "poli.core.util.objective_management.make_run_script": [[59, 5, 1, "", "make_observer_script"], [60, 5, 1, "", "make_run_script"]], "poli.core.util.observer_wrapper": [[62, 5, 1, "", "start_observer_process"]], "poli.core.util.proteins": [[64, 0, 0, "-", "defaults"], [65, 0, 0, "-", "foldx"], [67, 0, 0, "-", "mutations"], [71, 0, 0, "-", "pdb_parsing"], [75, 0, 0, "-", "rasp"]], "poli.core.util.proteins.foldx": [[66, 1, 1, "", "FoldxInterface"]], "poli.core.util.proteins.foldx.FoldxInterface": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "_compute_sasa"], [66, 2, 1, "", "_read_energy"], [66, 2, 1, "", "_repair_if_necessary_and_provide_path"], [66, 2, 1, "", "_simulate_mutations"], [66, 2, 1, "", "compute_sasa"], [66, 2, 1, "", "compute_stability"], [66, 2, 1, "", "compute_stability_and_sasa"], [66, 2, 1, "", "copy_foldx_files"], [66, 2, 1, "", "repair"], [66, 3, 1, "", "verbose"], [66, 3, 1, "", "working_dir"], [66, 2, 1, "", "write_mutations_to_file"]], "poli.core.util.proteins.mutations": [[68, 5, 1, "", "edits_between_strings"], [69, 5, 1, "", "find_closest_wildtype_pdb_file_to_mutant"], [70, 5, 1, "", "mutations_from_wildtype_residues_and_mutant"]], "poli.core.util.proteins.pdb_parsing": [[72, 5, 1, "", "parse_pdb_as_residue_strings"], [73, 5, 1, "", "parse_pdb_as_residues"], [74, 5, 1, "", "parse_pdb_as_structure"]], "poli.core.util.proteins.rasp": [[76, 0, 0, "-", "inner_rasp"], [82, 6, 1, "", "load_models"], [83, 6, 1, "", "rasp_interface"]], "poli.core.util.proteins.rasp.inner_rasp": [[77, 6, 1, "", "PrismData"], [78, 6, 1, "", "cavity_model"], [79, 6, 1, "", "helpers"], [80, 6, 1, "", "run_pipeline"], [81, 6, 1, "", "visualization"]], "poli.core.util.seeding": [[85, 0, 0, "-", "seeding"]], "poli.core.util.seeding.seeding": [[86, 5, 1, "", "seed_numpy"], [87, 5, 1, "", "seed_python"]], "poli.objective": [[89, 5, 1, "", "dynamically_instantiate"], [90, 5, 1, "", "parse_factory_kwargs"], [91, 5, 1, "", "run"]], "poli.objective_factory": [[93, 1, 1, "", "ExternalBlackBox"], [94, 5, 1, "", "create"], [95, 5, 1, "", "load_config"], [96, 5, 1, "", "start"]], "poli.objective_factory.ExternalBlackBox": [[93, 2, 1, "", "__init__"]], "poli.objective_repository": [[98, 0, 0, "-", "aloha"], [102, 0, 0, "-", "dockstring"], [106, 0, 0, "-", "drd3_docking"], [110, 0, 0, "-", "foldx_rfp_lambo"], [116, 0, 0, "-", "foldx_sasa"], [121, 0, 0, "-", "foldx_stability"], [126, 0, 0, "-", "foldx_stability_and_sasa"], [130, 0, 0, "-", "gfp_cbas"], [162, 0, 0, "-", "gfp_select"], [166, 0, 0, "-", "penalized_logp_lambo"], [170, 0, 0, "-", "rasp"], [172, 0, 0, "-", "rdkit_logp"], [176, 0, 0, "-", "rdkit_qed"], [180, 0, 0, "-", "rfp_foldx_stability_and_sasa"], [182, 0, 0, "-", "sa_tdc"], [186, 0, 0, "-", "super_mario_bros"], [199, 0, 0, "-", "toy_continuous_problem"], [222, 0, 0, "-", "white_noise"]], "poli.objective_repository.aloha": [[99, 0, 0, "-", "register"]], "poli.objective_repository.aloha.register": [[100, 1, 1, "", "AlohaBlackBox"], [101, 1, 1, "", "AlohaProblemFactory"]], "poli.objective_repository.aloha.register.AlohaBlackBox": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "_black_box"], [100, 3, 1, "", "alphabet"]], "poli.objective_repository.aloha.register.AlohaProblemFactory": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "create"], [101, 2, 1, "", "get_setup_information"]], "poli.objective_repository.dockstring": [[103, 0, 0, "-", "register"]], "poli.objective_repository.dockstring.register": [[104, 1, 1, "", "DockstringBlackBox"], [105, 1, 1, "", "DockstringProblemFactory"]], "poli.objective_repository.dockstring.register.DockstringBlackBox": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "_black_box"], [104, 3, 1, "", "alphabet"]], "poli.objective_repository.dockstring.register.DockstringProblemFactory": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "create"], [105, 2, 1, "", "get_setup_information"]], "poli.objective_repository.drd3_docking": [[107, 0, 0, "-", "register"]], "poli.objective_repository.drd3_docking.register": [[108, 1, 1, "", "DRD3BlackBox"], [109, 1, 1, "", "DRD3ProblemFactory"]], "poli.objective_repository.drd3_docking.register.DRD3BlackBox": [[108, 2, 1, "id0", "__init__"], [108, 3, 1, "", "oracle_name"]], "poli.objective_repository.drd3_docking.register.DRD3ProblemFactory": [[109, 2, 1, "", "__init__"]], "poli.objective_repository.foldx_rfp_lambo": [[111, 0, 0, "-", "register"]], "poli.objective_repository.foldx_rfp_lambo.register": [[112, 3, 1, "", "Config"], [113, 1, 1, "", "RFPWrapper"], [114, 1, 1, "", "RFPWrapperFactory"], [115, 5, 1, "", "get_config"]], "poli.objective_repository.foldx_rfp_lambo.register.RFPWrapper": [[113, 2, 1, "", "__init__"]], "poli.objective_repository.foldx_rfp_lambo.register.RFPWrapperFactory": [[114, 2, 1, "", "__init__"]], "poli.objective_repository.foldx_sasa": [[118, 0, 0, "-", "register"]], "poli.objective_repository.foldx_sasa.register": [[119, 1, 1, "", "FoldXSASABlackBox"], [120, 1, 1, "", "FoldXSASAProblemFactory"]], "poli.objective_repository.foldx_sasa.register.FoldXSASABlackBox": [[119, 2, 1, "", "__init__"]], "poli.objective_repository.foldx_sasa.register.FoldXSASAProblemFactory": [[120, 2, 1, "", "__init__"]], "poli.objective_repository.foldx_stability": [[123, 0, 0, "-", "register"]], "poli.objective_repository.foldx_stability.register": [[124, 1, 1, "", "FoldXStabilityBlackBox"], [125, 1, 1, "", "FoldXStabilityProblemFactory"]], "poli.objective_repository.foldx_stability.register.FoldXStabilityBlackBox": [[124, 2, 1, "", "__init__"], [124, 2, 1, "", "_black_box"]], "poli.objective_repository.foldx_stability.register.FoldXStabilityProblemFactory": [[125, 2, 1, "", "__init__"]], "poli.objective_repository.foldx_stability_and_sasa": [[127, 0, 0, "-", "register"]], "poli.objective_repository.foldx_stability_and_sasa.register": [[128, 1, 1, "", "FoldXStabilityAndSASABlackBox"], [129, 1, 1, "", "FoldXStabilityAndSASAProblemFactory"]], "poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASABlackBox": [[128, 2, 1, "", "__init__"]], "poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASAProblemFactory": [[129, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas": [[131, 0, 0, "-", "abstract_vae_wrapper"], [133, 0, 0, "-", "cbas_alphabet_preprocessing"], [148, 0, 0, "-", "cbas_wrapper"], [152, 0, 0, "-", "gfp_gp"], [153, 0, 0, "-", "make_vae"], [159, 0, 0, "-", "register"]], "poli.objective_repository.gfp_cbas.abstract_vae_wrapper": [[132, 1, 1, "", "AbstractVAEWrapper"]], "poli.objective_repository.gfp_cbas.abstract_vae_wrapper.AbstractVAEWrapper": [[132, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing": [[134, 5, 1, "", "convert_aas_to_idx_array"], [135, 5, 1, "", "convert_idx_array_to_aas"], [136, 5, 1, "", "convert_mutations_to_sequence"], [137, 5, 1, "", "get_argmax"], [138, 5, 1, "", "get_balaji_predictions"], [139, 5, 1, "", "get_experimental_X_y"], [140, 5, 1, "", "get_gfp_X_y_aa"], [141, 5, 1, "", "get_gfp_base_seq"], [142, 5, 1, "", "get_samples"], [143, 5, 1, "", "one_hot_encode_aa"], [144, 5, 1, "", "one_hot_encode_aa_array"], [145, 5, 1, "", "one_hot_encode_dna"], [146, 5, 1, "", "partition_data"], [147, 5, 1, "", "read_gfp_data"]], "poli.objective_repository.gfp_cbas.cbas_wrapper": [[149, 1, 1, "", "CBASVAEWrapper"], [150, 1, 1, "", "ConvertedTorchVaeDecoder"], [151, 1, 1, "", "ConvertedTorchVaeEncoder"]], "poli.objective_repository.gfp_cbas.cbas_wrapper.CBASVAEWrapper": [[149, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeDecoder": [[150, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeEncoder": [[151, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.make_vae": [[154, 1, 1, "", "BaseVAE"], [155, 1, 1, "", "SimpleVAE"], [156, 5, 1, "", "build_vae"], [157, 5, 1, "", "identity_loss"], [158, 5, 1, "", "summed_categorical_crossentropy"]], "poli.objective_repository.gfp_cbas.make_vae.BaseVAE": [[154, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.make_vae.SimpleVAE": [[155, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.register": [[160, 1, 1, "", "GFPCBasBlackBox"], [161, 1, 1, "", "GFPCBasProblemFactory"]], "poli.objective_repository.gfp_cbas.register.GFPCBasBlackBox": [[160, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.register.GFPCBasProblemFactory": [[161, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_select": [[163, 0, 0, "-", "register"]], "poli.objective_repository.gfp_select.register": [[164, 1, 1, "", "GFPBlackBox"], [165, 1, 1, "", "GFPSelectionProblemFactory"]], "poli.objective_repository.gfp_select.register.GFPBlackBox": [[164, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_select.register.GFPSelectionProblemFactory": [[165, 2, 1, "", "__init__"]], "poli.objective_repository.penalized_logp_lambo": [[167, 0, 0, "-", "register"]], "poli.objective_repository.penalized_logp_lambo.register": [[168, 1, 1, "", "PenalizedLogPLamboBlackBox"], [169, 1, 1, "", "PenalizedLogPLamboProblemFactory"]], "poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboBlackBox": [[168, 2, 1, "", "__init__"]], "poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboProblemFactory": [[169, 2, 1, "", "__init__"]], "poli.objective_repository.rasp": [[171, 0, 0, "-", "register"]], "poli.objective_repository.rdkit_logp": [[173, 0, 0, "-", "register"]], "poli.objective_repository.rdkit_logp.register": [[174, 1, 1, "", "LogPBlackBox"], [175, 1, 1, "", "LogPProblemFactory"]], "poli.objective_repository.rdkit_logp.register.LogPBlackBox": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "_black_box"], [174, 3, 1, "", "from_selfies"], [174, 3, 1, "", "from_smiles"]], "poli.objective_repository.rdkit_logp.register.LogPProblemFactory": [[175, 2, 1, "", "__init__"]], "poli.objective_repository.rdkit_qed": [[177, 0, 0, "-", "register"]], "poli.objective_repository.rdkit_qed.register": [[178, 1, 1, "", "QEDBlackBox"], [179, 1, 1, "", "QEDProblemFactory"]], "poli.objective_repository.rdkit_qed.register.QEDBlackBox": [[178, 2, 1, "", "__init__"], [178, 2, 1, "", "_black_box"], [178, 3, 1, "", "from_selfies"], [178, 3, 1, "", "from_smiles"]], "poli.objective_repository.rdkit_qed.register.QEDProblemFactory": [[179, 2, 1, "", "__init__"], [179, 2, 1, "", "create"], [179, 2, 1, "", "get_setup_information"]], "poli.objective_repository.rfp_foldx_stability_and_sasa": [[181, 0, 0, "-", "register"]], "poli.objective_repository.sa_tdc": [[183, 0, 0, "-", "register"]], "poli.objective_repository.sa_tdc.register": [[184, 1, 1, "", "SABlackBox"], [185, 1, 1, "", "SAProblemFactory"]], "poli.objective_repository.sa_tdc.register.SABlackBox": [[184, 2, 1, "", "__init__"]], "poli.objective_repository.sa_tdc.register.SAProblemFactory": [[185, 2, 1, "", "__init__"], [185, 2, 1, "", "create"], [185, 2, 1, "", "get_setup_information"]], "poli.objective_repository.super_mario_bros": [[187, 0, 0, "-", "level_utils"], [196, 0, 0, "-", "model"]], "poli.objective_repository.super_mario_bros.level_utils": [[188, 5, 1, "", "add_padding_to_level"], [189, 5, 1, "", "clean_level"], [190, 5, 1, "", "level_to_array"], [191, 5, 1, "", "level_to_list"], [192, 5, 1, "", "levels_to_onehot"], [193, 5, 1, "", "onehot_to_levels"], [194, 5, 1, "", "tensor_to_sim_level"], [195, 5, 1, "", "vectorized"]], "poli.objective_repository.super_mario_bros.model": [[197, 1, 1, "", "VAEMario"], [198, 5, 1, "", "load_example_model"]], "poli.objective_repository.super_mario_bros.model.VAEMario": [[197, 2, 1, "", "__init__"]], "poli.objective_repository.toy_continuous_problem": [[200, 0, 0, "-", "definitions"], [217, 0, 0, "-", "register"], [220, 0, 0, "-", "toy_continuous_problem"]], "poli.objective_repository.toy_continuous_problem.definitions": [[201, 5, 1, "", "ackley_function_01"], [202, 5, 1, "", "alpine_01"], [203, 5, 1, "", "alpine_02"], [204, 5, 1, "", "bent_cigar"], [205, 5, 1, "", "brown"], [206, 5, 1, "", "camelback_2d"], [207, 5, 1, "", "chung_reynolds"], [208, 5, 1, "", "cosine_mixture"], [209, 5, 1, "", "cross_in_tray"], [210, 5, 1, "", "deb_01"], [211, 5, 1, "", "deb_02"], [212, 5, 1, "", "deflected_corrugated_spring"], [213, 5, 1, "", "easom"], [214, 5, 1, "", "egg_holder"], [215, 5, 1, "", "shifted_sphere"], [216, 5, 1, "", "styblinski_tang"]], "poli.objective_repository.toy_continuous_problem.register": [[218, 1, 1, "", "ToyContinuousBlackBox"], [219, 1, 1, "", "ToyContinuousProblemFactory"]], "poli.objective_repository.toy_continuous_problem.register.ToyContinuousBlackBox": [[218, 2, 1, "", "__init__"], [218, 2, 1, "", "_black_box"], [218, 3, 1, "", "alphabet"], [218, 3, 1, "", "bounds"], [218, 3, 1, "", "embed_in"], [218, 3, 1, "", "function"], [218, 3, 1, "", "function_name"], [218, 3, 1, "", "n_dimensions"]], "poli.objective_repository.toy_continuous_problem.register.ToyContinuousProblemFactory": [[219, 2, 1, "", "__init__"]], "poli.objective_repository.toy_continuous_problem.toy_continuous_problem": [[221, 1, 1, "", "ToyContinuousProblem"]], "poli.objective_repository.toy_continuous_problem.toy_continuous_problem.ToyContinuousProblem": [[221, 2, 1, "", "__init__"]], "poli.objective_repository.white_noise": [[223, 0, 0, "-", "register"]], "poli.objective_repository.white_noise.register": [[224, 1, 1, "", "WhiteNoiseBlackBox"], [225, 1, 1, "", "WhiteNoiseProblemFactory"]], "poli.objective_repository.white_noise.register.WhiteNoiseBlackBox": [[224, 2, 1, "", "__init__"], [224, 2, 1, "", "_black_box"]], "poli.objective_repository.white_noise.register.WhiteNoiseProblemFactory": [[225, 2, 1, "", "__init__"]], "poli.tests": [[228, 0, 0, "-", "docs_examples"], [236, 0, 0, "-", "registry"], [255, 0, 0, "-", "test_minimal_working_example"], [257, 0, 0, "-", "test_seeding"], [259, 0, 0, "-", "util"]], "poli.tests.docs_examples": [[229, 0, 0, "-", "test_objective_functions"]], "poli.tests.docs_examples.test_objective_functions": [[230, 5, 1, "", "test_aloha_example"], [231, 5, 1, "", "test_logp_example"], [233, 5, 1, "", "test_qed_example"], [235, 5, 1, "", "test_white_noise_example"]], "poli.tests.registry": [[237, 0, 0, "-", "basic_objectives"], [242, 0, 0, "-", "chemistry"], [244, 0, 0, "-", "proteins"], [248, 0, 0, "-", "test_basic_loop_without_create"], [249, 0, 0, "-", "test_force_isolation"], [251, 0, 0, "-", "toy_continuous_problems"]], "poli.tests.registry.basic_objectives": [[238, 0, 0, "-", "test_basic_objectives"]], "poli.tests.registry.basic_objectives.test_basic_objectives": [[239, 5, 1, "", "test_registering_aloha"], [240, 5, 1, "", "test_registering_white_noise"]], "poli.tests.registry.toy_continuous_problems": [[252, 0, 0, "-", "test_embedding_problems_into_higher_dims"]], "poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims": [[253, 5, 1, "", "test_embed_camelback_into_high_dimensions"]], "poli.tests.test_minimal_working_example": [[256, 5, 1, "", "test_minimal_working_example"]], "poli.tests.test_seeding": [[258, 5, 1, "", "test_seeding_in_white_noise"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"]}, "titleterms": {"poli": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 266, 267, 268, 292, 293, 296], "core": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 291], "abstract_black_box": [2, 3, 4], "abstractblackbox": 3, "negativeblackbox": 4, "abstract_problem_factori": [5, 6, 7], "abstractproblemfactori": 6, "metaproblemfactori": 7, "chemistri": [8, 9, 10, 38, 39, 40, 41, 42, 43, 44, 242, 243], "tdc_black_box": [9, 10], "tdcblackbox": 10, "except": [11, 12, 13], "budgetexhaustedexcept": 12, "poliexcept": 13, "multi_objective_black_box": [14, 15], "multiobjectiveblackbox": 15, "problem_setup_inform": [16, 17], "problemsetupinform": 17, "protein": [18, 19, 20, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 244, 245, 246, 247, 268, 270, 272, 276, 277, 278, 289], "foldx_black_box": [19, 20], "foldxblackbox": 20, "registri": [21, 22, 23, 24, 25, 26, 27, 28, 29, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 296], "delete_observer_run_script": 22, "delete_problem": 23, "get_problem_factori": 24, "get_problem": 25, "register_problem": 26, "register_problem_from_repositori": 27, "set_observ": 28, "set_observer_run_script": 29, "util": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 259, 260, 261], "abstract_observ": [31, 32], "abstractobserv": 32, "batch": [35, 36, 37, 290], "batch_input": [36, 37], "string_to_molecul": [39, 40, 41, 42, 43, 44], "selfies_to_molecul": 40, "smiles_to_molecul": 41, "strings_to_molecul": 42, "translate_selfies_to_smil": 43, "translate_smiles_to_selfi": 44, "external_observ": [45, 46], "externalobserv": 46, "file": [47, 48, 49, 50, 51, 52, 270, 275, 277, 278, 282], "download_files_from_github": [48, 49, 50], "download_file_from_github_repositori": 49, "get_sha_for_tag": 50, "integr": [51, 52], "compute_md5_from_filepath": 52, "inter_process_commun": [53, 54, 55, 56], "process_wrapp": [54, 55, 56], "processwrapp": 55, "get_connect": 56, "objective_manag": [57, 58, 59, 60], "make_run_script": [58, 59, 60], "make_observer_script": 59, "observer_wrapp": [61, 62], "start_observer_process": 62, "default": 64, "foldx": [65, 66, 269, 276, 277, 278], "foldxinterfac": 66, "mutat": [67, 68, 69, 70, 270, 289, 303], "edits_between_str": 68, "find_closest_wildtype_pdb_file_to_mut": 69, "mutations_from_wildtype_residues_and_mut": 70, "pdb_pars": [71, 72, 73, 74], "parse_pdb_as_residue_str": 72, "parse_pdb_as_residu": 73, "parse_pdb_as_structur": 74, "seed": [84, 85, 86, 87], "seed_numpi": 86, "seed_python": 87, "object": [88, 89, 90, 91, 268, 272, 273, 285, 286, 287, 289, 293, 294, 295, 296], "dynamically_instanti": 89, "parse_factory_kwarg": 90, "run": [91, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 294, 297, 298, 301, 302, 303, 304], "objective_factori": [92, 93, 94, 95, 96], "externalblackbox": 93, "creat": [94, 106, 275, 282, 286, 293, 296], "load_config": 95, "start": [96, 267, 268], "objective_repositori": [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225], "aloha": [98, 99, 100, 101, 273, 291, 295], "regist": [99, 100, 101, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 118, 119, 120, 123, 124, 125, 127, 128, 129, 159, 160, 161, 163, 164, 165, 167, 168, 169, 171, 173, 174, 175, 177, 178, 179, 181, 183, 184, 185, 217, 218, 219, 223, 224, 225, 265, 288, 289, 295, 296], "alohablackbox": 100, "alohaproblemfactori": 101, "dockstr": [102, 103, 104, 105, 274], "dockstringblackbox": 104, "dockstringproblemfactori": 105, "drd3_dock": [106, 107, 108, 109], "drd3blackbox": 108, "drd3problemfactori": 109, "foldx_rfp_lambo": [110, 111, 112, 113, 114, 115], "config": 112, "rfpwrapper": 113, "rfpwrapperfactori": 114, "get_config": 115, "foldx_sasa": [116, 117, 118, 119, 120], "foldx_util": [117, 122], "foldxsasablackbox": 119, "foldxsasaproblemfactori": 120, "foldx_stabl": [121, 122, 123, 124, 125], "foldxstabilityblackbox": 124, "foldxstabilityproblemfactori": 125, "foldx_stability_and_sasa": [126, 127, 128, 129], "foldxstabilityandsasablackbox": 128, "foldxstabilityandsasaproblemfactori": 129, "gfp_cba": [130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "abstract_vae_wrapp": [131, 132], "abstractvaewrapp": 132, "cbas_alphabet_preprocess": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "convert_aas_to_idx_arrai": 134, "convert_idx_array_to_aa": 135, "convert_mutations_to_sequ": 136, "get_argmax": 137, "get_balaji_predict": 138, "get_experimental_x_i": 139, "get_gfp_x_y_aa": 140, "get_gfp_base_seq": 141, "get_sampl": 142, "one_hot_encode_aa": 143, "one_hot_encode_aa_arrai": 144, "one_hot_encode_dna": 145, "partition_data": 146, "read_gfp_data": 147, "cbas_wrapp": [148, 149, 150, 151], "cbasvaewrapp": 149, "convertedtorchvaedecod": 150, "convertedtorchvaeencod": 151, "make_va": [153, 154, 155, 156, 157, 158], "baseva": 154, "simpleva": 155, "build_va": 156, "identity_loss": 157, "summed_categorical_crossentropi": 158, "gfpcbasblackbox": 160, "gfpcbasproblemfactori": 161, "gfp_select": [162, 163, 164, 165], "gfpblackbox": 164, "gfpselectionproblemfactori": 165, "penalized_logp_lambo": [166, 167, 168, 169], "penalizedlogplamboblackbox": 168, "penalizedlogplamboproblemfactori": 169, "rasp": [75, 76, 77, 78, 79, 80, 81, 82, 83, 170, 171], "rdkit_logp": [172, 173, 174, 175], "logpblackbox": 174, "logpproblemfactori": 175, "rdkit_q": [176, 177, 178, 179], "qedblackbox": 178, "qedproblemfactori": 179, "sa_tdc": [182, 183, 184, 185], "sablackbox": 184, "saproblemfactori": 185, "super_mario_bro": [186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "level_util": [187, 188, 189, 190, 191, 192, 193, 194, 195], "add_padding_to_level": 188, "clean_level": 189, "level_to_arrai": 190, "level_to_list": 191, "levels_to_onehot": 192, "onehot_to_level": 193, "tensor_to_sim_level": 194, "vector": 195, "model": [196, 197, 198], "vaemario": 197, "load_example_model": 198, "toy_continuous_problem": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 251, 252, 253, 254], "definit": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "ackley_function_01": 201, "alpine_01": 202, "alpine_02": 203, "bent_cigar": 204, "brown": 205, "camelback_2d": 206, "chung_reynold": 207, "cosine_mixtur": 208, "cross_in_trai": 209, "deb_01": 210, "deb_02": 211, "deflected_corrugated_spr": 212, "easom": 213, "egg_hold": 214, "shifted_spher": 215, "styblinski_tang": 216, "toycontinuousblackbox": 218, "toycontinuousproblemfactori": 219, "toycontinuousproblem": 221, "white_nois": [222, 223, 224, 225], "whitenoiseblackbox": 224, "whitenoiseproblemfactori": 225, "registered_object": 226, "test": [227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 267], "docs_exampl": [228, 229, 230, 231, 232, 233, 234, 235], "test_objective_funct": [229, 230, 231, 232, 233, 234, 235], "test_aloha_exampl": 230, "test_logp_exampl": 231, "test_logp_example_using_str": 232, "test_qed_exampl": 233, "test_qed_example_using_str": 234, "test_white_noise_exampl": 235, "basic_object": [237, 238, 239, 240, 241], "test_basic_object": [238, 239, 240], "test_registering_aloha": 239, "test_registering_white_nois": 240, "test_embedding_problems_into_higher_dim": [252, 253], "test_embed_camelback_into_high_dimens": 253, "test_minimal_working_exampl": [255, 256], "test_seed": [257, 258], "test_seeding_in_white_nois": 258, "api": 263, "document": 263, "refer": [264, 304], "ad": [265, 266], "new": [265, 266], "problem": [265, 266, 268, 272, 286, 289, 290, 295, 296], "repositori": 265, "The": [265, 291, 293], "structur": 265, "A": 265, "gener": 265, "py": 265, "environ": [106, 265, 275, 276, 279, 282, 296], "yml": [265, 275, 282], "why": [265, 296], "conda": [265, 267, 296], "your": [265, 267, 293, 296], "instal": [106, 265, 267, 269, 275], "option": 265, "make": [265, 275], "avail": 265, "depend": [265, 294, 296], "ar": [265, 270], "met": 265, "submit": [265, 266], "pull": [265, 266], "request": [265, 266], "black": [268, 294, 296], "box": [268, 294, 296], "optim": [266, 268, 283, 289, 293, 295, 297, 300, 301, 304], "algorithm": [268, 299, 304], "get": [267, 268], "local": [], "colab": [], "first": 267, "script": 267, "conclus": [270, 291, 293, 294, 295, 296], "discret": [268, 296, 302], "sequenc": [], "us": [267, 268, 275, 276, 277, 278, 279, 282, 289, 293], "function": [268, 272, 273, 285, 286, 287, 289, 293, 294, 295, 296], "toi": [268, 272, 286], "small": [268, 272], "molecul": [268, 272], "contribut": 268, "solver": [266, 268, 289, 290, 293, 295], "comput": 270, "energi": 270, "singl": 270, "python": [270, 276, 279, 296], "prerequisit": [106, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 295], "set": [270, 275], "up": 270, "folder": [270, 275], "download": [270, 275], "pdb": 270, "repair": [270, 277, 278], "what": [270, 290, 293], "other": [268, 270, 272, 279], "pars": 270, "wildtyp": 270, "defin": [270, 289, 290, 291, 296], "s": [270, 296], "sasa": [270, 276], "score": 270, "rapid": 271, "stabil": [271, 276, 278, 289], "predict": 271, "how": [271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 292, 297, 298, 301, 302, 303, 304], "warn": 271, "further": 271, "read": [271, 294], "all": [272, 275, 291], "about": [273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 290, 297, 298, 301, 302, 303, 304], "drd3": 275, "dock": 275, "tdc": [275, 282], "autodock": [106, 275], "vina": [106, 275], "add": [275, 296], "binari": 275, "path": [275, 296], "adfr": [106, 275], "suit": [106, 275], "prepare_receptor": 275, "poli__lambo": [106, 275, 282], "from": [275, 282], "sure": 275, "you": [275, 277, 278, 294], "re": 275, "rfp": 276, "lambo": [276, 279], "solvent": 277, "access": [277, 282], "we": [277, 278], "can": [277, 278], "penal": 279, "logp": [279, 280], "keyword": 279, "argument": 279, "log": [280, 291], "solubl": 280, "quantit": 281, "estim": 281, "druglik": 281, "qed": 281, "synthet": 282, "jump": 283, "super": 283, "mario": 283, "bro": 283, "therapeut": 284, "data": 284, "common": 284, "oracl": 284, "name": 285, "see": [285, 297, 302], "also": 285, "continu": 286, "low": 286, "intrins": 286, "dimension": 286, "white": 287, "nois": 287, "observ": [288, 291], "isol": [288, 294], "process": 288, "random": [289, 303], "mrogu": [], "randommut": [266, 289, 290], "check": 289, "result": 289, "poli_baselin": 290, "an": [266, 290, 291, 295, 296], "abstract": [266, 290, 291], "candid": 290, "exampl": [266, 290, 291, 296], "want": 291, "more": [291, 294, 296, 297, 302], "complex": 291, "instanc": [291, 295], "simpl": 291, "initi": 291, "put": 291, "togeth": 291, "coupl": 291, "queri": 291, "dive": 292, "deeper": 292, "doe": 292, "work": [268, 292], "under": 292, "hood": 292, "content": [292, 293], "usual": 293, "develop": 293, "loop": 293, "identifi": 293, "own": 293, "Is": 295, "factori": 296, "entir": 296, "need": 296, "where": 296, "thi": 296, "call": 296, "cma": 298, "es": 298, "graph": 299, "genet": 299, "latent": 300, "space": 300, "bayesian": [297, 300, 301], "nsga": 302, "2": 302, "inner_rasp": [76, 77, 78, 79, 80, 81], "prismdata": 77, "cavity_model": 78, "helper": 79, "visual": 81, "load_model": 82, "rasp_interfac": 83, "test_budget_exhaust": 241, "test_chemistry_object": 243, "test_foldx": 245, "test_rasp": 247, "test_instancing_of_toy_continuous_problem": 254, "test_foldx_interfac": 260, "test_protein_util": 261, "align": [33, 34], "is_align": 34, "gfp_gp": 152, "test_basic_loop_without_cr": 248, "test_force_isol": 249, "librari": 268, "baselin": [266, 267], "mroug": 289, "test_foldx_rfp_lambo": 246, "test_passing_array_of_str": 250, "rfp_foldx_stability_and_sasa": [180, 181], "templat": 304, "line": 301, "when": 294, "have": 294, "right": 294, "run_pipelin": 80, "cite": 268, "relev": 268}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 56}})