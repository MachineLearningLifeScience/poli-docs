Search.setIndex({"docnames": ["_autosummary/poli", "_autosummary/poli.core", "_autosummary/poli.core.abstract_black_box", "_autosummary/poli.core.abstract_black_box.AbstractBlackBox", "_autosummary/poli.core.abstract_black_box.NegativeBlackBox", "_autosummary/poli.core.abstract_isolated_function", "_autosummary/poli.core.abstract_problem_factory", "_autosummary/poli.core.abstract_problem_factory.AbstractProblemFactory", "_autosummary/poli.core.abstract_problem_factory.MetaProblemFactory", "_autosummary/poli.core.black_box_information", "_autosummary/poli.core.chemistry", "_autosummary/poli.core.chemistry.tdc_black_box", "_autosummary/poli.core.chemistry.tdc_black_box.TDCBlackBox", "_autosummary/poli.core.chemistry.tdc_isolated_function", "_autosummary/poli.core.exceptions", "_autosummary/poli.core.exceptions.BudgetExhaustedException", "_autosummary/poli.core.exceptions.PoliException", "_autosummary/poli.core.multi_objective_black_box", "_autosummary/poli.core.multi_objective_black_box.MultiObjectiveBlackBox", "_autosummary/poli.core.problem", "_autosummary/poli.core.problem_setup_information", "_autosummary/poli.core.problem_setup_information.ProblemSetupInformation", "_autosummary/poli.core.proteins", "_autosummary/poli.core.proteins.foldx_black_box", "_autosummary/poli.core.proteins.foldx_black_box.FoldxBlackBox", "_autosummary/poli.core.proteins.foldx_isolated_function", "_autosummary/poli.core.registry", "_autosummary/poli.core.registry.delete_observer_run_script", "_autosummary/poli.core.registry.delete_problem", "_autosummary/poli.core.registry.get_problem_factories", "_autosummary/poli.core.registry.get_problems", "_autosummary/poli.core.registry.register_problem", "_autosummary/poli.core.registry.register_problem_from_repository", "_autosummary/poli.core.registry.set_observer", "_autosummary/poli.core.registry.set_observer_run_script", "_autosummary/poli.core.util", "_autosummary/poli.core.util.abstract_observer", "_autosummary/poli.core.util.abstract_observer.AbstractObserver", "_autosummary/poli.core.util.alignment", "_autosummary/poli.core.util.alignment.is_aligned", "_autosummary/poli.core.util.batch", "_autosummary/poli.core.util.batch.batch_input", "_autosummary/poli.core.util.batch.batch_input.batched", "_autosummary/poli.core.util.chemistry", "_autosummary/poli.core.util.chemistry.string_to_molecule", "_autosummary/poli.core.util.chemistry.string_to_molecule.selfies_to_molecules", "_autosummary/poli.core.util.chemistry.string_to_molecule.smiles_to_molecules", "_autosummary/poli.core.util.chemistry.string_to_molecule.strings_to_molecules", "_autosummary/poli.core.util.chemistry.string_to_molecule.translate_selfies_to_smiles", "_autosummary/poli.core.util.chemistry.string_to_molecule.translate_smiles_to_selfies", "_autosummary/poli.core.util.external_observer", "_autosummary/poli.core.util.external_observer.ExternalObserver", "_autosummary/poli.core.util.files", "_autosummary/poli.core.util.files.download_files_from_github", "_autosummary/poli.core.util.files.download_files_from_github.download_file_from_github_repository", "_autosummary/poli.core.util.files.download_files_from_github.get_sha_for_tag", "_autosummary/poli.core.util.files.integrity", "_autosummary/poli.core.util.files.integrity.compute_md5_from_filepath", "_autosummary/poli.core.util.inter_process_communication", "_autosummary/poli.core.util.inter_process_communication.process_wrapper", "_autosummary/poli.core.util.inter_process_communication.process_wrapper.ProcessWrapper", "_autosummary/poli.core.util.inter_process_communication.process_wrapper.get_connection", "_autosummary/poli.core.util.isolation", "_autosummary/poli.core.util.isolation.external_black_box", "_autosummary/poli.core.util.isolation.external_function", "_autosummary/poli.core.util.isolation.instancing", "_autosummary/poli.core.util.isolation.isolated_black_box", "_autosummary/poli.core.util.objective_management", "_autosummary/poli.core.util.objective_management.make_run_script", "_autosummary/poli.core.util.objective_management.make_run_script.make_observer_script", "_autosummary/poli.core.util.objective_management.make_run_script.make_run_script", "_autosummary/poli.core.util.observer_wrapper", "_autosummary/poli.core.util.observer_wrapper.start_observer_process", "_autosummary/poli.core.util.proteins", "_autosummary/poli.core.util.proteins.defaults", "_autosummary/poli.core.util.proteins.foldx", "_autosummary/poli.core.util.proteins.foldx.FoldxInterface", "_autosummary/poli.core.util.proteins.mutations", "_autosummary/poli.core.util.proteins.mutations.edits_between_strings", "_autosummary/poli.core.util.proteins.mutations.find_closest_wildtype_pdb_file_to_mutant", "_autosummary/poli.core.util.proteins.mutations.mutations_from_wildtype_residues_and_mutant", "_autosummary/poli.core.util.proteins.pdb_parsing", "_autosummary/poli.core.util.proteins.pdb_parsing.parse_pdb_as_residue_strings", "_autosummary/poli.core.util.proteins.pdb_parsing.parse_pdb_as_residues", "_autosummary/poli.core.util.proteins.pdb_parsing.parse_pdb_as_structure", "_autosummary/poli.core.util.proteins.rasp", "_autosummary/poli.core.util.proteins.rasp.inner_rasp", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.PrismData", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.cavity_model", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.helpers", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.run_pipeline", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.visualization", "_autosummary/poli.core.util.proteins.rasp.load_models", "_autosummary/poli.core.util.proteins.rasp.rasp_interface", "_autosummary/poli.core.util.seeding", "_autosummary/poli.core.util.seeding.seeding", "_autosummary/poli.core.util.seeding.seeding.seed_numpy", "_autosummary/poli.core.util.seeding.seeding.seed_python", "_autosummary/poli.objective", "_autosummary/poli.objective.dynamically_instantiate", "_autosummary/poli.objective.parse_factory_kwargs", "_autosummary/poli.objective.run", "_autosummary/poli.objective_factory", "_autosummary/poli.objective_factory.ExternalBlackBox", "_autosummary/poli.objective_factory.create", "_autosummary/poli.objective_factory.load_config", "_autosummary/poli.objective_factory.start", "_autosummary/poli.objective_repository", "_autosummary/poli.objective_repository.aloha", "_autosummary/poli.objective_repository.aloha.register", "_autosummary/poli.objective_repository.aloha.register.AlohaBlackBox", "_autosummary/poli.objective_repository.aloha.register.AlohaProblemFactory", "_autosummary/poli.objective_repository.dockstring", "_autosummary/poli.objective_repository.dockstring.information", "_autosummary/poli.objective_repository.dockstring.isolated_function", "_autosummary/poli.objective_repository.dockstring.register", "_autosummary/poli.objective_repository.dockstring.register.DockstringBlackBox", "_autosummary/poli.objective_repository.dockstring.register.DockstringProblemFactory", "_autosummary/poli.objective_repository.drd3_docking", "_autosummary/poli.objective_repository.drd3_docking.information", "_autosummary/poli.objective_repository.drd3_docking.isolated_function", "_autosummary/poli.objective_repository.drd3_docking.register", "_autosummary/poli.objective_repository.drd3_docking.register.DRD3BlackBox", "_autosummary/poli.objective_repository.drd3_docking.register.DRD3ProblemFactory", "_autosummary/poli.objective_repository.foldx_rfp_lambo", "_autosummary/poli.objective_repository.foldx_rfp_lambo.information", "_autosummary/poli.objective_repository.foldx_rfp_lambo.isolated_function", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.Config", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.RFPWrapper", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.RFPWrapperFactory", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.get_config", "_autosummary/poli.objective_repository.foldx_sasa", "_autosummary/poli.objective_repository.foldx_sasa.foldx_utils", "_autosummary/poli.objective_repository.foldx_sasa.information", "_autosummary/poli.objective_repository.foldx_sasa.isolated_function", "_autosummary/poli.objective_repository.foldx_sasa.register", "_autosummary/poli.objective_repository.foldx_sasa.register.FoldXSASABlackBox", "_autosummary/poli.objective_repository.foldx_sasa.register.FoldXSASAProblemFactory", "_autosummary/poli.objective_repository.foldx_stability", "_autosummary/poli.objective_repository.foldx_stability.foldx_utils", "_autosummary/poli.objective_repository.foldx_stability.information", "_autosummary/poli.objective_repository.foldx_stability.isolated_function", "_autosummary/poli.objective_repository.foldx_stability.register", "_autosummary/poli.objective_repository.foldx_stability.register.FoldXStabilityBlackBox", "_autosummary/poli.objective_repository.foldx_stability.register.FoldXStabilityProblemFactory", "_autosummary/poli.objective_repository.foldx_stability_and_sasa", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.information", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.isolated_function", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.register", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASABlackBox", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASAProblemFactory", "_autosummary/poli.objective_repository.gfp_cbas", "_autosummary/poli.objective_repository.gfp_cbas.abstract_vae_wrapper", "_autosummary/poli.objective_repository.gfp_cbas.abstract_vae_wrapper.AbstractVAEWrapper", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_aas_to_idx_array", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_idx_array_to_aas", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_mutations_to_sequence", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_argmax", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_balaji_predictions", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_experimental_X_y", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_gfp_X_y_aa", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_gfp_base_seq", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_samples", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_aa", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_aa_array", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_dna", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.partition_data", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.read_gfp_data", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.CBASVAEWrapper", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeDecoder", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeEncoder", "_autosummary/poli.objective_repository.gfp_cbas.gfp_gp", "_autosummary/poli.objective_repository.gfp_cbas.information", "_autosummary/poli.objective_repository.gfp_cbas.isolated_function", "_autosummary/poli.objective_repository.gfp_cbas.make_vae", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.BaseVAE", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.SimpleVAE", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.build_vae", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.identity_loss", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.summed_categorical_crossentropy", "_autosummary/poli.objective_repository.gfp_cbas.register", "_autosummary/poli.objective_repository.gfp_cbas.register.GFPCBasBlackBox", "_autosummary/poli.objective_repository.gfp_cbas.register.GFPCBasProblemFactory", "_autosummary/poli.objective_repository.gfp_select", "_autosummary/poli.objective_repository.gfp_select.information", "_autosummary/poli.objective_repository.gfp_select.isolated_function", "_autosummary/poli.objective_repository.gfp_select.register", "_autosummary/poli.objective_repository.gfp_select.register.GFPBlackBox", "_autosummary/poli.objective_repository.gfp_select.register.GFPSelectionProblemFactory", "_autosummary/poli.objective_repository.penalized_logp_lambo", "_autosummary/poli.objective_repository.penalized_logp_lambo.information", "_autosummary/poli.objective_repository.penalized_logp_lambo.isolated_function", "_autosummary/poli.objective_repository.penalized_logp_lambo.register", "_autosummary/poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboBlackBox", "_autosummary/poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboProblemFactory", "_autosummary/poli.objective_repository.rasp", "_autosummary/poli.objective_repository.rasp.information", "_autosummary/poli.objective_repository.rasp.isolated_function", "_autosummary/poli.objective_repository.rasp.register", "_autosummary/poli.objective_repository.rdkit_logp", "_autosummary/poli.objective_repository.rdkit_logp.information", "_autosummary/poli.objective_repository.rdkit_logp.register", "_autosummary/poli.objective_repository.rdkit_logp.register.LogPBlackBox", "_autosummary/poli.objective_repository.rdkit_logp.register.LogPProblemFactory", "_autosummary/poli.objective_repository.rdkit_qed", "_autosummary/poli.objective_repository.rdkit_qed.information", "_autosummary/poli.objective_repository.rdkit_qed.register", "_autosummary/poli.objective_repository.rdkit_qed.register.QEDBlackBox", "_autosummary/poli.objective_repository.rdkit_qed.register.QEDProblemFactory", "_autosummary/poli.objective_repository.rfp_foldx_stability_and_sasa", "_autosummary/poli.objective_repository.rfp_foldx_stability_and_sasa.information", "_autosummary/poli.objective_repository.rfp_foldx_stability_and_sasa.register", "_autosummary/poli.objective_repository.sa_tdc", "_autosummary/poli.objective_repository.sa_tdc.information", "_autosummary/poli.objective_repository.sa_tdc.isolated_function", "_autosummary/poli.objective_repository.sa_tdc.register", "_autosummary/poli.objective_repository.sa_tdc.register.SABlackBox", "_autosummary/poli.objective_repository.sa_tdc.register.SAProblemFactory", "_autosummary/poli.objective_repository.super_mario_bros", "_autosummary/poli.objective_repository.super_mario_bros.information", "_autosummary/poli.objective_repository.super_mario_bros.level_utils", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.add_padding_to_level", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.clean_level", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.level_to_array", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.level_to_list", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.levels_to_onehot", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.onehot_to_levels", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.tensor_to_sim_level", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.vectorized", "_autosummary/poli.objective_repository.super_mario_bros.model", "_autosummary/poli.objective_repository.super_mario_bros.model.VAEMario", "_autosummary/poli.objective_repository.super_mario_bros.model.load_example_model", "_autosummary/poli.objective_repository.super_mario_bros.register", "_autosummary/poli.objective_repository.toy_continuous_problem", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.ackley_function_01", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.alpine_01", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.alpine_02", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.bent_cigar", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.brown", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.camelback_2d", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.chung_reynolds", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.cosine_mixture", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.cross_in_tray", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.deb_01", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.deb_02", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.deflected_corrugated_spring", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.easom", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.egg_holder", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.shifted_sphere", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.styblinski_tang", "_autosummary/poli.objective_repository.toy_continuous_problem.information", "_autosummary/poli.objective_repository.toy_continuous_problem.register", "_autosummary/poli.objective_repository.toy_continuous_problem.register.ToyContinuousBlackBox", "_autosummary/poli.objective_repository.toy_continuous_problem.register.ToyContinuousProblemFactory", "_autosummary/poli.objective_repository.toy_continuous_problem.toy_continuous_problem", "_autosummary/poli.objective_repository.toy_continuous_problem.toy_continuous_problem.ToyContinuousProblem", "_autosummary/poli.objective_repository.white_noise", "_autosummary/poli.objective_repository.white_noise.register", "_autosummary/poli.objective_repository.white_noise.register.WhiteNoiseBlackBox", "_autosummary/poli.objective_repository.white_noise.register.WhiteNoiseProblemFactory", "_autosummary/poli.registered_objectives", "_autosummary/poli.tests", "_autosummary/poli.tests.docs_examples", "_autosummary/poli.tests.docs_examples.test_objective_functions", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_aloha_example", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_logp_example", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_logp_example_using_strings", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_qed_example", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_qed_example_using_strings", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_white_noise_example", "_autosummary/poli.tests.registry", "_autosummary/poli.tests.registry.basic_objectives", "_autosummary/poli.tests.registry.basic_objectives.test_basic_objectives", "_autosummary/poli.tests.registry.basic_objectives.test_basic_objectives.test_registering_aloha", "_autosummary/poli.tests.registry.basic_objectives.test_basic_objectives.test_registering_white_noise", "_autosummary/poli.tests.registry.basic_objectives.test_budget_exhaustion", "_autosummary/poli.tests.registry.chemistry", "_autosummary/poli.tests.registry.chemistry.test_chemistry_objectives", "_autosummary/poli.tests.registry.proteins", "_autosummary/poli.tests.registry.proteins.test_foldx", "_autosummary/poli.tests.registry.proteins.test_foldx_rfp_lambo", "_autosummary/poli.tests.registry.proteins.test_rasp", "_autosummary/poli.tests.registry.test_basic_loop_without_create", "_autosummary/poli.tests.registry.test_force_isolation", "_autosummary/poli.tests.registry.test_instancing_black_boxes_alone", "_autosummary/poli.tests.registry.test_passing_array_of_strings", "_autosummary/poli.tests.registry.toy_continuous_problems", "_autosummary/poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims", "_autosummary/poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims.test_embed_camelback_into_high_dimensions", "_autosummary/poli.tests.registry.toy_continuous_problems.test_instancing_of_toy_continuous_problems", "_autosummary/poli.tests.test_minimal_working_example", "_autosummary/poli.tests.test_minimal_working_example.test_minimal_working_example", "_autosummary/poli.tests.test_seeding", "_autosummary/poli.tests.test_seeding.test_seeding_in_white_noise", "_autosummary/poli.tests.util", "_autosummary/poli.tests.util.test_foldx_interface", "_autosummary/poli.tests.util.test_protein_utilities", "_templates/custom-module-template", "api", "bibliography", "contributing/a_new_problem", "contributing/a_new_solver", "getting_started/getting_started", "index", "understanding_foldx/00-installing-foldx", "understanding_foldx/01-single-mutation-using-foldx/index", "using_poli/objective_repository/RaSP", "using_poli/objective_repository/all_objectives", "using_poli/objective_repository/aloha", "using_poli/objective_repository/dockstring", "using_poli/objective_repository/drd3_docking", "using_poli/objective_repository/foldx_rfp_lambo", "using_poli/objective_repository/foldx_sasa", "using_poli/objective_repository/foldx_stability", "using_poli/objective_repository/penalized_logp_lambo", "using_poli/objective_repository/rdkit_logp", "using_poli/objective_repository/rdkit_qed", "using_poli/objective_repository/sa_tdc", "using_poli/objective_repository/super_mario_bros", "using_poli/objective_repository/tdc_oracles", "using_poli/objective_repository/template", "using_poli/objective_repository/toy_continuous_problems", "using_poli/objective_repository/white_noise", "using_poli/observers/registering_an_observer", "using_poli/optimization_examples/protein-stability-foldx/optimizing_protein_stability", "using_poli/the_basics/defining_a_problem_solver", "using_poli/the_basics/defining_an_observer", "using_poli/the_basics/diving_deeper", "using_poli/the_basics/intro_to_poli", "using_poli/the_basics/isolation", "using_poli/the_basics/optimizing_an_objective_function", "using_poli/the_basics/registering_an_objective_function", "using_poli_baselines/bayesian_optimization", "using_poli_baselines/cma_es", "using_poli_baselines/graph_ga", "using_poli_baselines/latent_space_bo", "using_poli_baselines/line_bayesian_optimization", "using_poli_baselines/nsga_2", "using_poli_baselines/random_mutations", "using_poli_baselines/template"], "filenames": ["_autosummary/poli.rst", "_autosummary/poli.core.rst", "_autosummary/poli.core.abstract_black_box.rst", "_autosummary/poli.core.abstract_black_box.AbstractBlackBox.rst", "_autosummary/poli.core.abstract_black_box.NegativeBlackBox.rst", "_autosummary/poli.core.abstract_isolated_function.rst", "_autosummary/poli.core.abstract_problem_factory.rst", "_autosummary/poli.core.abstract_problem_factory.AbstractProblemFactory.rst", "_autosummary/poli.core.abstract_problem_factory.MetaProblemFactory.rst", "_autosummary/poli.core.black_box_information.rst", "_autosummary/poli.core.chemistry.rst", "_autosummary/poli.core.chemistry.tdc_black_box.rst", "_autosummary/poli.core.chemistry.tdc_black_box.TDCBlackBox.rst", "_autosummary/poli.core.chemistry.tdc_isolated_function.rst", "_autosummary/poli.core.exceptions.rst", "_autosummary/poli.core.exceptions.BudgetExhaustedException.rst", "_autosummary/poli.core.exceptions.PoliException.rst", "_autosummary/poli.core.multi_objective_black_box.rst", "_autosummary/poli.core.multi_objective_black_box.MultiObjectiveBlackBox.rst", "_autosummary/poli.core.problem.rst", "_autosummary/poli.core.problem_setup_information.rst", "_autosummary/poli.core.problem_setup_information.ProblemSetupInformation.rst", "_autosummary/poli.core.proteins.rst", "_autosummary/poli.core.proteins.foldx_black_box.rst", "_autosummary/poli.core.proteins.foldx_black_box.FoldxBlackBox.rst", "_autosummary/poli.core.proteins.foldx_isolated_function.rst", "_autosummary/poli.core.registry.rst", "_autosummary/poli.core.registry.delete_observer_run_script.rst", "_autosummary/poli.core.registry.delete_problem.rst", "_autosummary/poli.core.registry.get_problem_factories.rst", "_autosummary/poli.core.registry.get_problems.rst", "_autosummary/poli.core.registry.register_problem.rst", "_autosummary/poli.core.registry.register_problem_from_repository.rst", "_autosummary/poli.core.registry.set_observer.rst", "_autosummary/poli.core.registry.set_observer_run_script.rst", "_autosummary/poli.core.util.rst", "_autosummary/poli.core.util.abstract_observer.rst", "_autosummary/poli.core.util.abstract_observer.AbstractObserver.rst", "_autosummary/poli.core.util.alignment.rst", "_autosummary/poli.core.util.alignment.is_aligned.rst", "_autosummary/poli.core.util.batch.rst", "_autosummary/poli.core.util.batch.batch_input.rst", "_autosummary/poli.core.util.batch.batch_input.batched.rst", "_autosummary/poli.core.util.chemistry.rst", "_autosummary/poli.core.util.chemistry.string_to_molecule.rst", "_autosummary/poli.core.util.chemistry.string_to_molecule.selfies_to_molecules.rst", "_autosummary/poli.core.util.chemistry.string_to_molecule.smiles_to_molecules.rst", "_autosummary/poli.core.util.chemistry.string_to_molecule.strings_to_molecules.rst", "_autosummary/poli.core.util.chemistry.string_to_molecule.translate_selfies_to_smiles.rst", "_autosummary/poli.core.util.chemistry.string_to_molecule.translate_smiles_to_selfies.rst", "_autosummary/poli.core.util.external_observer.rst", "_autosummary/poli.core.util.external_observer.ExternalObserver.rst", "_autosummary/poli.core.util.files.rst", "_autosummary/poli.core.util.files.download_files_from_github.rst", "_autosummary/poli.core.util.files.download_files_from_github.download_file_from_github_repository.rst", "_autosummary/poli.core.util.files.download_files_from_github.get_sha_for_tag.rst", "_autosummary/poli.core.util.files.integrity.rst", "_autosummary/poli.core.util.files.integrity.compute_md5_from_filepath.rst", "_autosummary/poli.core.util.inter_process_communication.rst", "_autosummary/poli.core.util.inter_process_communication.process_wrapper.rst", "_autosummary/poli.core.util.inter_process_communication.process_wrapper.ProcessWrapper.rst", "_autosummary/poli.core.util.inter_process_communication.process_wrapper.get_connection.rst", "_autosummary/poli.core.util.isolation.rst", "_autosummary/poli.core.util.isolation.external_black_box.rst", "_autosummary/poli.core.util.isolation.external_function.rst", "_autosummary/poli.core.util.isolation.instancing.rst", "_autosummary/poli.core.util.isolation.isolated_black_box.rst", "_autosummary/poli.core.util.objective_management.rst", "_autosummary/poli.core.util.objective_management.make_run_script.rst", "_autosummary/poli.core.util.objective_management.make_run_script.make_observer_script.rst", "_autosummary/poli.core.util.objective_management.make_run_script.make_run_script.rst", "_autosummary/poli.core.util.observer_wrapper.rst", "_autosummary/poli.core.util.observer_wrapper.start_observer_process.rst", "_autosummary/poli.core.util.proteins.rst", "_autosummary/poli.core.util.proteins.defaults.rst", "_autosummary/poli.core.util.proteins.foldx.rst", "_autosummary/poli.core.util.proteins.foldx.FoldxInterface.rst", "_autosummary/poli.core.util.proteins.mutations.rst", "_autosummary/poli.core.util.proteins.mutations.edits_between_strings.rst", "_autosummary/poli.core.util.proteins.mutations.find_closest_wildtype_pdb_file_to_mutant.rst", "_autosummary/poli.core.util.proteins.mutations.mutations_from_wildtype_residues_and_mutant.rst", "_autosummary/poli.core.util.proteins.pdb_parsing.rst", "_autosummary/poli.core.util.proteins.pdb_parsing.parse_pdb_as_residue_strings.rst", "_autosummary/poli.core.util.proteins.pdb_parsing.parse_pdb_as_residues.rst", "_autosummary/poli.core.util.proteins.pdb_parsing.parse_pdb_as_structure.rst", "_autosummary/poli.core.util.proteins.rasp.rst", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.rst", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.PrismData.rst", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.cavity_model.rst", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.helpers.rst", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.run_pipeline.rst", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.visualization.rst", "_autosummary/poli.core.util.proteins.rasp.load_models.rst", "_autosummary/poli.core.util.proteins.rasp.rasp_interface.rst", "_autosummary/poli.core.util.seeding.rst", "_autosummary/poli.core.util.seeding.seeding.rst", "_autosummary/poli.core.util.seeding.seeding.seed_numpy.rst", "_autosummary/poli.core.util.seeding.seeding.seed_python.rst", "_autosummary/poli.objective.rst", "_autosummary/poli.objective.dynamically_instantiate.rst", "_autosummary/poli.objective.parse_factory_kwargs.rst", "_autosummary/poli.objective.run.rst", "_autosummary/poli.objective_factory.rst", "_autosummary/poli.objective_factory.ExternalBlackBox.rst", "_autosummary/poli.objective_factory.create.rst", "_autosummary/poli.objective_factory.load_config.rst", "_autosummary/poli.objective_factory.start.rst", "_autosummary/poli.objective_repository.rst", "_autosummary/poli.objective_repository.aloha.rst", "_autosummary/poli.objective_repository.aloha.register.rst", "_autosummary/poli.objective_repository.aloha.register.AlohaBlackBox.rst", "_autosummary/poli.objective_repository.aloha.register.AlohaProblemFactory.rst", "_autosummary/poli.objective_repository.dockstring.rst", "_autosummary/poli.objective_repository.dockstring.information.rst", "_autosummary/poli.objective_repository.dockstring.isolated_function.rst", "_autosummary/poli.objective_repository.dockstring.register.rst", "_autosummary/poli.objective_repository.dockstring.register.DockstringBlackBox.rst", "_autosummary/poli.objective_repository.dockstring.register.DockstringProblemFactory.rst", "_autosummary/poli.objective_repository.drd3_docking.rst", "_autosummary/poli.objective_repository.drd3_docking.information.rst", "_autosummary/poli.objective_repository.drd3_docking.isolated_function.rst", "_autosummary/poli.objective_repository.drd3_docking.register.rst", "_autosummary/poli.objective_repository.drd3_docking.register.DRD3BlackBox.rst", "_autosummary/poli.objective_repository.drd3_docking.register.DRD3ProblemFactory.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.information.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.isolated_function.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.Config.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.RFPWrapper.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.RFPWrapperFactory.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.get_config.rst", "_autosummary/poli.objective_repository.foldx_sasa.rst", "_autosummary/poli.objective_repository.foldx_sasa.foldx_utils.rst", "_autosummary/poli.objective_repository.foldx_sasa.information.rst", "_autosummary/poli.objective_repository.foldx_sasa.isolated_function.rst", "_autosummary/poli.objective_repository.foldx_sasa.register.rst", "_autosummary/poli.objective_repository.foldx_sasa.register.FoldXSASABlackBox.rst", "_autosummary/poli.objective_repository.foldx_sasa.register.FoldXSASAProblemFactory.rst", "_autosummary/poli.objective_repository.foldx_stability.rst", "_autosummary/poli.objective_repository.foldx_stability.foldx_utils.rst", "_autosummary/poli.objective_repository.foldx_stability.information.rst", "_autosummary/poli.objective_repository.foldx_stability.isolated_function.rst", "_autosummary/poli.objective_repository.foldx_stability.register.rst", "_autosummary/poli.objective_repository.foldx_stability.register.FoldXStabilityBlackBox.rst", "_autosummary/poli.objective_repository.foldx_stability.register.FoldXStabilityProblemFactory.rst", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.rst", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.information.rst", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.isolated_function.rst", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.register.rst", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASABlackBox.rst", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASAProblemFactory.rst", "_autosummary/poli.objective_repository.gfp_cbas.rst", "_autosummary/poli.objective_repository.gfp_cbas.abstract_vae_wrapper.rst", "_autosummary/poli.objective_repository.gfp_cbas.abstract_vae_wrapper.AbstractVAEWrapper.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_aas_to_idx_array.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_idx_array_to_aas.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_mutations_to_sequence.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_argmax.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_balaji_predictions.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_experimental_X_y.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_gfp_X_y_aa.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_gfp_base_seq.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_samples.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_aa.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_aa_array.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_dna.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.partition_data.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.read_gfp_data.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.CBASVAEWrapper.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeDecoder.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeEncoder.rst", "_autosummary/poli.objective_repository.gfp_cbas.gfp_gp.rst", "_autosummary/poli.objective_repository.gfp_cbas.information.rst", "_autosummary/poli.objective_repository.gfp_cbas.isolated_function.rst", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.rst", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.BaseVAE.rst", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.SimpleVAE.rst", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.build_vae.rst", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.identity_loss.rst", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.summed_categorical_crossentropy.rst", "_autosummary/poli.objective_repository.gfp_cbas.register.rst", "_autosummary/poli.objective_repository.gfp_cbas.register.GFPCBasBlackBox.rst", "_autosummary/poli.objective_repository.gfp_cbas.register.GFPCBasProblemFactory.rst", "_autosummary/poli.objective_repository.gfp_select.rst", "_autosummary/poli.objective_repository.gfp_select.information.rst", "_autosummary/poli.objective_repository.gfp_select.isolated_function.rst", "_autosummary/poli.objective_repository.gfp_select.register.rst", "_autosummary/poli.objective_repository.gfp_select.register.GFPBlackBox.rst", "_autosummary/poli.objective_repository.gfp_select.register.GFPSelectionProblemFactory.rst", "_autosummary/poli.objective_repository.penalized_logp_lambo.rst", "_autosummary/poli.objective_repository.penalized_logp_lambo.information.rst", "_autosummary/poli.objective_repository.penalized_logp_lambo.isolated_function.rst", "_autosummary/poli.objective_repository.penalized_logp_lambo.register.rst", "_autosummary/poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboBlackBox.rst", "_autosummary/poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboProblemFactory.rst", "_autosummary/poli.objective_repository.rasp.rst", "_autosummary/poli.objective_repository.rasp.information.rst", "_autosummary/poli.objective_repository.rasp.isolated_function.rst", "_autosummary/poli.objective_repository.rasp.register.rst", "_autosummary/poli.objective_repository.rdkit_logp.rst", "_autosummary/poli.objective_repository.rdkit_logp.information.rst", "_autosummary/poli.objective_repository.rdkit_logp.register.rst", "_autosummary/poli.objective_repository.rdkit_logp.register.LogPBlackBox.rst", "_autosummary/poli.objective_repository.rdkit_logp.register.LogPProblemFactory.rst", "_autosummary/poli.objective_repository.rdkit_qed.rst", "_autosummary/poli.objective_repository.rdkit_qed.information.rst", "_autosummary/poli.objective_repository.rdkit_qed.register.rst", "_autosummary/poli.objective_repository.rdkit_qed.register.QEDBlackBox.rst", "_autosummary/poli.objective_repository.rdkit_qed.register.QEDProblemFactory.rst", "_autosummary/poli.objective_repository.rfp_foldx_stability_and_sasa.rst", "_autosummary/poli.objective_repository.rfp_foldx_stability_and_sasa.information.rst", "_autosummary/poli.objective_repository.rfp_foldx_stability_and_sasa.register.rst", "_autosummary/poli.objective_repository.sa_tdc.rst", "_autosummary/poli.objective_repository.sa_tdc.information.rst", "_autosummary/poli.objective_repository.sa_tdc.isolated_function.rst", "_autosummary/poli.objective_repository.sa_tdc.register.rst", "_autosummary/poli.objective_repository.sa_tdc.register.SABlackBox.rst", "_autosummary/poli.objective_repository.sa_tdc.register.SAProblemFactory.rst", "_autosummary/poli.objective_repository.super_mario_bros.rst", "_autosummary/poli.objective_repository.super_mario_bros.information.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.add_padding_to_level.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.clean_level.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.level_to_array.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.level_to_list.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.levels_to_onehot.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.onehot_to_levels.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.tensor_to_sim_level.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.vectorized.rst", "_autosummary/poli.objective_repository.super_mario_bros.model.rst", "_autosummary/poli.objective_repository.super_mario_bros.model.VAEMario.rst", "_autosummary/poli.objective_repository.super_mario_bros.model.load_example_model.rst", "_autosummary/poli.objective_repository.super_mario_bros.register.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.ackley_function_01.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.alpine_01.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.alpine_02.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.bent_cigar.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.brown.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.camelback_2d.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.chung_reynolds.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.cosine_mixture.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.cross_in_tray.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.deb_01.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.deb_02.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.deflected_corrugated_spring.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.easom.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.egg_holder.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.shifted_sphere.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.styblinski_tang.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.information.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.register.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.register.ToyContinuousBlackBox.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.register.ToyContinuousProblemFactory.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.toy_continuous_problem.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.toy_continuous_problem.ToyContinuousProblem.rst", "_autosummary/poli.objective_repository.white_noise.rst", "_autosummary/poli.objective_repository.white_noise.register.rst", "_autosummary/poli.objective_repository.white_noise.register.WhiteNoiseBlackBox.rst", "_autosummary/poli.objective_repository.white_noise.register.WhiteNoiseProblemFactory.rst", "_autosummary/poli.registered_objectives.rst", "_autosummary/poli.tests.rst", "_autosummary/poli.tests.docs_examples.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_aloha_example.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_logp_example.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_logp_example_using_strings.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_qed_example.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_qed_example_using_strings.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_white_noise_example.rst", "_autosummary/poli.tests.registry.rst", "_autosummary/poli.tests.registry.basic_objectives.rst", "_autosummary/poli.tests.registry.basic_objectives.test_basic_objectives.rst", "_autosummary/poli.tests.registry.basic_objectives.test_basic_objectives.test_registering_aloha.rst", "_autosummary/poli.tests.registry.basic_objectives.test_basic_objectives.test_registering_white_noise.rst", "_autosummary/poli.tests.registry.basic_objectives.test_budget_exhaustion.rst", "_autosummary/poli.tests.registry.chemistry.rst", "_autosummary/poli.tests.registry.chemistry.test_chemistry_objectives.rst", "_autosummary/poli.tests.registry.proteins.rst", "_autosummary/poli.tests.registry.proteins.test_foldx.rst", "_autosummary/poli.tests.registry.proteins.test_foldx_rfp_lambo.rst", "_autosummary/poli.tests.registry.proteins.test_rasp.rst", "_autosummary/poli.tests.registry.test_basic_loop_without_create.rst", "_autosummary/poli.tests.registry.test_force_isolation.rst", "_autosummary/poli.tests.registry.test_instancing_black_boxes_alone.rst", "_autosummary/poli.tests.registry.test_passing_array_of_strings.rst", "_autosummary/poli.tests.registry.toy_continuous_problems.rst", "_autosummary/poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims.rst", "_autosummary/poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims.test_embed_camelback_into_high_dimensions.rst", "_autosummary/poli.tests.registry.toy_continuous_problems.test_instancing_of_toy_continuous_problems.rst", "_autosummary/poli.tests.test_minimal_working_example.rst", "_autosummary/poli.tests.test_minimal_working_example.test_minimal_working_example.rst", "_autosummary/poli.tests.test_seeding.rst", "_autosummary/poli.tests.test_seeding.test_seeding_in_white_noise.rst", "_autosummary/poli.tests.util.rst", "_autosummary/poli.tests.util.test_foldx_interface.rst", "_autosummary/poli.tests.util.test_protein_utilities.rst", "_templates/custom-module-template.rst", "api.rst", "bibliography.md", "contributing/a_new_problem.md", "contributing/a_new_solver.md", "getting_started/getting_started.md", "index.md", "understanding_foldx/00-installing-foldx.md", "understanding_foldx/01-single-mutation-using-foldx/index.ipynb", "using_poli/objective_repository/RaSP.md", "using_poli/objective_repository/all_objectives.md", "using_poli/objective_repository/aloha.md", "using_poli/objective_repository/dockstring.md", "using_poli/objective_repository/drd3_docking.md", "using_poli/objective_repository/foldx_rfp_lambo.md", "using_poli/objective_repository/foldx_sasa.md", "using_poli/objective_repository/foldx_stability.md", "using_poli/objective_repository/penalized_logp_lambo.md", "using_poli/objective_repository/rdkit_logp.md", "using_poli/objective_repository/rdkit_qed.md", "using_poli/objective_repository/sa_tdc.md", "using_poli/objective_repository/super_mario_bros.md", "using_poli/objective_repository/tdc_oracles.md", "using_poli/objective_repository/template.md", "using_poli/objective_repository/toy_continuous_problems.md", "using_poli/objective_repository/white_noise.md", "using_poli/observers/registering_an_observer.md", "using_poli/optimization_examples/protein-stability-foldx/optimizing_protein_stability.ipynb", "using_poli/the_basics/defining_a_problem_solver.md", "using_poli/the_basics/defining_an_observer.ipynb", "using_poli/the_basics/diving_deeper.md", "using_poli/the_basics/intro_to_poli.ipynb", "using_poli/the_basics/isolation.ipynb", "using_poli/the_basics/optimizing_an_objective_function.md", "using_poli/the_basics/registering_an_objective_function.md", "using_poli_baselines/bayesian_optimization.md", "using_poli_baselines/cma_es.md", "using_poli_baselines/graph_ga.md", "using_poli_baselines/latent_space_bo.md", "using_poli_baselines/line_bayesian_optimization.md", "using_poli_baselines/nsga_2.md", "using_poli_baselines/random_mutations.md", "using_poli_baselines/template.md"], "titles": ["poli", "poli.core", "poli.core.abstract_black_box", "poli.core.abstract_black_box.AbstractBlackBox", "poli.core.abstract_black_box.NegativeBlackBox", "poli.core.abstract_isolated_function", "poli.core.abstract_problem_factory", "poli.core.abstract_problem_factory.AbstractProblemFactory", "poli.core.abstract_problem_factory.MetaProblemFactory", "poli.core.black_box_information", "poli.core.chemistry", "poli.core.chemistry.tdc_black_box", "poli.core.chemistry.tdc_black_box.TDCBlackBox", "poli.core.chemistry.tdc_isolated_function", "poli.core.exceptions", "poli.core.exceptions.BudgetExhaustedException", "poli.core.exceptions.PoliException", "poli.core.multi_objective_black_box", "poli.core.multi_objective_black_box.MultiObjectiveBlackBox", "poli.core.problem", "poli.core.problem_setup_information", "poli.core.problem_setup_information.ProblemSetupInformation", "poli.core.proteins", "poli.core.proteins.foldx_black_box", "poli.core.proteins.foldx_black_box.FoldxBlackBox", "poli.core.proteins.foldx_isolated_function", "poli.core.registry", "poli.core.registry.delete_observer_run_script", "poli.core.registry.delete_problem", "poli.core.registry.get_problem_factories", "poli.core.registry.get_problems", "poli.core.registry.register_problem", "poli.core.registry.register_problem_from_repository", "poli.core.registry.set_observer", "poli.core.registry.set_observer_run_script", "poli.core.util", "poli.core.util.abstract_observer", "poli.core.util.abstract_observer.AbstractObserver", "poli.core.util.alignment", "poli.core.util.alignment.is_aligned", "poli.core.util.batch", "poli.core.util.batch.batch_input", "poli.core.util.batch.batch_input.batched", "poli.core.util.chemistry", "poli.core.util.chemistry.string_to_molecule", "poli.core.util.chemistry.string_to_molecule.selfies_to_molecules", "poli.core.util.chemistry.string_to_molecule.smiles_to_molecules", "poli.core.util.chemistry.string_to_molecule.strings_to_molecules", "poli.core.util.chemistry.string_to_molecule.translate_selfies_to_smiles", "poli.core.util.chemistry.string_to_molecule.translate_smiles_to_selfies", "poli.core.util.external_observer", "poli.core.util.external_observer.ExternalObserver", "poli.core.util.files", "poli.core.util.files.download_files_from_github", "poli.core.util.files.download_files_from_github.download_file_from_github_repository", "poli.core.util.files.download_files_from_github.get_sha_for_tag", "poli.core.util.files.integrity", "poli.core.util.files.integrity.compute_md5_from_filepath", "poli.core.util.inter_process_communication", "poli.core.util.inter_process_communication.process_wrapper", "poli.core.util.inter_process_communication.process_wrapper.ProcessWrapper", "poli.core.util.inter_process_communication.process_wrapper.get_connection", "poli.core.util.isolation", "poli.core.util.isolation.external_black_box", "poli.core.util.isolation.external_function", "poli.core.util.isolation.instancing", "poli.core.util.isolation.isolated_black_box", "poli.core.util.objective_management", "poli.core.util.objective_management.make_run_script", "poli.core.util.objective_management.make_run_script.make_observer_script", "poli.core.util.objective_management.make_run_script.make_run_script", "poli.core.util.observer_wrapper", "poli.core.util.observer_wrapper.start_observer_process", "poli.core.util.proteins", "poli.core.util.proteins.defaults", "poli.core.util.proteins.foldx", "poli.core.util.proteins.foldx.FoldxInterface", "poli.core.util.proteins.mutations", "poli.core.util.proteins.mutations.edits_between_strings", "poli.core.util.proteins.mutations.find_closest_wildtype_pdb_file_to_mutant", "poli.core.util.proteins.mutations.mutations_from_wildtype_residues_and_mutant", "poli.core.util.proteins.pdb_parsing", "poli.core.util.proteins.pdb_parsing.parse_pdb_as_residue_strings", "poli.core.util.proteins.pdb_parsing.parse_pdb_as_residues", "poli.core.util.proteins.pdb_parsing.parse_pdb_as_structure", "poli.core.util.proteins.rasp", "poli.core.util.proteins.rasp.inner_rasp", "poli.core.util.proteins.rasp.inner_rasp.PrismData", "poli.core.util.proteins.rasp.inner_rasp.cavity_model", "poli.core.util.proteins.rasp.inner_rasp.helpers", "poli.core.util.proteins.rasp.inner_rasp.run_pipeline", "poli.core.util.proteins.rasp.inner_rasp.visualization", "poli.core.util.proteins.rasp.load_models", "poli.core.util.proteins.rasp.rasp_interface", "poli.core.util.seeding", "poli.core.util.seeding.seeding", "poli.core.util.seeding.seeding.seed_numpy", "poli.core.util.seeding.seeding.seed_python", "poli.objective", "poli.objective.dynamically_instantiate", "poli.objective.parse_factory_kwargs", "poli.objective.run", "poli.objective_factory", "poli.objective_factory.ExternalBlackBox", "poli.objective_factory.create", "poli.objective_factory.load_config", "poli.objective_factory.start", "poli.objective_repository", "poli.objective_repository.aloha", "poli.objective_repository.aloha.register", "poli.objective_repository.aloha.register.AlohaBlackBox", "poli.objective_repository.aloha.register.AlohaProblemFactory", "poli.objective_repository.dockstring", "poli.objective_repository.dockstring.information", "poli.objective_repository.dockstring.isolated_function", "poli.objective_repository.dockstring.register", "poli.objective_repository.dockstring.register.DockstringBlackBox", "poli.objective_repository.dockstring.register.DockstringProblemFactory", "poli.objective_repository.drd3_docking", "poli.objective_repository.drd3_docking.information", "poli.objective_repository.drd3_docking.isolated_function", "poli.objective_repository.drd3_docking.register", "poli.objective_repository.drd3_docking.register.DRD3BlackBox", "poli.objective_repository.drd3_docking.register.DRD3ProblemFactory", "poli.objective_repository.foldx_rfp_lambo", "poli.objective_repository.foldx_rfp_lambo.information", "poli.objective_repository.foldx_rfp_lambo.isolated_function", "poli.objective_repository.foldx_rfp_lambo.register", "poli.objective_repository.foldx_rfp_lambo.register.Config", "poli.objective_repository.foldx_rfp_lambo.register.RFPWrapper", "poli.objective_repository.foldx_rfp_lambo.register.RFPWrapperFactory", "poli.objective_repository.foldx_rfp_lambo.register.get_config", "poli.objective_repository.foldx_sasa", "poli.objective_repository.foldx_sasa.foldx_utils", "poli.objective_repository.foldx_sasa.information", "poli.objective_repository.foldx_sasa.isolated_function", "poli.objective_repository.foldx_sasa.register", "poli.objective_repository.foldx_sasa.register.FoldXSASABlackBox", "poli.objective_repository.foldx_sasa.register.FoldXSASAProblemFactory", "poli.objective_repository.foldx_stability", "poli.objective_repository.foldx_stability.foldx_utils", "poli.objective_repository.foldx_stability.information", "poli.objective_repository.foldx_stability.isolated_function", "poli.objective_repository.foldx_stability.register", "poli.objective_repository.foldx_stability.register.FoldXStabilityBlackBox", "poli.objective_repository.foldx_stability.register.FoldXStabilityProblemFactory", "poli.objective_repository.foldx_stability_and_sasa", "poli.objective_repository.foldx_stability_and_sasa.information", "poli.objective_repository.foldx_stability_and_sasa.isolated_function", "poli.objective_repository.foldx_stability_and_sasa.register", "poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASABlackBox", "poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASAProblemFactory", "poli.objective_repository.gfp_cbas", "poli.objective_repository.gfp_cbas.abstract_vae_wrapper", "poli.objective_repository.gfp_cbas.abstract_vae_wrapper.AbstractVAEWrapper", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_aas_to_idx_array", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_idx_array_to_aas", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_mutations_to_sequence", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_argmax", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_balaji_predictions", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_experimental_X_y", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_gfp_X_y_aa", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_gfp_base_seq", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_samples", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_aa", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_aa_array", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_dna", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.partition_data", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.read_gfp_data", "poli.objective_repository.gfp_cbas.cbas_wrapper", "poli.objective_repository.gfp_cbas.cbas_wrapper.CBASVAEWrapper", "poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeDecoder", "poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeEncoder", "poli.objective_repository.gfp_cbas.gfp_gp", "poli.objective_repository.gfp_cbas.information", "poli.objective_repository.gfp_cbas.isolated_function", "poli.objective_repository.gfp_cbas.make_vae", "poli.objective_repository.gfp_cbas.make_vae.BaseVAE", "poli.objective_repository.gfp_cbas.make_vae.SimpleVAE", "poli.objective_repository.gfp_cbas.make_vae.build_vae", "poli.objective_repository.gfp_cbas.make_vae.identity_loss", "poli.objective_repository.gfp_cbas.make_vae.summed_categorical_crossentropy", "poli.objective_repository.gfp_cbas.register", "poli.objective_repository.gfp_cbas.register.GFPCBasBlackBox", "poli.objective_repository.gfp_cbas.register.GFPCBasProblemFactory", "poli.objective_repository.gfp_select", "poli.objective_repository.gfp_select.information", "poli.objective_repository.gfp_select.isolated_function", "poli.objective_repository.gfp_select.register", "poli.objective_repository.gfp_select.register.GFPBlackBox", "poli.objective_repository.gfp_select.register.GFPSelectionProblemFactory", "poli.objective_repository.penalized_logp_lambo", "poli.objective_repository.penalized_logp_lambo.information", "poli.objective_repository.penalized_logp_lambo.isolated_function", "poli.objective_repository.penalized_logp_lambo.register", "poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboBlackBox", "poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboProblemFactory", "poli.objective_repository.rasp", "poli.objective_repository.rasp.information", "poli.objective_repository.rasp.isolated_function", "poli.objective_repository.rasp.register", "poli.objective_repository.rdkit_logp", "poli.objective_repository.rdkit_logp.information", "poli.objective_repository.rdkit_logp.register", "poli.objective_repository.rdkit_logp.register.LogPBlackBox", "poli.objective_repository.rdkit_logp.register.LogPProblemFactory", "poli.objective_repository.rdkit_qed", "poli.objective_repository.rdkit_qed.information", "poli.objective_repository.rdkit_qed.register", "poli.objective_repository.rdkit_qed.register.QEDBlackBox", "poli.objective_repository.rdkit_qed.register.QEDProblemFactory", "poli.objective_repository.rfp_foldx_stability_and_sasa", "poli.objective_repository.rfp_foldx_stability_and_sasa.information", "poli.objective_repository.rfp_foldx_stability_and_sasa.register", "poli.objective_repository.sa_tdc", "poli.objective_repository.sa_tdc.information", "poli.objective_repository.sa_tdc.isolated_function", "poli.objective_repository.sa_tdc.register", "poli.objective_repository.sa_tdc.register.SABlackBox", "poli.objective_repository.sa_tdc.register.SAProblemFactory", "poli.objective_repository.super_mario_bros", "poli.objective_repository.super_mario_bros.information", "poli.objective_repository.super_mario_bros.level_utils", "poli.objective_repository.super_mario_bros.level_utils.add_padding_to_level", "poli.objective_repository.super_mario_bros.level_utils.clean_level", "poli.objective_repository.super_mario_bros.level_utils.level_to_array", "poli.objective_repository.super_mario_bros.level_utils.level_to_list", "poli.objective_repository.super_mario_bros.level_utils.levels_to_onehot", "poli.objective_repository.super_mario_bros.level_utils.onehot_to_levels", "poli.objective_repository.super_mario_bros.level_utils.tensor_to_sim_level", "poli.objective_repository.super_mario_bros.level_utils.vectorized", "poli.objective_repository.super_mario_bros.model", "poli.objective_repository.super_mario_bros.model.VAEMario", "poli.objective_repository.super_mario_bros.model.load_example_model", "poli.objective_repository.super_mario_bros.register", "poli.objective_repository.toy_continuous_problem", "poli.objective_repository.toy_continuous_problem.definitions", "poli.objective_repository.toy_continuous_problem.definitions.ackley_function_01", "poli.objective_repository.toy_continuous_problem.definitions.alpine_01", "poli.objective_repository.toy_continuous_problem.definitions.alpine_02", "poli.objective_repository.toy_continuous_problem.definitions.bent_cigar", "poli.objective_repository.toy_continuous_problem.definitions.brown", "poli.objective_repository.toy_continuous_problem.definitions.camelback_2d", "poli.objective_repository.toy_continuous_problem.definitions.chung_reynolds", "poli.objective_repository.toy_continuous_problem.definitions.cosine_mixture", "poli.objective_repository.toy_continuous_problem.definitions.cross_in_tray", "poli.objective_repository.toy_continuous_problem.definitions.deb_01", "poli.objective_repository.toy_continuous_problem.definitions.deb_02", "poli.objective_repository.toy_continuous_problem.definitions.deflected_corrugated_spring", "poli.objective_repository.toy_continuous_problem.definitions.easom", "poli.objective_repository.toy_continuous_problem.definitions.egg_holder", "poli.objective_repository.toy_continuous_problem.definitions.shifted_sphere", "poli.objective_repository.toy_continuous_problem.definitions.styblinski_tang", "poli.objective_repository.toy_continuous_problem.information", "poli.objective_repository.toy_continuous_problem.register", "poli.objective_repository.toy_continuous_problem.register.ToyContinuousBlackBox", "poli.objective_repository.toy_continuous_problem.register.ToyContinuousProblemFactory", "poli.objective_repository.toy_continuous_problem.toy_continuous_problem", "poli.objective_repository.toy_continuous_problem.toy_continuous_problem.ToyContinuousProblem", "poli.objective_repository.white_noise", "poli.objective_repository.white_noise.register", "poli.objective_repository.white_noise.register.WhiteNoiseBlackBox", "poli.objective_repository.white_noise.register.WhiteNoiseProblemFactory", "poli.registered_objectives", "poli.tests", "poli.tests.docs_examples", "poli.tests.docs_examples.test_objective_functions", "poli.tests.docs_examples.test_objective_functions.test_aloha_example", "poli.tests.docs_examples.test_objective_functions.test_logp_example", "poli.tests.docs_examples.test_objective_functions.test_logp_example_using_strings", "poli.tests.docs_examples.test_objective_functions.test_qed_example", "poli.tests.docs_examples.test_objective_functions.test_qed_example_using_strings", "poli.tests.docs_examples.test_objective_functions.test_white_noise_example", "poli.tests.registry", "poli.tests.registry.basic_objectives", "poli.tests.registry.basic_objectives.test_basic_objectives", "poli.tests.registry.basic_objectives.test_basic_objectives.test_registering_aloha", "poli.tests.registry.basic_objectives.test_basic_objectives.test_registering_white_noise", "poli.tests.registry.basic_objectives.test_budget_exhaustion", "poli.tests.registry.chemistry", "poli.tests.registry.chemistry.test_chemistry_objectives", "poli.tests.registry.proteins", "poli.tests.registry.proteins.test_foldx", "poli.tests.registry.proteins.test_foldx_rfp_lambo", "poli.tests.registry.proteins.test_rasp", "poli.tests.registry.test_basic_loop_without_create", "poli.tests.registry.test_force_isolation", "poli.tests.registry.test_instancing_black_boxes_alone", "poli.tests.registry.test_passing_array_of_strings", "poli.tests.registry.toy_continuous_problems", "poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims", "poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims.test_embed_camelback_into_high_dimensions", "poli.tests.registry.toy_continuous_problems.test_instancing_of_toy_continuous_problems", "poli.tests.test_minimal_working_example", "poli.tests.test_minimal_working_example.test_minimal_working_example", "poli.tests.test_seeding", "poli.tests.test_seeding.test_seeding_in_white_noise", "poli.tests.util", "poli.tests.util.test_foldx_interface", "poli.tests.util.test_protein_utilities", "&lt;no title&gt;", "API documentation for poli", "References", "Adding a new black box to the repository", "Adding a new optimizer to <code class=\"docutils literal notranslate\"><span class=\"pre\">poli-baselines</span></code>", "Getting started", "poli \ud83e\uddea: a library of discrete objective functions", "Installing <code class=\"docutils literal notranslate\"><span class=\"pre\">foldx</span></code>", "Computing the energy of a protein and a single mutation", "Rapid Stability Predictions", "All objective functions", "Aloha objective function", "dockstring", "DRD3 docking (using TDC)", "Protein (RFP) stability and SASA (using <code class=\"docutils literal notranslate\"><span class=\"pre\">foldx</span></code>,<code class=\"docutils literal notranslate\"><span class=\"pre\">lambo</span></code>)", "Protein solvent accessibility (using <code class=\"docutils literal notranslate\"><span class=\"pre\">foldx</span></code>)", "Protein stability (using <code class=\"docutils literal notranslate\"><span class=\"pre\">foldx</span></code>)", "Penalized logP (using <code class=\"docutils literal notranslate\"><span class=\"pre\">lambo</span></code>)", "Log-solubility (logP)", "Quantitative Estimate of Druglikeness (QED)", "Synthetic Accessibility (using TDC)", "Optimizing jumps in Super Mario Bros", "Therapeutics Data Commons\u2019 oracles", "Objective function name", "Toy continuous objective functions", "White Noise objective function", "Registering and running observers in isolated processes", "Optimizing protein stability using random mutations", "Defining a problem solver in <code class=\"docutils literal notranslate\"><span class=\"pre\">poli_baselines</span></code>", "Defining an observer", "Diving deeper: how does poli work under the hood?", "What is poli?", "Isolating black box objective functions", "Optimizing an objective function", "Registering an objective function in poli", "Bayesian Optimization", "CMA-ES", "Graph Genetic Algorithms", "Latent Space Bayesian Optimization", "Line Bayesian Optimization", "Discrete NSGA-2", "Random mutations", "Template: optimization algorithm"], "terms": {"librari": [0, 37, 42, 237, 309, 330, 332, 333], "discret": [0, 19, 109, 110, 111, 153, 304, 305, 326, 328, 329, 330, 332, 334, 336], "black": [0, 2, 3, 4, 5, 9, 10, 13, 17, 18, 19, 22, 23, 24, 43, 73, 103, 104, 106, 107, 109, 110, 111, 115, 116, 122, 126, 127, 132, 136, 137, 139, 143, 144, 146, 149, 150, 184, 196, 200, 201, 204, 205, 209, 210, 212, 214, 219, 256, 261, 262, 287, 305, 308, 310, 312, 313, 314, 319, 320, 325, 328, 329, 330, 332, 334, 336, 341], "box": [0, 2, 3, 4, 5, 9, 10, 13, 17, 18, 19, 22, 23, 24, 43, 73, 103, 104, 106, 107, 109, 110, 111, 115, 116, 122, 126, 127, 132, 136, 137, 139, 143, 144, 146, 149, 150, 184, 196, 200, 201, 204, 205, 209, 210, 212, 214, 219, 256, 261, 262, 287, 305, 308, 310, 312, 313, 314, 319, 320, 325, 328, 329, 330, 332, 334, 336, 341], "object": [0, 2, 3, 4, 5, 17, 18, 21, 23, 24, 37, 51, 55, 60, 61, 69, 76, 83, 84, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 115, 116, 118, 122, 126, 127, 136, 137, 139, 143, 144, 149, 150, 184, 196, 204, 209, 211, 214, 217, 218, 219, 235, 237, 253, 255, 256, 259, 261, 267, 286, 287, 291, 303, 304, 305, 306, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 329, 330, 336, 341], "function": [0, 2, 3, 4, 5, 13, 17, 18, 19, 26, 27, 28, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 48, 49, 53, 54, 56, 58, 59, 61, 65, 68, 71, 72, 77, 80, 81, 95, 102, 103, 104, 106, 107, 108, 109, 110, 112, 115, 116, 118, 122, 126, 127, 132, 137, 139, 144, 150, 155, 177, 184, 194, 195, 196, 204, 205, 209, 210, 211, 219, 223, 232, 235, 236, 237, 253, 255, 256, 258, 259, 261, 262, 267, 276, 286, 287, 288, 291, 294, 296, 303, 304, 305, 306, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 329, 330, 336, 340, 341], "modul": [0, 1, 2, 5, 6, 10, 22, 23, 26, 35, 38, 40, 41, 43, 52, 53, 56, 58, 59, 62, 67, 68, 73, 74, 75, 77, 81, 94, 107, 108, 112, 115, 118, 124, 132, 139, 146, 152, 172, 174, 186, 192, 194, 195, 198, 200, 201, 202, 207, 212, 215, 221, 236, 260, 265, 266, 267, 274, 275, 280, 282, 286, 287, 290, 296, 298, 301], "class": [1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 16, 17, 18, 19, 20, 21, 23, 24, 25, 33, 36, 37, 50, 51, 59, 60, 63, 64, 66, 75, 76, 103, 109, 110, 111, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 135, 136, 137, 138, 142, 143, 144, 145, 148, 149, 150, 151, 153, 154, 170, 171, 172, 173, 174, 176, 177, 178, 179, 183, 184, 185, 188, 189, 191, 194, 195, 196, 197, 200, 201, 204, 205, 206, 209, 210, 211, 214, 217, 218, 219, 220, 232, 233, 235, 255, 256, 257, 258, 259, 261, 262, 263, 304, 305, 329, 330, 335], "util": [1, 26, 144, 174, 223, 304, 330, 333, 336], "insid": [1, 5, 14, 32, 107, 118, 304, 306, 307, 309, 310, 314, 325, 328, 332, 333, 335], "thi": [2, 4, 5, 6, 7, 9, 17, 18, 19, 23, 26, 27, 28, 31, 32, 33, 34, 37, 41, 42, 48, 49, 53, 54, 56, 60, 61, 68, 72, 74, 75, 76, 77, 80, 81, 104, 106, 109, 115, 118, 123, 136, 143, 149, 170, 174, 194, 195, 200, 201, 204, 209, 214, 237, 253, 255, 256, 261, 267, 286, 287, 291, 296, 304, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 332, 333, 334, 336, 337, 340, 341, 342, 343], "implement": [2, 4, 5, 6, 9, 10, 13, 17, 18, 19, 20, 22, 23, 41, 75, 110, 115, 116, 121, 137, 144, 150, 153, 170, 178, 192, 194, 195, 200, 201, 217, 218, 219, 256, 304, 305, 307, 311, 313, 315, 318, 325, 328, 329, 332, 333, 334, 335, 336, 337, 341], "abstract": [2, 3, 5, 6, 7, 19, 36, 37, 304, 328, 335], "from": [2, 24, 28, 32, 42, 48, 49, 52, 53, 54, 55, 56, 57, 75, 76, 80, 106, 118, 137, 144, 150, 156, 161, 164, 179, 200, 201, 226, 229, 234, 237, 243, 252, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 336, 337, 340, 341, 342, 343], "which": [2, 3, 5, 8, 19, 20, 24, 50, 57, 76, 80, 84, 105, 115, 122, 196, 209, 211, 219, 255, 256, 262, 304, 305, 309, 310, 314, 315, 318, 321, 325, 328, 329, 330, 332, 333, 334, 335, 336], "all": [2, 102, 104, 107, 109, 110, 111, 118, 170, 237, 262, 267, 304, 305, 306, 309, 310, 312, 328, 329, 332, 333, 335], "should": [2, 60, 118, 304, 305, 306, 308, 312, 313, 314, 319, 320, 325, 326, 328, 329, 330, 333, 334, 335], "inherit": [2, 18, 305, 328, 329, 330, 335], "info": [18, 24, 103, 122, 262, 305, 328, 329, 330, 332, 335, 341], "problemsetupinform": [18, 24, 37, 103, 262, 315, 330, 335], "batch_siz": [3, 4, 18, 24, 104, 110, 116, 122, 137, 144, 150, 166, 184, 196, 205, 210, 219, 256, 262, 304, 335, 341], "option": [3, 4, 18, 24, 27, 31, 32, 33, 34, 45, 47, 48, 49, 51, 54, 57, 69, 70, 76, 78, 79, 82, 83, 84, 96, 97, 104, 106, 110, 116, 122, 137, 144, 150, 184, 196, 205, 210, 219, 233, 256, 259, 262], "int": [3, 4, 18, 24, 37, 42, 61, 72, 78, 79, 96, 97, 104, 106, 110, 116, 122, 137, 144, 150, 171, 184, 196, 205, 210, 219, 224, 225, 228, 230, 233, 256, 259, 262, 304, 305, 329, 330, 334, 335], "none": [3, 4, 18, 24, 27, 31, 33, 34, 37, 48, 49, 51, 54, 69, 70, 76, 96, 97, 104, 106, 110, 116, 122, 137, 144, 150, 165, 167, 169, 184, 185, 196, 205, 210, 219, 233, 256, 259, 262, 304, 305, 312, 313, 319, 320, 324, 325, 326, 330, 334, 335], "parallel": [3, 4, 24, 104, 110, 116, 122, 137, 144, 150, 184, 196, 205, 210, 219, 256, 262, 304], "bool": [3, 4, 24, 31, 32, 45, 46, 47, 48, 49, 54, 76, 78, 79, 82, 83, 84, 104, 106, 110, 116, 122, 137, 144, 150, 162, 184, 196, 205, 210, 219, 253, 256, 262, 304, 318, 334], "fals": [3, 4, 24, 32, 46, 47, 48, 49, 54, 76, 79, 82, 83, 84, 104, 106, 110, 116, 122, 137, 144, 150, 161, 162, 168, 184, 196, 205, 210, 219, 229, 256, 262, 304, 326, 330, 334], "num_work": [3, 4, 24, 104, 110, 116, 122, 137, 144, 150, 184, 196, 205, 210, 219, 256, 262, 304], "evaluation_budget": [3, 4, 24, 104, 110, 116, 122, 137, 144, 150, 184, 196, 205, 210, 219, 256, 262, 304], "inf": [3, 4, 24, 104, 110, 116, 122, 137, 144, 150, 184, 196, 205, 210, 219, 256, 262, 304, 326], "base": [3, 7, 16, 37, 60, 118, 178, 306, 307, 309, 311, 332, 335, 341], "optim": [3, 5, 19, 37, 75, 124, 192, 194, 195, 236, 237, 255, 258, 291, 303, 308, 309, 311, 325, 329, 330, 335, 341, 342], "problem": [3, 6, 7, 9, 18, 20, 21, 24, 26, 28, 31, 32, 39, 67, 68, 70, 103, 104, 109, 110, 111, 116, 117, 123, 138, 151, 204, 209, 211, 212, 220, 221, 237, 255, 256, 260, 261, 262, 291, 306, 309, 312, 313, 314, 315, 319, 320, 326, 330, 332, 333, 341], "paramet": [3, 4, 7, 18, 21, 24, 27, 28, 31, 32, 33, 34, 42, 45, 46, 47, 48, 49, 51, 54, 55, 57, 60, 61, 69, 70, 72, 76, 77, 78, 79, 80, 82, 83, 84, 96, 97, 103, 104, 106, 110, 111, 116, 117, 122, 137, 138, 144, 150, 151, 184, 205, 210, 211, 219, 220, 256, 262], "The": [3, 4, 9, 18, 19, 21, 23, 24, 27, 28, 31, 32, 33, 34, 42, 51, 54, 55, 57, 60, 61, 69, 70, 72, 75, 76, 78, 79, 80, 82, 83, 84, 103, 104, 105, 106, 108, 109, 110, 111, 116, 118, 122, 136, 137, 143, 144, 149, 150, 178, 184, 192, 205, 210, 211, 214, 219, 235, 251, 252, 255, 256, 261, 262, 305, 307, 309, 310, 311, 313, 316, 317, 318, 328, 329, 333, 334, 335, 341], "setup": [7, 18, 19, 20, 24, 51, 72, 111, 117, 123, 138, 151, 211, 220, 262, 315, 318, 321], "inform": [3, 7, 9, 18, 19, 20, 24, 37, 51, 72, 103, 104, 106, 111, 115, 116, 117, 123, 138, 151, 200, 201, 211, 220, 259, 262, 303, 309, 328, 330, 335], "provid": [18, 51, 102, 123, 144, 304, 307, 308, 309, 330, 332, 333], "detail": [13, 77, 309, 328, 332], "about": [32, 103, 104, 106, 307, 308, 311, 328, 332, 335], "batch": [3, 4, 18, 24, 104, 110, 116, 122, 137, 144, 150, 184, 205, 210, 219, 256, 262], "size": [3, 4, 18, 24, 42, 104, 110, 116, 122, 137, 144, 150, 184, 205, 210, 219, 256, 262, 335, 337, 341], "evalu": [3, 4, 5, 17, 18, 19, 24, 104, 106, 110, 116, 122, 137, 144, 150, 184, 205, 210, 211, 219, 256, 262, 305, 306, 318, 329, 330, 333, 335], "default": [3, 4, 18, 24, 27, 32, 33, 34, 51, 54, 57, 76, 78, 79, 82, 83, 84, 104, 110, 116, 122, 137, 144, 150, 184, 205, 210, 219, 256, 262, 304, 305, 315, 316, 317, 335, 336, 340], "flag": [3, 4, 24, 31, 110, 116, 122, 137, 144, 150, 184, 205, 210, 219, 256], "indic": [3, 4, 24, 31, 110, 116, 122, 137, 144, 150, 156, 157, 184, 205, 210, 219, 256, 305, 329], "whether": [3, 4, 9, 19, 24, 31, 54, 82, 83, 110, 116, 122, 137, 144, 150, 184, 205, 210, 219, 256, 262, 287, 296, 304, 309, 318, 319, 320, 328, 330, 335], "number": [3, 4, 19, 24, 42, 61, 72, 94, 95, 96, 97, 104, 106, 110, 116, 122, 137, 144, 150, 184, 196, 205, 210, 219, 235, 256, 262, 305, 311, 329, 332, 334], "worker": [3, 4, 24, 110, 116, 122, 137, 144, 150, 184, 205, 210, 219, 256, 262], "us": [3, 4, 5, 8, 9, 19, 24, 27, 31, 33, 34, 37, 48, 49, 51, 54, 56, 60, 61, 70, 74, 75, 76, 104, 106, 109, 110, 116, 118, 121, 122, 137, 143, 144, 146, 150, 160, 161, 162, 184, 192, 194, 195, 196, 200, 201, 202, 205, 207, 209, 210, 212, 217, 218, 219, 255, 256, 261, 286, 291, 303, 304, 305, 308, 309, 310, 311, 313, 319, 320, 325, 327, 329, 330, 333, 334, 335, 336, 337, 340, 341], "half": [3, 4, 104, 122, 137, 144, 150, 184, 256, 262], "avail": [3, 4, 104, 118, 122, 136, 137, 143, 144, 149, 150, 184, 214, 256, 262, 267, 304, 306, 309, 311, 315, 316, 317, 318, 325, 328, 332, 334, 335], "cpu": [3, 4, 104, 122, 137, 144, 150, 184, 256, 262], "maximum": [3, 4, 19, 104, 110, 116, 122, 137, 144, 150, 184, 205, 210, 219, 256, 262, 304, 335], "allow": [3, 4, 5, 8, 9, 19, 23, 24, 104, 122, 136, 137, 143, 144, 149, 150, 184, 204, 209, 214, 255, 256, 304, 305, 308, 309, 325, 329, 332, 334, 335], "float": [3, 4, 24, 122, 137, 144, 150, 184, 205, 209, 210, 219, 249, 256, 262, 304, 307, 334], "type": [3, 18, 24, 27, 33, 45, 46, 47, 48, 49, 55, 60, 61, 69, 70, 76, 78, 79, 80, 82, 83, 84, 104, 105, 110, 116, 122, 158, 163, 205, 210, 256, 304, 309, 335], "observ": [3, 5, 26, 27, 33, 34, 35, 36, 37, 50, 51, 67, 68, 69, 71, 72, 104, 106, 161, 307, 334, 335], "record": [3, 235], "dure": [3, 72, 304, 325], "abstractobserv": [3, 33, 69, 104, 106, 330], "observer_info": 3, "given": [3, 18, 27, 48, 49, 61, 69, 70, 76, 79, 84, 115, 116, 117, 144, 158, 159, 160, 234, 235, 305, 306, 310, 313, 329], "after": [3, 33, 37, 118, 304, 305, 309, 314, 315, 318, 321, 328, 329, 335], "initi": [3, 4, 18, 19, 21, 24, 37, 51, 60, 72, 76, 103, 104, 106, 110, 116, 122, 137, 144, 150, 184, 205, 210, 219, 256, 262, 305, 309, 328, 329, 332, 335, 341], "set_observ": [3, 327], "set": [3, 31, 33, 34, 37, 60, 84, 118, 160, 162, 168, 174, 205, 210, 304, 305, 310, 313, 329, 330, 332], "reset_evaluation_budget": 3, "reset": [3, 106], "budget": [3, 15, 19, 24, 106], "made": 3, "0": [3, 76, 78, 137, 144, 150, 180, 209, 229, 249, 305, 306, 307, 309, 310, 316, 317, 319, 320, 325, 326, 329, 330, 332, 334, 336, 337, 340], "__call__": [3, 4, 5, 304], "x": [3, 4, 5, 18, 37, 51, 106, 110, 116, 118, 144, 162, 167, 168, 205, 210, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 252, 253, 256, 262, 304, 305, 306, 310, 312, 313, 314, 319, 320, 324, 325, 326, 328, 329, 330, 335, 336], "context": [3, 5, 18, 37, 51, 106, 110, 116, 144, 205, 210, 256, 262, 304, 330, 335], "input": [3, 18, 27, 34, 39, 41, 104, 110, 116, 144, 205, 210, 256, 262, 304, 306, 307, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 329, 335, 336, 340, 341], "_black_box": [3, 4, 5, 18, 110, 116, 144, 205, 210, 256, 262, 304, 335], "method": [3, 4, 5, 7, 8, 18, 21, 24, 37, 51, 60, 76, 80, 84, 103, 104, 110, 111, 116, 117, 122, 123, 137, 138, 144, 145, 150, 151, 154, 160, 171, 172, 173, 178, 179, 184, 185, 191, 196, 197, 205, 206, 210, 211, 219, 220, 233, 256, 257, 259, 262, 263, 304, 305, 309, 315, 316, 317, 328, 329, 330, 332, 334, 335], "termin": [3, 72, 316, 317, 318, 330, 335], "__enter__": 3, "enter": 3, "manag": [3, 54, 106], "__exit__": 3, "exc_typ": 3, "exc_val": 3, "exc_tb": 3, "exit": 3, "__del__": 3, "destructor": 3, "__neg__": 3, "creat": [3, 7, 19, 24, 31, 32, 33, 54, 60, 67, 68, 69, 70, 102, 106, 111, 117, 123, 138, 151, 211, 220, 221, 286, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 326, 328, 330, 333, 334, 336, 337, 340, 341, 342, 343], "new": [3, 122, 307, 309, 329, 335], "neg": [3, 182, 313, 317], "origin": [3, 4, 76, 77, 80, 153, 252, 307, 309], "one": [3, 165, 228, 303, 304, 305, 307, 309, 310, 311, 315, 328, 329, 332, 333, 340], "__init__": [3, 4, 7, 8, 18, 21, 24, 37, 51, 60, 76, 103, 110, 111, 116, 117, 122, 123, 137, 138, 144, 145, 150, 151, 154, 171, 172, 173, 178, 179, 184, 185, 191, 196, 197, 205, 206, 210, 211, 219, 220, 233, 256, 257, 259, 262, 263, 305, 329, 330, 335], "execut": [3, 4, 56, 60, 69, 118, 122, 137, 144, 150, 184, 219, 256, 308, 314], "we": [3, 4, 13, 17, 24, 32, 74, 80, 104, 118, 122, 136, 137, 143, 144, 149, 150, 161, 184, 192, 194, 195, 204, 205, 209, 210, 214, 237, 251, 253, 255, 256, 291, 304, 305, 306, 307, 309, 310, 314, 318, 325, 328, 329, 330, 332, 333, 334, 335, 336, 337, 340, 341], "f": [4, 23, 74, 75, 106, 136, 143, 149, 214, 304, 305, 306, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 330, 332, 333, 334, 335, 336, 337, 341, 342, 343], "abstractblackbox": [4, 18, 106, 122, 137, 144, 150, 184, 256, 304, 305, 329, 330, 335], "A": [4, 24, 31, 33, 42, 45, 46, 47, 48, 49, 70, 74, 76, 78, 79, 80, 82, 83, 106, 109, 110, 111, 118, 122, 124, 132, 136, 137, 143, 144, 146, 149, 150, 196, 205, 210, 212, 214, 215, 219, 221, 232, 233, 236, 256, 258, 260, 262, 303, 306, 307, 309, 310, 311, 312, 316, 317, 330, 335], "wrapper": [4, 13, 103, 118, 124, 153, 170, 204, 209, 215, 307, 311, 341], "negat": 4, "If": [4, 18, 27, 32, 33, 34, 37, 42, 45, 46, 47, 48, 49, 51, 54, 55, 61, 72, 75, 76, 78, 79, 80, 84, 96, 97, 104, 106, 253, 256, 304, 305, 306, 307, 308, 309, 314, 315, 316, 317, 318, 324, 330, 332, 333, 334, 335], "you": [4, 5, 76, 84, 118, 122, 205, 210, 219, 237, 304, 305, 306, 307, 308, 309, 310, 313, 315, 318, 319, 320, 321, 324, 325, 328, 329, 330, 332, 333, 334, 335], "construct": [4, 179], "maxim": [4, 235, 237, 252, 253, 305, 325], "minim": [4, 237, 304, 305, 311, 313, 329, 341], "latter": [4, 309], "onli": [4, 5, 13, 106, 153, 161, 170, 246, 250, 251, 304, 305, 306, 309, 310, 313, 315, 317, 318, 321, 325, 329, 334, 335], "differ": [4, 23, 78, 136, 143, 149, 214, 267, 304, 305, 306, 309, 310, 329, 330, 333, 335], "return": [4, 7, 24, 27, 45, 46, 47, 48, 49, 55, 57, 61, 69, 70, 76, 78, 79, 80, 82, 83, 84, 104, 105, 106, 111, 117, 138, 144, 151, 158, 159, 160, 163, 165, 180, 181, 196, 204, 205, 209, 210, 211, 220, 227, 230, 260, 261, 262, 304, 305, 312, 313, 315, 316, 317, 319, 320, 326, 328, 329, 335], "instead": [4, 237, 305, 316, 317, 329], "same": [4, 79, 80, 192, 194, 195, 196, 304, 306, 310, 332], "factori": [6, 7, 23, 31, 32, 60, 70, 102, 104, 106, 107, 108, 109, 111, 112, 115, 117, 123, 126, 127, 136, 138, 139, 143, 149, 151, 204, 209, 211, 214, 220, 235, 255, 261, 304, 307], "defin": [7, 33, 77, 212, 237, 291, 305, 325, 332, 333, 334], "interfac": [7, 75, 102, 307, 333], "instanc": [7, 18, 111, 117, 122, 138, 151, 211, 220, 256, 304, 306, 328, 333, 335, 341], "get_setup_inform": [7, 111, 117, 123, 138, 151, 211, 220, 304, 335], "specifi": [7, 54, 55, 104, 111, 117, 122, 138, 151, 159, 164, 172, 178, 211, 219, 220, 255, 309, 319, 320, 334, 335, 341], "metaclass": 8, "abstractproblemfactori": [8, 31, 70, 304, 335], "overrid": 8, "__repr__": 8, "__str__": 8, "arg": [8, 172, 173, 178, 179, 233, 304, 309], "kwarg": [8, 31, 70, 172, 173, 178, 179, 233, 304, 335], "contain": [5, 9, 10, 20, 22, 26, 42, 56, 68, 70, 74, 77, 78, 79, 81, 105, 156, 157, 174, 259, 267, 304, 306, 309, 316, 317, 335], "relat": [10, 22, 43, 73, 104, 308, 328], "around": [13, 118, 124, 204, 209, 215, 307, 311, 341], "therapeut": [13, 121, 217, 218, 303, 307, 311, 314, 321, 335], "data": [13, 40, 54, 110, 116, 118, 161, 162, 168, 169, 174, 303, 307, 309, 311, 314, 315, 321, 335], "common": [13, 102, 303, 307, 309, 311, 314, 321, 335, 341], "tdc": [13, 118, 121, 215, 217, 218, 219, 307, 311], "oracl": [13, 121, 122, 215, 217, 218, 219, 307, 311, 314, 321], "1": [13, 23, 32, 42, 75, 78, 80, 106, 115, 116, 117, 121, 124, 136, 137, 143, 144, 149, 150, 156, 157, 161, 168, 180, 184, 192, 194, 195, 196, 200, 201, 209, 214, 217, 218, 219, 224, 237, 243, 252, 255, 259, 303, 305, 306, 307, 309, 310, 312, 314, 318, 319, 324, 325, 326, 329, 330, 332, 335, 336, 337, 340, 341], "so": [13, 31, 80, 205, 210, 304, 305, 309, 315, 318, 329, 333, 335], "far": [13, 305, 329], "support": [13, 286, 304, 306, 307, 329, 333], "two": [13, 61, 78, 306, 309, 316, 317, 325, 330, 333, 334, 335, 341], "drd3": [13, 118, 122, 123, 307, 311], "synthet": [13, 215, 217, 218, 219, 220, 307, 311], "access": [13, 54, 76, 118, 132, 137, 138, 146, 150, 151, 212, 217, 218, 219, 220, 303, 304, 307, 309, 311, 314, 325], "see": [13, 48, 49, 77, 109, 118, 237, 255, 258, 261, 304, 306, 309, 310, 315, 328, 332, 333, 335], "document": [13, 196, 306, 307, 309, 328, 333], "our": [13, 304, 305, 309, 311, 313, 316, 317, 328, 329, 330, 333, 334, 335, 336, 337, 341], "more": [13, 77, 137, 144, 150, 258, 259, 306, 309, 310, 328, 332], "refer": [13, 23, 75, 115, 116, 117, 118, 121, 124, 192, 194, 195, 217, 218, 307, 315, 318], "artifici": [13, 121, 217, 218, 237], "intellig": [13, 121, 217, 218], "foundat": [13, 121, 217, 218], "scienc": [13, 121, 217, 218, 303], "huang": [13, 121, 217, 218, 303, 307, 314, 321], "kexin": [13, 303], "tianfan": [13, 303], "fu": [13, 121, 217, 218, 303], "wenhao": [13, 303], "gao": [13, 121, 217, 218, 303, 311], "yue": [13, 303], "zhao": [13, 303], "yusuf": [13, 303], "roohani": [13, 303], "jure": [13, 303], "leskovec": [13, 303], "connor": [13, 303], "w": [13, 74, 121, 217, 218, 228, 233, 303, 307, 309, 314, 330], "colei": [13, 303, 307], "cao": [13, 303], "xiao": [13, 303], "jimeng": [13, 303], "sun": [13, 303], "marinka": [13, 303], "zitnik": [13, 303], "natur": 13, "chemic": [13, 115, 116, 117, 303], "biologi": [13, 118, 136, 143, 149, 214, 303, 314], "18": [13, 121, 217, 218, 303], "10": [13, 42, 115, 116, 117, 121, 200, 201, 217, 218, 303, 326, 328, 336, 337, 340, 341], "octob": 13, "2022": [13, 75, 115, 116, 117, 121, 124, 192, 194, 195, 217, 218, 303, 307, 308, 309, 311, 313, 318, 328], "1033": [13, 121, 217, 218], "36": 13, "http": [13, 42, 53, 54, 75, 77, 115, 116, 117, 118, 121, 124, 192, 194, 195, 200, 201, 217, 218, 237, 258, 259, 303, 304, 306, 307, 308, 309, 315, 318, 328, 332, 335], "doi": [13, 115, 116, 117, 121, 200, 201, 217, 218, 303], "org": [13, 42, 75, 115, 116, 117, 121, 124, 192, 194, 195, 200, 201, 217, 218, 237, 258, 259, 303, 309], "1038": [13, 121, 217, 218], "s41589": [13, 121, 217, 218], "022": [13, 121, 217, 218], "01131": [13, 121, 217, 218], "2": [13, 32, 42, 75, 78, 121, 136, 143, 149, 156, 157, 214, 217, 218, 233, 237, 253, 256, 259, 303, 304, 306, 309, 321, 324, 325, 326, 332, 336, 340], "oracle_nam": 122, "str": [21, 24, 27, 28, 31, 32, 33, 34, 45, 46, 47, 48, 49, 51, 54, 55, 57, 60, 61, 69, 70, 72, 76, 78, 79, 80, 82, 83, 84, 104, 106, 116, 122, 137, 144, 150, 185, 226, 227, 233, 256, 304, 309, 316, 317, 318, 326, 330, 335], "from_smil": [122, 196, 205, 210], "true": [31, 32, 45, 46, 47, 48, 49, 54, 76, 78, 79, 84, 104, 106, 122, 162, 179, 184, 196, 205, 210, 253, 304, 309, 316, 317, 318, 321, 326, 328, 330, 334, 335], "kwargs_for_oracl": [], "repres": [24, 61, 78, 83, 122, 178, 332], "It": [31, 60, 61, 118, 304, 306, 309, 313, 314, 329, 332], "name": [9, 21, 27, 28, 31, 32, 33, 34, 51, 54, 55, 70, 72, 82, 83, 84, 104, 106, 116, 122, 256, 259, 304, 306, 309, 310, 315, 316, 317, 318, 321, 326, 328, 330, 332, 334, 335, 336, 340], "comput": [23, 57, 76, 78, 80, 110, 116, 118, 136, 137, 143, 144, 146, 149, 150, 192, 194, 195, 202, 205, 210, 212, 214, 237, 303, 306, 307, 308, 310, 311, 314, 316, 317, 318, 321, 333], "dock": [115, 116, 117, 118, 121, 122, 123, 303, 307, 311, 313, 333], "score": [115, 116, 117, 137, 144, 150, 307, 310, 311, 313, 314, 316, 317, 318, 333], "an": [5, 19, 23, 27, 33, 34, 37, 39, 42, 45, 46, 47, 48, 49, 50, 51, 54, 61, 71, 72, 75, 80, 103, 104, 106, 136, 143, 149, 156, 157, 214, 228, 287, 304, 306, 307, 308, 309, 310, 313, 315, 316, 317, 318, 321, 324, 325, 328, 333, 336, 337, 341], "process": [5, 31, 33, 37, 50, 51, 60, 61, 71, 72, 103, 104, 106, 110, 116, 137, 143, 144, 150, 174, 205, 210, 287, 303, 304, 309, 315, 316, 317, 318, 321, 325, 328, 332, 333, 334, 335, 336], "multipl": [110, 116, 205, 210], "infin": [104, 110, 116, 122, 137, 144, 150, 205, 210, 219], "molecul": [44, 45, 46, 47, 115, 116, 117, 122, 196, 205, 210, 211, 219, 303, 306, 309, 313, 314, 321, 332], "ar": [5, 19, 32, 37, 75, 78, 80, 105, 118, 162, 196, 205, 210, 211, 255, 267, 291, 304, 305, 306, 307, 308, 310, 311, 315, 316, 317, 318, 319, 320, 324, 325, 328, 329, 330, 332, 333, 334, 335, 336], "smile": [46, 47, 48, 49, 116, 122, 204, 205, 209, 210, 219, 307, 318, 319, 320], "format": [60, 77, 80, 158], "represent": [44, 47, 116, 122, 200, 201, 205, 210, 219, 303, 333], "dict": [31, 60, 104, 106, 110, 116, 304, 335], "addit": [31, 51, 60, 69, 104, 106, 310], "keyword": [31, 51, 60, 104, 106, 304, 316, 317, 334], "argument": [27, 31, 33, 34, 51, 60, 104, 106, 316, 317, 334], "custom": [14, 334], "packag": [14, 16, 48, 49, 53, 328, 332, 333, 335], "rais": [15, 18, 45, 46, 48, 49, 54, 55, 61, 75, 78, 79, 305, 308, 329, 334], "when": [15, 60, 104, 106, 304, 310, 330, 332, 333, 334], "exhaust": 15, "multi_object": 17, "version": [17, 51, 76, 103, 118, 192, 209, 211, 305, 306, 307, 308, 309, 310, 314, 325, 329, 330, 340, 341], "mean": [17, 80, 160, 196, 304, 318, 325, 337], "simpli": [17, 305, 306, 315, 318, 321, 329, 330, 332], "concaten": [17, 18, 205, 210], "result": [17, 18, 76, 205, 210, 309, 330, 333], "individu": [17, 18, 77, 227, 309, 330, 333], "objective_funct": [18, 341], "list": [18, 24, 31, 33, 45, 46, 47, 48, 49, 69, 70, 76, 77, 78, 79, 80, 82, 83, 137, 144, 150, 156, 170, 179, 225, 227, 230, 304, 307, 309, 310, 316, 317, 330, 332, 335], "multi": [18, 303, 341], "requir": [18, 24, 53, 54, 118, 304, 305, 307, 309, 310, 328, 329, 330, 332, 333, 334], "valueerror": [18, 55, 79], "e": [5, 19, 20, 54, 74, 80, 106, 110, 118, 156, 157, 161, 200, 201, 205, 210, 211, 253, 262, 303, 304, 305, 306, 307, 309, 310, 311, 313, 315, 316, 317, 318, 326, 328, 329, 330, 334, 335], "g": [5, 19, 20, 74, 80, 156, 157, 211, 304, 305, 306, 307, 309, 311, 316, 317, 326, 328, 329, 330, 334, 335], "alphabet": [9, 20, 24, 110, 116, 137, 144, 150, 304, 305, 315, 316, 317, 326, 328, 329, 330, 332, 335, 341, 342, 343], "sequenc": [9, 20, 75, 109, 110, 111, 124, 156, 157, 158, 159, 163, 164, 165, 192, 194, 195, 303, 304, 305, 307, 309, 312, 326, 328, 329, 332, 335], "length": [9, 20, 42, 78, 79, 167, 304, 309, 335], "max_sequence_length": [304, 326, 330, 335], "align": [9, 304, 326, 330, 335], "log_transform_recommend": [304, 326, 330], "s": [9, 19, 21, 24, 48, 49, 74, 75, 106, 118, 137, 144, 150, 153, 200, 201, 204, 205, 209, 210, 211, 237, 251, 267, 303, 306, 307, 311, 314, 315, 316, 317, 318, 321, 328, 329, 330, 332, 333, 334, 336, 340, 341], "longest": 9, "have": [5, 9, 32, 42, 118, 137, 144, 150, 237, 286, 304, 305, 306, 308, 309, 310, 313, 314, 315, 316, 317, 318, 324, 328, 329, 332, 333, 334, 335], "been": [237, 308], "charact": 9, "mai": [32, 200, 201, 303, 332], "appear": [306, 309], "recommend": [118, 304, 306, 307, 310, 314, 315, 337], "algorithm": [19, 37, 255, 291, 303, 305, 309, 325, 329, 330, 332, 334, 335, 336, 341], "log": [51, 182, 192, 202, 204, 205, 304, 307, 311, 335], "transform": [44, 223, 228, 229, 304], "target": [110, 116], "foldx": [23, 24, 77, 80, 136, 137, 138, 139, 143, 144, 146, 149, 150, 151, 200, 201, 212, 214, 306, 307, 309, 311, 328, 333, 335], "simul": [23, 24, 75, 76, 136, 143, 149, 214, 230, 237, 304, 306], "free": [23, 136, 143, 149, 214, 304, 305, 308, 309], "energi": [23, 76, 136, 143, 149, 214, 308, 317], "between": [23, 78, 80, 110, 136, 143, 149, 209, 214, 319], "wildtyp": [23, 24, 79, 80, 136, 137, 143, 144, 149, 150, 200, 201, 214, 307, 310, 311, 316, 317], "mutat": [23, 24, 76, 136, 143, 149, 158, 214, 303, 305, 307, 310, 311, 316, 329, 332, 334, 341], "web": [23, 75, 136, 143, 149, 214], "server": [23, 60, 61, 75, 136, 143, 149, 214], "onlin": [23, 75, 136, 143, 149, 214], "forc": [23, 31, 75, 122, 136, 143, 149, 214, 287], "field": [23, 75, 136, 143, 149, 214], "nucleic": [23, 75, 136, 143, 149, 214], "acid": [23, 24, 74, 75, 136, 137, 143, 144, 149, 150, 156, 157, 159, 164, 165, 214], "research": [23, 75, 136, 143, 149, 214, 303], "schymkowitz": [23, 75, 136, 143, 149, 214, 307, 309], "j": [23, 75, 115, 116, 117, 136, 143, 149, 214, 303, 330], "borg": [23, 75, 136, 143, 149, 214, 309], "stricher": [23, 75, 136, 143, 149, 214, 309], "ny": [23, 75, 136, 143, 149, 214], "r": [23, 74, 75, 80, 136, 143, 149, 214, 237, 303, 310, 314, 330], "rousseau": [23, 75, 136, 143, 149, 214, 309], "serrano": [23, 75, 136, 143, 149, 214, 309], "l": [23, 74, 75, 106, 109, 110, 111, 136, 143, 149, 166, 171, 172, 173, 200, 201, 214, 303, 304, 305, 306, 312, 324, 325, 326, 329, 330, 332, 335], "2005": [23, 75, 136, 143, 149, 214, 307], "33": [23, 75, 136, 143, 149, 180, 214, 309], "suppl_2": [23, 75, 136, 143, 149, 214], "w382": [23, 75, 136, 143, 149, 214], "w388": [23, 75, 136, 143, 149, 214], "wildtype_pdb_path": [24, 137, 144, 150, 310, 328], "union": [24, 31, 33, 69, 70, 76, 79, 137, 144, 150], "path": [24, 31, 33, 54, 57, 69, 70, 76, 79, 82, 83, 84, 118, 137, 144, 150, 169, 234, 304, 309, 310, 315, 316, 317, 318, 321, 328, 330], "experiment_id": [24, 137, 144, 150, 330], "tmp_folder": [24, 137, 144, 150], "eager_repair": [24, 137, 144, 150, 316, 317], "verbos": [24, 54, 76, 82, 83, 84, 137, 144, 150, 305, 334], "pdb": [24, 76, 79, 80, 81, 82, 83, 84, 137, 143, 144, 150, 200, 201, 306, 310, 316, 317, 328, 333], "file": [24, 32, 75, 76, 77, 79, 80, 81, 82, 83, 84, 105, 109, 118, 137, 143, 144, 150, 200, 201, 255, 261, 303, 304, 306, 308, 310, 315, 318, 321, 328, 330, 335], "amino": [24, 74, 137, 144, 150, 156, 157, 159, 164, 165], "experi": [24, 137, 144, 150, 161, 237, 330], "id": [24, 77, 137, 144, 150, 225, 286, 303, 304, 309, 330, 335], "temporari": [24, 137, 144, 150], "folder": [24, 32, 54, 109, 118, 137, 144, 150, 255, 261, 304, 306, 308, 321, 330, 333, 335], "eagerli": [24, 144], "repair": [24, 75, 76, 137, 144, 150, 328], "print": [24, 42, 54, 76, 82, 83, 84, 106, 137, 144, 150, 305, 306, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 330, 332, 334, 335, 341, 342, 343], "output": [24, 76, 82, 83, 84, 137, 144, 150, 230, 304, 307, 309, 318, 332, 333], "wildtype_residu": [24, 80], "residu": [24, 77, 79, 80, 82, 83, 309], "each": [24, 37, 42, 78, 80, 159, 164, 307, 309, 330, 333, 334, 337], "wildtype_amino_acid": 24, "wildtype_residue_str": [24, 80], "string": [24, 44, 45, 46, 47, 48, 49, 60, 70, 78, 79, 80, 82, 116, 122, 157, 158, 167, 204, 205, 209, 210, 219, 226, 227, 305, 307, 309, 310, 312, 316, 317, 319, 320, 326, 329, 334, 335, 342, 343], "create_working_directori": 24, "work": [24, 42, 69, 70, 76, 106, 118, 246, 250, 296, 305, 306, 308, 309, 311, 313, 319, 320, 321, 328, 329, 330, 332, 334, 336], "directori": [24, 69, 70, 76, 308, 309, 310, 315, 316, 317, 321, 330], "regist": [26, 31, 32, 33, 34, 104, 105, 106, 118, 306, 310, 316, 317, 332], "observer_nam": [27, 33, 34, 51, 72, 327], "delet": [27, 28, 330], "run": [5, 19, 27, 31, 32, 33, 34, 50, 60, 67, 68, 69, 70, 76, 104, 106, 118, 144, 267, 304, 305, 306, 307, 308, 309, 329, 330, 332, 334, 335], "script": [5, 27, 31, 33, 34, 60, 67, 68, 69, 70, 71, 75, 109, 118, 143, 204, 209, 237, 255, 261, 304, 310, 314, 330, 334, 335], "take": [27, 28, 31, 32, 33, 34, 60, 227, 230, 303, 304, 305, 312, 325, 326, 328, 329, 332, 335, 336], "pass": [27, 31, 33, 34, 51, 60, 80, 84, 104, 309, 315, 316, 317, 328, 335], "locat": [27, 33, 34, 75, 251, 259, 309, 342, 343], "note": [27, 33, 34, 54, 60, 61, 72, 76, 137, 144, 150], "must": [27, 33, 34, 306, 312, 324, 325, 326], "accept": [27, 33, 34, 60, 304], "port": [27, 33, 34, 60, 61, 72], "password": [27, 33, 34, 60, 61, 72], "problem_nam": [28, 304, 324, 328], "configur": [28, 31, 34, 105], "dictionari": [60, 328], "problem_factori": [31, 70, 328, 337, 341, 342, 343], "only_avail": [], "includ": [9, 19, 118, 306, 307, 310, 313, 314, 325, 330, 333, 334, 335, 336], "can": [5, 31, 32, 33, 42, 50, 60, 72, 84, 118, 179, 200, 201, 205, 210, 232, 304, 305, 306, 308, 309, 310, 318, 319, 320, 321, 324, 325, 328, 329, 330, 332, 333, 334, 335, 340], "import": [32, 55, 75, 106, 194, 195, 304, 306, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 330, 332, 333, 334, 335, 336, 337, 340, 341, 342, 343], "directli": [243, 309, 310, 333], "problem_list": [], "repositori": [32, 52, 53, 54, 55, 102, 115, 153, 237, 243, 267, 303, 305, 306, 307, 310, 315, 318, 328, 330, 332], "otherwis": [47, 79, 309, 316, 317], "user": [33, 54, 60, 137, 144, 150, 178, 291, 305, 309, 328, 329, 330, 332, 333, 335], "readili": [], "conda_environment_nam": [31, 70, 304, 335], "python_path": [31, 33, 69, 70, 335], "conda": [5, 31, 33, 69, 70, 109, 118, 255, 261, 305, 307, 310, 315, 316, 317, 318, 329, 333], "environ": [5, 31, 32, 33, 54, 69, 70, 109, 255, 261, 303, 305, 306, 307, 309, 310, 316, 317, 321, 324, 329, 333, 334], "python": [31, 33, 42, 69, 70, 74, 97, 106, 118, 136, 143, 149, 214, 303, 304, 306, 307, 314, 316, 317], "With": [31, 33, 334, 335], "instanti": [31, 33, 34, 51, 72, 103, 104, 106, 305, 329, 330, 334, 335], "separ": [31, 33], "also": [31, 118, 143, 304, 306, 307, 310, 315, 316, 317, 318, 325, 328, 330, 332, 334, 335, 340], "later": 31, "append": [31, 33, 70, 329, 330], "overwrit": [31, 54, 76, 104, 106, 330, 335], "exist": [31, 54, 55, 304, 309, 328], "quiet": [32, 104, 309], "correspond": [32, 110, 116, 157, 262, 309], "objective_repositori": [32, 304, 306, 310, 312, 313, 314, 315, 318, 319, 320, 325, 326, 328, 332, 333, 335, 337, 341, 342, 343], "yaml": 32, "said": [32, 304, 305, 315, 329, 335], "enviro": [32, 304, 305, 329, 335], "sinc": [32, 80, 118, 291, 304, 305, 308, 309, 313, 314, 315, 318, 325, 329, 332, 334, 335, 336], "t": [32, 74, 121, 136, 143, 149, 214, 217, 218, 303, 304, 307, 308, 309, 313, 314, 315, 318, 330, 333, 334, 335], "depend": [5, 32, 304, 309, 310, 316, 317, 318, 324, 332, 333], "instal": [32, 53, 137, 144, 150, 307, 309, 310, 316, 317, 318, 324, 328, 332, 333, 334, 335], "squelch": [32, 104], "feedback": [32, 104, 309], "creation": [32, 37, 104, 304, 325, 341], "registr": [32, 104, 106, 109, 204, 209, 255, 261, 304, 334, 335], "conda_environment_loc": 33, "extern": [33, 50, 51, 71, 103, 332], "externalobserv": [33, 327], "relev": [33, 309, 310, 315, 316, 317, 321, 325, 328, 335], "script_file_nam": 34, "run_script": [34, 60, 69, 70], "call": [34, 37, 54, 60, 71, 72, 104, 109, 137, 144, 150, 255, 261, 304, 305, 306, 307, 308, 309, 310, 315, 316, 317, 328, 330, 332, 333], "monitor": 37, "progress": [37, 54, 84, 329], "valu": [37, 74, 96, 97, 104, 106, 161, 162, 168, 253, 309, 315, 318, 325, 328], "decis": 37, "variabl": [37, 54, 205, 210, 309, 315, 325], "iter": [37, 42, 305, 329, 332, 334, 337], "np": [37, 106, 237, 256, 304, 305, 306, 307, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 333, 335, 336, 337, 340, 341, 342, 343], "ndarrai": [37, 166, 224, 225, 226, 228, 229, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 304, 305, 328, 329, 330, 335], "y": [37, 51, 74, 106, 162, 168, 304, 305, 310, 313, 314, 319, 320, 328, 329, 330], "everi": [37, 330], "time": [37, 61, 304, 309, 310, 330, 341], "initialize_observ": [37, 51, 330], "problem_setup_info": [37, 330], "caller_info": [37, 51, 106, 330, 334, 335], "x0": [19, 37, 51, 304, 305, 306, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 336, 337, 340, 341, 342, 343], "y0": [19, 37, 51, 305, 310, 315, 316, 317, 318, 321, 324, 328, 329, 330, 332, 334, 335, 336, 337, 340, 341, 342, 343], "seed": [37, 51, 104, 106, 184, 229, 296, 304, 330, 335], "necessari": [37, 76, 304, 315, 316, 317, 335], "finish": [37, 51, 309, 330], "perform": [37, 96, 97, 110, 137, 150, 205, 210, 305, 307, 309, 328, 329, 334, 336, 337], "ani": [37, 60, 104, 106, 172, 173, 233, 304, 309, 326, 328, 330, 332, 334, 335], "cleanup": 37, "final": [37, 330], "step": [37, 305, 315, 328, 334, 335], "complet": [37, 309, 335], "model": [39, 75, 115, 116, 117, 161, 162, 174, 178, 180, 303, 304, 309, 310, 336], "check": [39, 56, 75, 78, 259, 305, 309, 310, 316, 317, 318, 325, 329, 330, 332, 333, 334, 335], "inde": [39, 287, 309, 316, 317, 334, 335], "gener": [41, 42, 60, 69, 70, 94, 95, 96, 97, 104, 106, 262, 309, 336], "chunk_siz": 42, "element": [42, 328], "3": [42, 156, 157, 304, 306, 307, 309, 312, 324, 326, 328, 330, 332, 335, 336, 337], "12": [42, 75, 124, 192, 194, 195, 200, 201, 303], "replac": [42, 78, 80, 200, 201, 225, 310, 328, 342, 343], "built": [42, 160, 306], "itertool": 42, "doc": [42, 54, 309], "html": [42, 237, 303, 328, 332], "yield": [42, 115, 116, 117, 303], "tupl": [42, 78, 79, 256, 304, 335], "equal": [42, 78, 334], "exampl": [42, 55, 57, 78, 80, 106, 109, 258, 296, 304, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 332, 333, 334, 341], "4": [42, 167, 180, 303, 308, 314, 332], "5": [42, 76, 109, 110, 111, 209, 211, 249, 306, 307, 309, 311, 312, 325, 330, 332, 334, 335, 341], "6": [42, 303, 309, 328, 332], "7": [42, 76, 309, 316, 317, 332], "8": [42, 115, 116, 117, 303, 309, 332], "9": [42, 303, 304, 306, 307, 309, 313, 328, 332, 333, 335], "rdkit": [44, 45, 46, 47, 55, 202, 204, 205, 207, 209, 210, 307, 311, 313, 319, 320, 321, 335], "selfies_str": [45, 48], "chem": [45, 46, 47, 121, 205, 209, 210, 217, 218], "mol": [45, 46, 47], "convert": [45, 46, 47, 60, 156, 157, 162, 167], "selfi": [45, 47, 48, 49, 116, 122, 204, 205, 209, 210, 219, 307, 318, 319, 320], "strict": [45, 46, 48, 49, 54, 78], "error": [45, 46, 48, 49, 54, 75], "fail": [45, 205, 210, 334], "decod": [45, 172, 178, 179, 230, 233], "smiles_str": [46, 48, 49], "cannot": [46, 48, 49, 205, 210], "pars": [46, 48, 49, 81, 82, 83, 84, 205, 210, 226], "molecule_str": 47, "from_selfi": [47, 205, 210], "assum": [47, 80, 205, 210, 291, 304, 305, 309, 310, 316, 317, 318, 324, 328, 329, 332], "translat": [48, 49], "els": [48, 49, 335], "those": [48, 49], "aspuru": [48, 49, 303], "guzik": [48, 49, 303], "lab": [48, 49], "group": [48, 49], "isol": [5, 50, 51, 103, 104, 106, 122, 287, 304, 307, 310, 315, 316, 317, 318, 321, 324, 328, 330, 335], "kwargs_for_observ": 51, "send": [51, 72], "verifi": [51, 56, 330], "wa": [51, 53, 80, 194, 195, 305, 309, 314, 318, 328, 329], "correctli": [51, 308], "setup_info": 51, "start": [51, 60, 71, 72, 200, 201, 309, 310, 328, 330, 332, 333, 334, 335], "close": [51, 106, 314, 319, 320], "__getattr__": 51, "__name": 51, "retriev": [51, 72, 123], "attribut": [51, 72, 172, 173, 233, 309, 328], "underli": 51, "download": [52, 53, 54, 56, 118, 304, 308, 310, 315, 321, 328], "github": [52, 53, 54, 55, 118, 304, 306, 307, 309, 310, 315, 318, 335], "pygithub": [53, 55, 315], "pip": [53, 118, 304, 306, 307, 309, 315, 316, 317, 318, 333, 335], "most": [53, 159, 311], "code": [53, 56, 174, 200, 201, 304, 309, 315, 318, 321, 332, 335], "taken": [53, 243, 310, 333], "adapt": [53, 303, 309, 337], "gist": 53, "com": [53, 54, 118, 304, 306, 307, 308, 309, 315, 318, 335], "pdashford": 53, "2e4bcd4fc2343e2fd03efe4da17f577d": 53, "permalink_comment_id": 53, "4274705": 53, "gistcom": 53, "repository_nam": 54, "file_path_in_repositori": 54, "download_path_for_fil": 54, "tag": [54, 55], "master": [54, 306, 335], "commit_sha": [54, 55], "exist_ok": [54, 309, 330], "parent_folders_exist_ok": 54, "i": [54, 74, 110, 136, 143, 149, 161, 205, 210, 214, 253, 262, 303, 305, 307, 309, 310, 313, 317, 326, 329, 330, 335], "repo": [54, 118, 306], "download_path": 54, "branch": [54, 55, 306], "sha": [54, 55], "commit": [54, 55, 310], "exists_ok": 54, "parent": [54, 309, 310, 330, 341], "thei": [19, 54, 75, 194, 195, 196, 309, 318, 330], "do": [54, 118, 194, 195, 304, 305, 309, 315, 318, 329, 333, 335], "except": [54, 61, 72, 304], "github_token_for_poli": [54, 315], "doe": [54, 194, 195], "try": [54, 304, 316, 317], "without": [54, 104, 106, 286, 305, 329, 334, 335], "rate": 54, "limit": [54, 259, 310, 315], "60": 54, "request": [54, 309], "per": 54, "hour": 54, "anonym": [54, 315], "To": [54, 304, 306, 307, 308, 309, 310, 318, 335], "token": [54, 167, 205, 210, 225, 227, 304, 315, 332, 335, 342, 343], "like": [54, 106, 118, 246, 304, 305, 308, 314, 325, 329, 330, 332, 333, 334, 335, 336], "follow": [9, 19, 54, 74, 304, 305, 306, 308, 309, 310, 315, 316, 317, 318, 321, 324, 325, 328, 329, 332, 334, 335, 340], "instruct": [54, 267, 304, 305, 332], "here": [54, 304, 307, 309, 315, 328, 333, 335, 341], "en": [54, 258, 328, 332], "authent": [54, 60, 61], "keep": [54, 80, 235, 316, 317], "your": [5, 54, 118, 305, 308, 309, 310, 314, 315, 316, 317, 318, 321, 324, 330, 333], "account": 54, "secur": 54, "person": [54, 315], "fine": [54, 306], "grain": 54, "get_repo": 55, "release_2023_09": 55, "068441957858f786c227825d90eb2c43f4f2b000": 55, "internet": 56, "reproduc": 56, "purpos": 56, "make": [56, 235, 306, 308, 309, 310, 315, 334, 335, 341], "sure": [56, 306, 308, 309, 310, 315, 330, 334, 335], "malici": 56, "being": [56, 235, 308, 310, 315], "filepath": 57, "read_mod": 57, "rb": 57, "md5": [57, 310], "hex": 57, "digest": 57, "open": [57, 200, 201, 309, 330], "binari": [57, 76, 118, 137, 144, 150, 309, 315, 316, 317], "form": [9, 57, 309], "mode": [57, 77], "read": [57, 76, 169, 309, 330, 334], "hex_digest": 57, "txt": [57, 76, 80, 304, 308, 309, 315, 316, 317, 330], "d41d8cd98f00b204e9800998ecf8427": 57, "wrap": [58, 59, 335], "interprocess": [58, 59], "commun": [5, 58, 59, 60, 103, 304], "kwargs_for_factori": [60, 104, 106], "connect": [60, 61, 72, 178], "inter": 60, "These": [60, 304, 307, 309, 310, 311, 315, 325, 328, 330, 332], "inner": 60, "up": [60, 61, 305, 313, 314, 329, 330, 335], "listen": 60, "random": [60, 94, 95, 96, 97, 104, 106, 305, 307, 329, 332, 334, 336, 337, 340, 341, 343], "subprocess": [60, 309], "expect": [5, 60, 75, 76, 77, 80, 118, 137, 144, 150, 304, 309, 315, 316, 317, 318, 330, 335], "well": [60, 306, 309, 313, 333, 334, 336], "other": [60, 205, 210, 304, 308, 328, 330, 333, 334, 335], "objective_factori": [60, 286, 304, 306, 310, 315, 316, 317, 318, 321, 324, 330, 332, 334, 335, 336, 340], "determin": 60, "client": 61, "get": [61, 71, 84, 304, 305, 309, 310, 311, 329, 330, 332, 334, 335], "eoferror": 61, "host": 61, "readi": [61, 162], "yet": [61, 304, 329], "connectionrefusederror": 61, "refus": 61, "attempt": 61, "establish": [61, 72], "retri": 61, "befor": [61, 69, 328, 334, 335], "conda_environ": 69, "cwd": [69, 70, 309], "activ": [69, 304, 306, 307, 310, 315, 318, 330], "ad": [69, 118, 286, 314, 330, 335], "current": [69, 310, 316, 317, 318, 324, 332, 333], "either": [70, 116, 122, 219, 309, 310, 315, 316, 317, 318, 321, 324, 330, 340], "mother": [71, 72], "receiv": 72, "wait": [72, 335], "occur": 72, "sent": [72, 230], "back": [72, 223], "quit": [72, 304, 310, 332], "messag": [72, 104], "encod": [74, 165, 166, 178, 179, 315, 316, 317], "For": [74, 80, 118, 161, 192, 200, 201, 259, 291, 304, 307, 309, 314, 315, 318, 325, 330, 332, 333, 335, 337], "amino_acid": 74, "n": [74, 115, 116, 117, 259, 303, 306, 307, 309, 310, 321, 325, 326, 330], "d": [74, 200, 201, 237, 253, 303, 308, 325, 330], "c": [74, 115, 116, 117, 303, 306, 309, 313, 319, 320, 321, 330, 333, 335], "q": [74, 303, 330], "h": [74, 109, 110, 111, 228, 233, 303, 330, 335], "k": [74, 121, 204, 217, 218, 249, 303, 330], "m": [74, 167, 200, 201, 303, 309, 330], "p": [74, 303, 330], "v": [74, 76, 330], "measur": [75, 161, 309, 319, 320], "stabil": [75, 76, 139, 143, 144, 146, 149, 200, 201, 212, 214, 303, 306, 307, 309, 311, 316, 333], "sasa": [75, 76, 132, 136, 137, 138, 146, 149, 150, 151, 212, 214, 307, 311, 316, 317], "foldxinterfac": 75, "queri": [75, 304, 305, 312, 313, 314, 315, 316, 317, 319, 320, 321, 324, 325, 326, 329, 335], "heavili": [5, 75, 309], "inspir": [75, 309], "wai": [19, 75, 305, 306, 309, 310, 316, 317, 329, 330, 332, 333], "lambo": [75, 118, 124, 192, 194, 195, 196, 307, 309, 311, 328], "automat": [75, 106, 303, 304, 308, 318], "acceler": [75, 124, 192, 194, 195, 303], "bayesian": [75, 124, 192, 194, 195, 291, 303, 305, 307, 329], "biolog": [75, 124, 192, 194, 195, 303], "design": [75, 115, 116, 117, 124, 178, 192, 194, 195, 303, 304, 305, 308, 311, 313, 328, 329, 332, 335], "withdenois": 75, "autoencod": [75, 124, 178, 192, 194, 195, 303, 336], "stanton": [75, 124, 192, 194, 195, 303, 307, 308, 309, 318, 328], "samuel": [75, 124, 192, 194, 195, 303], "weslei": [75, 124, 192, 194, 195, 303], "maddox": [75, 124, 192, 194, 195, 303], "nate": [75, 124, 192, 194, 195, 303], "gruver": [75, 124, 192, 194, 195, 303], "phillip": [75, 124, 192, 194, 195, 303], "maffetton": [75, 124, 192, 194, 195, 303], "emili": [75, 124, 192, 194, 195, 303], "delanei": [75, 124, 192, 194, 195, 303], "peyton": [75, 124, 192, 194, 195, 303], "greensid": [75, 124, 192, 194, 195, 303], "andrew": [75, 124, 192, 194, 195, 303], "gordon": [75, 124, 192, 194, 195, 303], "wilson": [75, 124, 192, 194, 195, 303], "arxiv": [75, 124, 192, 194, 195, 303], "juli": [75, 124, 192, 194, 195], "ab": [75, 124, 192, 194, 195, 303], "2203": [75, 124, 192, 194, 195, 303], "12742": [75, 124, 192, 194, 195, 303], "samuelstanton": [75, 118, 315, 318], "working_dir": [76, 309], "interact": [76, 309], "engin": [76, 237, 336], "softwar": [76, 307, 308], "where": [76, 109, 110, 111, 179, 304, 305, 307, 309, 321, 329, 333], "store": [76, 310, 328, 333], "pdb_file": 76, "remove_and_renam": 76, "ph": [76, 309, 316, 317], "remove_heteroatom": 76, "_repair_if_necessary_and_provide_path": 76, "_simulate_mut": 76, "_read_energi": 76, "_compute_sasa": 76, "solvent": [76, 132, 137, 138, 146, 150, 151, 212, 303, 307, 309, 311], "surfac": [76, 132, 137, 138, 146, 150, 151, 212, 307, 309, 311, 316], "area": [76, 132, 137, 138, 146, 150, 151, 212, 307, 309, 311, 316], "compute_st": 76, "structur": [76, 82, 83, 84, 118, 144, 309, 314, 330], "compute_sasa": 76, "compute_stability_and_sasa": 76, "singl": [76, 80, 200, 201, 237, 303, 307, 310, 311, 319, 320, 328, 330, 336, 340], "copy_foldx_fil": 76, "copi": [76, 304, 305, 309, 329, 341], "write_mutations_to_fil": 76, "wildtype_resiud": 76, "output_dir": 76, "write": [76, 118, 304, 306, 309, 314, 322, 323, 327, 330, 331, 335, 338, 339], "stdout": 76, "previou": [76, 104, 106, 309, 330, 334], "reli": [76, 286, 325], "rotabas": [76, 308, 309, 315, 316, 317], "longer": 76, "manipul": [77, 304, 306, 307], "accord": [77, 160, 309, 332, 335], "certain": [77, 304, 307, 309, 313, 334], "first": [77, 78, 80, 304, 309, 310, 312, 328, 329, 334, 335], "letter": [77, 80, 109, 110, 111, 307, 309, 311, 312, 335], "second": [77, 78, 80, 170, 309, 334, 335], "posit": [77, 78, 80, 159, 164, 305, 309, 310, 328, 329, 332], "third": [77, 80], "chain": [77, 80, 309], "fourth": [77, 80], "mutant": [77, 79, 80, 200, 201, 305, 309, 329], "foldxsuit": [77, 308, 309], "crg": [77, 308, 309], "eu": [77, 308, 309], "string_1": 78, "string_2": 78, "edit": [78, 200, 201, 310], "oper": [78, 308, 334], "assertionerror": [78, 334], "abc": 78, "abd": 78, "def": [78, 304, 305, 329, 330, 335], "wildtype_pdb_fil": [79, 316, 317], "mutated_residue_str": [79, 80], "return_hamming_dist": 79, "find": [79, 109, 110, 111, 118, 304, 310, 313, 314, 330, 332, 334], "closest": 79, "ham": 79, "distanc": [79, 80, 110, 310, 312], "along": 79, "best": [79, 305, 328, 329, 337, 341], "candid": [79, 305], "found": [79, 306, 309, 328, 332, 335], "bio": [80, 83, 84, 309], "individual_list": [80, 309], "levenshtein": [80, 316, 317], "track": [80, 303], "written": 80, "line": [80, 307, 309], "ea1r": 80, "still": [80, 304, 333], "need": [9, 80, 118, 304, 308, 309, 314, 315, 316, 317, 318, 328, 330, 334], "dummi": 80, "itself": [80, 304, 306], "ecd": 80, "acd": 80, "would": [80, 304, 309, 310, 330, 335], "ea1a": 80, "load": [81, 105, 153, 161, 170, 234, 309, 330], "them": [81, 118, 291, 304, 305, 306, 309, 310, 311, 314, 329, 332], "path_to_pdb": [82, 83, 84], "structure_nam": [82, 83, 84], "done": [84, 118, 309, 315, 318, 332], "quietli": 84, "some": [84, 174, 196, 291, 306, 307, 309, 315, 318, 325, 330, 332, 335], "get_structur": [84, 309], "pdbparser": [84, 309], "numpi": [96, 226, 304, 306, 307, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 330, 333, 335, 336, 340, 341, 342, 343], "obj": [], "dynam": 304, "intern": [303, 304, 321, 324], "constructor": [], "factory_kwarg": [], "processwrapp": 103, "how": [118, 267, 304, 305, 306, 307, 309, 311, 328, 329, 330, 332, 334, 335], "objective_nam": [], "loop": [286, 303, 336], "process_wrapp": 103, "observer_init_info": 104, "force_regist": [104, 106, 316, 317, 321], "force_isol": [104, 106, 116, 122, 137, 144, 150, 184, 196, 219], "instantiant": 104, "associ": [104, 303, 328, 333], "caller": [104, 106, 330], "forward": [104, 106, 330], "logger": [104, 106], "ask": [104, 106, 318], "confirm": [104, 106], "By": [104, 144, 205, 210, 256, 304, 305, 316, 317, 334, 336, 340], "onc": [104, 304, 332, 334, 335], "round": [104, 262, 303], "down": 104, "give": [104, 224, 291, 304, 335], "config": 105, "configpars": 105, "just": [106, 304, 315, 316, 317, 318, 328, 330, 334, 335], "One": [106, 308, 332], "aloha": [106, 306, 307, 311, 328, 329, 332, 335, 341], "arrai": [106, 156, 157, 166, 167, 223, 226, 228, 304, 306, 307, 310, 312, 313, 314, 316, 317, 319, 320, 324, 325, 326, 328, 330, 332, 333, 335], "reshap": [106, 305, 319, 335, 336, 340], "simpl": [109, 110, 111, 115, 116, 117, 160, 204, 205, 209, 210, 304, 305, 328, 329, 332, 334, 335], "goal": [109, 110, 111, 235], "o": [109, 110, 111, 312, 313, 330, 333, 335], "among": [109, 110, 111, 308, 309, 334], "poli__bas": [109, 255, 261], "yml": [109, 118, 255, 261, 310, 315, 318, 335], "simultan": [110, 116, 122, 205, 210, 219, 310], "map": [110, 116], "symbol": [110, 116], "main": [5, 110, 205, 210, 305, 306, 307, 308, 309, 329, 330, 335], "api": [115, 116, 117, 306, 315], "assess": [115, 116, 117, 200, 201, 311], "small": [115, 116, 117, 205, 304, 306, 313, 314, 321, 330, 332, 334], "protein": [115, 116, 117, 136, 143, 144, 149, 200, 201, 214, 303, 306, 308, 310, 313, 314, 332, 333], "easi": [115, 116, 117, 303, 309, 332, 334], "molecular": [115, 116, 117, 136, 143, 149, 214, 303], "better": [115, 116, 117, 303, 309], "benchmark": [19, 115, 116, 117, 237, 255, 259, 303, 307, 311], "ligand": [115, 116, 117, 303, 307, 311, 313], "garc\u00eda": [115, 116, 117, 303, 307, 313], "orteg\u00f3n": [115, 116, 117, 303, 307, 313], "miguel": [115, 116, 117, 303, 307], "gregor": [115, 116, 117, 303], "simm": [115, 116, 117, 303], "austin": [115, 116, 117, 303], "tripp": [115, 116, 117, 303], "jos\u00e9": [115, 116, 117, 200, 201, 303], "hern\u00e1ndez": [115, 116, 117, 303], "lobato": [115, 116, 117, 303], "andrea": [115, 116, 117, 303], "bender": [115, 116, 117, 303], "sergio": [115, 116, 117, 303], "bacallado": [115, 116, 117, 303], "journal": [115, 116, 117, 303], "62": [115, 116, 117, 303], "15": [115, 116, 117, 303, 341], "august": [115, 116, 117, 303], "3486": [115, 116, 117, 303], "3502": [115, 116, 117, 303], "1021": [115, 116, 117, 303], "ac": [115, 116, 117, 303], "jcim": [115, 116, 117, 303], "1c01334": [115, 116, 117, 303], "target_nam": [116, 313, 333], "string_represent": [116, 122, 205, 210, 219, 318, 319, 320], "liter": [116, 122, 184, 205, 210, 219, 259], "There": [118, 328, 330], "sever": [118, 237, 246, 255, 309, 310, 334, 335], "prepare_receptor": 118, "rest": [118, 330, 332], "descript": [118, 310, 330, 335], "show": [118, 306, 309, 328, 335], "center": [118, 314], "websit": [118, 314], "scripp": 118, "edu": 118, "uncompress": [118, 314], "add": [118, 161, 224, 304, 315, 316, 317, 318, 329], "export": [118, 314], "autodock_vina": [118, 314], "bin": [118, 314], "bashrc": [118, 314], "zshrc": [118, 314], "bash": 118, "In": [118, 192, 196, 303, 305, 306, 309, 310, 314, 315, 316, 317, 318, 324, 325, 328, 329, 330, 332, 333, 334, 335, 337, 341], "ccsb": 118, "sh": [118, 314, 335], "thu": [118, 314], "might": [118, 237, 304, 306, 309, 314, 315, 316, 317, 318, 325, 328, 330, 335], "chang": [118, 136, 143, 149, 153, 170, 214, 306, 308, 309, 314, 316, 317, 325], "its": [9, 19, 118, 305, 309, 310, 314, 316, 329, 333, 334, 335], "permiss": [118, 314], "chmod": [118, 314], "abl": [118, 304, 306, 308, 309, 314, 330, 332, 333, 335], "pyscreen": [118, 307, 314], "howev": [118, 310, 314, 335], "sometim": [118, 314], "problemat": [118, 314], "ha": [118, 246, 304, 305, 309, 314, 328, 329, 333, 335, 337], "symlink": [118, 314], "ln": [118, 314], "sf": [118, 314], "easili": [118, 309, 328, 334], "env": [118, 304, 306, 310, 315, 318, 328, 332, 333, 335], "src": [118, 310, 315, 318], "ddr3_dock": 118, "task": [118, 121, 124, 170, 303, 309, 315, 318, 336], "git": [118, 304, 306, 307, 315, 318, 335], "clone": [118, 306, 310, 315, 318, 324], "431b052": [118, 315, 318], "cd": [118, 306, 315, 318], "particular": [118, 196, 212, 315, 325, 328, 330, 333, 334, 335], "proxy_rfp": [118, 315], "proxyrfptask": [118, 315], "rfp": [118, 124, 126, 127, 212, 307, 311], "asset": [118, 315], "fpbase": [118, 315], "And": [118, 328, 335], "now": [118, 304, 306, 309, 332, 335], "py": [5, 118, 259, 305, 306, 309, 328, 329, 330, 332, 333, 334, 335], "query_exampl": 118, "ddr3": 121, "et": [121, 217, 218, 303, 307, 308, 309, 310, 311, 313, 314, 318, 321, 328, 336, 340, 341], "al": [121, 217, 218, 237, 259, 303, 307, 308, 309, 310, 311, 313, 314, 318, 321, 325, 328, 336, 340, 341], "nat": [121, 217, 218], "biol": [121, 217, 218], "1036": [121, 217, 218], "self": [122, 304, 305, 310, 329, 330, 335], "tdcblackbox": [], "denois": [124, 192, 194, 195, 303], "alia": [], "base_candid": [], "specifc": [], "predict": [132, 160, 161, 181, 200, 201, 303, 307, 309, 311, 336], "pair": [136, 149, 214], "biopython": [136, 143, 149, 214, 309, 316, 317, 333], "cock": [136, 143, 149, 214], "pa": [136, 143, 149, 214], "antao": [136, 143, 149, 214], "jt": [136, 143, 149, 214], "chapman": [136, 143, 149, 214], "ba": [136, 143, 149, 214], "cox": [136, 143, 149, 214], "cj": [136, 143, 149, 214], "dalk": [136, 143, 149, 214], "friedberg": [136, 143, 149, 214], "hamelryck": [136, 143, 149, 214], "kauff": [136, 143, 149, 214], "wilczynski": [136, 143, 149, 214], "b": [136, 143, 149, 214, 228, 304, 306, 312, 324, 325, 326, 330, 332, 335], "de": [136, 143, 149, 214, 303], "hoon": [136, 143, 149, 214], "mjl": [136, 143, 149, 214], "2009": [136, 143, 149, 214, 307], "freeli": [136, 143, 149, 214], "tool": [136, 143, 149, 214, 316, 317, 333, 335], "bioinformat": [136, 143, 149, 214], "25": [136, 143, 149, 214], "1422": [136, 143, 149, 214], "1423": [136, 143, 149, 214], "usual": [5, 252, 255, 304, 305, 307, 311, 325, 330, 334, 335, 336], "eager": [137, 150], "v5": [137, 144, 150], "compil": [137, 144, 150, 180, 310], "specif": [137, 144, 150, 325, 332], "foldxblackbox": [], "pre": [143, 305, 306, 310, 316, 317, 333], "20": [144, 303], "shown": 144, "core": [144, 304, 305, 327, 328, 329, 334, 335, 341], "through": [144, 305, 306, 329, 332], "total": [144, 160, 309], "cba": [153, 170, 172], "vae": [153, 170, 172, 173, 179, 180, 184, 230, 232, 233, 336], "sb": [153, 170], "bo": 153, "minor": [153, 170], "modif": [153, 170], "conduct": [153, 170], "rm": [153, 170], "creator": [153, 170], "last": [153, 170, 309], "x_aa": [156, 157, 166], "aa_idx": 156, "arn": [156, 157], "becom": [156, 157, 309], "row": [156, 157, 309], "base_seq": 158, "wild": [158, 163, 309], "mtuation": 158, "xt_p": [159, 164], "categor": [159, 164, 182, 232, 233], "probabl": [159, 164], "distribut": [159, 164, 182, 233, 303, 337], "pred": 160, "xt": 160, "predictor": 160, "balaji": 160, "lakshminarayanan": 160, "paper": [160, 172, 303, 333], "scalabl": 160, "uncertainti": [160, 336], "estim": [160, 192, 207, 209, 210, 211, 306, 307, 311], "deep": [160, 200, 201, 303, 336], "ensembl": 160, "2017": [160, 303, 310], "varianc": 160, "random_st": [161, 168], "train_siz": [161, 168], "5000": 161, "return_test": [161, 168], "return_al": 161, "gfp": [161, 162, 163, 169], "test": [161, 237, 305, 325, 329], "ground": 161, "truth": 161, "gp": [161, 184, 185], "partit": [161, 168, 319], "below": [161, 310, 316, 317], "20th": 161, "percentil": [161, 168], "nois": [161, 260, 261, 262, 296, 307, 311, 332], "data_df": 162, "panda": [162, 169, 309], "datafram": [162, 169, 309], "functional_onli": [162, 184], "ignore_stop": [162, 184], "return_str": 162, "raw": 162, "sampl": [164, 229, 303, 326, 330, 336, 342, 343], "aa_str": 165, "pad": [165, 167, 224, 304], "hot": [165, 228], "onehot": 166, "alphabet_s": [166, 305, 329], "dna_str": 167, "base_ord": 167, "atcg": 167, "40": 168, "1000": [168, 334], "df_save_fil": 169, "bright": 169, "author": [170, 192, 307], "credit": 170, "herculean": 170, "go": [170, 307, 308, 335], "aa": [171, 172, 173], "mimic": 172, "kera": [172, 178], "latent_dimension": [172, 173], "enc1_unit": [172, 173, 180], "train": [174, 232], "gaussian": [174, 261, 262, 303, 307, 311, 326, 336], "regress": 174, "sarkisyan": 174, "2016": [174, 303, 336], "plu": [174, 341], "constant": [174, 325], "input_shap": [178, 179], "latent_dim": [178, 179, 180], "variat": [178, 336], "via": [178, 303, 330], "latent": [178, 305, 329, 336], "space": [178, 225, 291, 305, 329, 336, 340], "flatten": [179, 305, 328, 329], "basic": [179, 286, 332, 335], "layer": 179, "n_token": 180, "seq_length": 180, "50": [180, 337], "eps_std": 180, "y_true": [181, 182], "y_pred": [181, 182], "likelihood": 182, "uniqu": [184, 330], "problem_typ": [184, 185], "exact": [192, 305, 310, 329, 335], "logp": [192, 194, 195, 196, 202, 204, 205, 307, 311], "jointli": 192, "quantit": [192, 207, 209, 210, 211, 306, 307, 311], "druglik": [192, 207, 209, 210, 211, 306, 307, 311], "qed": [192, 205, 207, 209, 210, 211, 307, 311], "penal": [192, 196, 307, 311], "solubl": [192, 202, 204, 205, 307, 311], "fair": 192, "comparison": [192, 330], "_exactly_": [194, 195], "adjust": 196, "magic": 196, "empir": [196, 318], "standard": [19, 196, 261, 262, 318, 326], "deviat": [196, 318], "dataset": [196, 237, 303, 318], "todo": [196, 309, 322, 323, 327, 331, 338, 339], "rapid": [200, 201, 303, 307, 311], "sourc": [200, 201, 304], "bird": [200, 201], "ey": [200, 201], "view": [200, 201, 309], "collect": [200, 201, 236, 307, 310], "site": [200, 201, 328, 332, 333], "reader": [200, 201], "consid": [200, 201, 310, 325, 335], "drop": [200, 201, 310, 328, 332], "rosetta": [200, 201, 310], "learn": [200, 201, 303, 310], "blaabjerg": [200, 201, 303, 307, 310], "lass": [200, 201, 303], "maher": [200, 201, 303], "kassem": [200, 201, 303], "lydia": [200, 201, 303], "good": [200, 201, 303, 304, 306, 307, 335], "nicola": [200, 201, 303], "jonsson": [200, 201, 303], "matteo": [200, 201, 303], "cagiada": [200, 201, 303], "kristoff": [200, 201, 303], "johansson": [200, 201, 303], "wouter": [200, 201, 303], "boomsma": [200, 201, 303, 310], "ameli": [200, 201, 303], "stein": [200, 201, 303], "kresten": [200, 201, 303], "lindorff": [200, 201, 303], "larsen": [200, 201, 303], "faraldo": [200, 201], "g\u00f3mez": [200, 201, 303, 336], "detlef": [200, 201], "weigel": [200, 201], "nir": [200, 201], "ben": [200, 201], "tal": [200, 201], "julian": [200, 201], "echav": [200, 201], "elif": [200, 201, 303], "2023": [200, 201, 303, 307, 308, 310], "e82593": [200, 201, 303], "7554": [200, 201, 303], "82593": [200, 201, 303], "whose": [204, 209, 261, 315, 336], "quotient": [204, 307, 311], "descriptor": [204, 335], "both": [204, 209, 309, 316, 317, 334, 335], "poli__chem": [], "want": [304, 305, 309, 310, 316, 317, 332, 334, 335], "local": [246, 305, 306, 324, 330], "environemnt": [], "extra": [304, 333], "interest": [306, 309, 310, 316, 317, 324, 325, 330, 332], "molfromsmil": [205, 210], "known": [19, 205, 210, 319, 328], "silent": [205, 210], "nan": [205, 210], "someth": [205, 210, 304], "than": [205, 210, 291, 334, 335], "continu": [19, 209, 211, 236, 237, 255, 256, 291, 303, 311, 332], "lipinski": [209, 211], "rule": [209, 211, 304], "strongli": [], "advic": 304, "heurist": 211, "discard": 211, "too": 211, "heavi": [211, 304], "pareto": 212, "front": 212, "accessibl": 215, "sa": [215, 307, 311], "toi": [221, 236, 237, 255, 256, 259, 260, 262, 291, 312, 330, 334, 341], "avout": 221, "super": [221, 235, 304, 305, 311, 329, 335], "mario": [221, 225, 232, 235, 311, 335], "bro": [221, 235, 311, 335], "level": [221, 223, 224, 225, 226, 227, 228, 229, 235, 309, 311], "n_pad": 224, "left": 224, "room": 224, "agent": 224, "land": 224, "clean": [225, 309], "remov": [225, 308, 316, 317, 335], "11": [225, 228, 233, 306, 313, 333], "empti": 225, "level_txt": [226, 227], "n_sprite": [228, 233], "integ": [228, 229, 305, 325, 326, 329, 332, 335], "levels_onehot": 229, "probit": 229, "tensor_level": 230, "torch": [230, 335], "tensor": 230, "level_s": 230, "14": [230, 233], "could": [230, 304, 305, 309, 310, 315, 316, 317, 328, 329, 332, 335, 340], "mariogan": 230, "jar": [230, 304], "prob_matrix": 231, "item": [231, 301], "sentenc": 233, "shape": [9, 233, 304, 305, 306, 312, 324, 325, 326, 329, 332], "z_dim": 233, "devic": 233, "path_to_state_dict": 234, "vaemario": 234, "pretrain": 234, "landscap": 237, "signatur": 237, "sign": [237, 325], "flip": [237, 325], "becaus": [237, 333, 335], "re": [237, 306, 309, 310, 329, 330, 335], "deal": 237, "ali": [237, 303], "roomi": [237, 259, 303, 307, 325], "2015": [237, 303, 307, 325], "unconstrain": [237, 259, 303], "www": [237, 303], "halifax": 237, "nova": 237, "scotia": 237, "canada": 237, "dalhousi": 237, "univers": 237, "electr": 237, "surjanov": [237, 307], "bingham": [237, 307], "virtual": 237, "sfu": 237, "ca": 237, "ssurjano": 237, "linebo": [243, 325, 340], "kirschnj": 243, "xy": [246, 250, 251], "cross": 246, "trai": 246, "maxima": [246, 250], "quilt": 246, "pattern": 246, "2d": [246, 250, 251, 291], "alpha": [249, 306, 336], "veri": 250, "flat": 250, "pi": 250, "egg": 251, "holder": 251, "especi": [251, 307], "difficult": 251, "know": [251, 309, 328], "optima": [251, 259], "squar": 252, "norm": 252, "shift": 252, "awai": [252, 310], "bit": [252, 309], "normal": [253, 303, 333, 337], "903534": 253, "39": [253, 315], "16599": 253, "divid": 253, "dimens": [255, 256, 259, 291, 303, 325, 336], "focu": [255, 309, 328, 332], "ones": 255, "dimension": [255, 291, 303], "function_nam": [256, 325, 336, 337, 340], "n_dimens": [256, 325, 336, 337, 340], "embed_in": [256, 259, 325], "randomli": [256, 305, 325, 328, 329, 332, 341, 342, 343], "embed": [256, 291, 325], "emb": [256, 291, 325], "toycontinuousproblem": 256, "bound": 256, "lower": [256, 291], "upper": 256, "seri": 258, "testb": 258, "wikipedia": 258, "wiki": 258, "test_functions_for_optim": 258, "ackley_function_01": [259, 307, 311, 325, 336, 337, 340], "alpine_01": [259, 325], "alpine_02": [259, 325], "bent_cigar": [259, 325], "brown": [259, 325], "chung_reynold": [259, 325], "cosine_mixtur": [259, 325], "deb_01": [259, 325], "deb_02": [259, 325], "deflected_corrugated_spr": [259, 325], "styblinski_tang": 259, "shifted_spher": [259, 325], "easom": [259, 307, 311, 325], "cross_in_trai": [259, 325], "egg_hold": [259, 325], "camelback_2d": [259, 325], "n_dim": 259, "definit": [259, 325], "white": [260, 261, 296, 307, 311, 332], "vector": 262, "downward": 262, "exemplifi": 286, "Not": 286, "come": [9, 286, 313, 332, 334], "benefit": 286, "intellisens": 286, "spawn": [287, 304], "higher": [291, 309], "afford": 291, "intrins": 291, "actual": [291, 325], "readm": [], "verbatum": [], "fullnam": 301, "escap": 301, "underlin": 301, "block": 301, "rubric": 301, "endfor": 301, "endif": 301, "endblock": 301, "ar15": 303, "url": [303, 307], "bkj": 303, "maximilian": 303, "balandat": [303, 336, 340], "brian": 303, "karrer": 303, "daniel": 303, "jiang": 303, "daulton": 303, "benjamin": 303, "letham": 303, "eytan": 303, "bakshi": 303, "botorch": [303, 307, 336, 340], "framework": 303, "effici": [303, 330, 336], "mont": 303, "carlo": 303, "decemb": 303, "2020": [303, 307, 336, 340, 341], "1910": 303, "06403": 303, "cs": 303, "math": 303, "stat": 303, "bkg": 303, "23": [303, 306], "bf17": 303, "je": 303, "frellsen": [303, 310], "spheric": 303, "convolut": 303, "applic": 303, "guyon": 303, "u": [303, 330], "von": 303, "luxburg": 303, "bengio": 303, "wallach": 303, "fergu": 303, "vishwanathan": 303, "garnett": 303, "editor": 303, "advanc": 303, "neural": [303, 310], "system": [303, 308, 309], "volum": 303, "30": [303, 325], "curran": 303, "inc": 303, "proceed": 303, "neurip": 303, "cc": [303, 313, 333], "paper_fil": 303, "1113d7a76ffceca1bb350bfe145467c6": 303, "pdf": 303, "dpam02": 303, "deb": [303, 341], "pratap": 303, "agarw": 303, "meyarivan": 303, "fast": 303, "elitist": 303, "multiobject": 303, "genet": [303, 341], "nsga": 303, "ii": 303, "ieee": 303, "transact": 303, "evolutionari": [303, 305, 307, 329, 337], "182": 303, "197": 303, "april": 303, "2002": [303, 341], "1109": 303, "4235": 303, "996017": 303, "gfsc22": 303, "matter": 303, "practic": 303, "thirti": 303, "sixth": 303, "confer": 303, "openreview": 303, "net": 303, "forum": 303, "yczrdi0y7g": 303, "gost": 303, "22": [303, 309], "dockstr": [303, 307, 311, 328, 332, 333], "gpb": 303, "jacob": 303, "gardner": [303, 336], "geoff": 303, "pleiss": 303, "david": [303, 337], "bindel": 303, "kilian": 303, "weinberg": 303, "gpytorch": [303, 336], "blackbox": 303, "matrix": [303, 337], "infer": 303, "gpu": 303, "2018": [303, 307, 336], "gbwd": 303, "rafael": 303, "bombarelli": [303, 336], "jennif": 303, "wei": 303, "duvenaud": 303, "benjam\u00edn": 303, "s\u00e1nchez": 303, "lengel": 303, "denni": 303, "sheberla": 303, "jorg": 303, "aguilera": 303, "iparraguirr": 303, "timothi": 303, "hirzel": 303, "ryan": 303, "adam": 303, "al\u00e1n": 303, "driven": 303, "central": 303, "268": 303, "276": 303, "februari": 303, "acscentsci": 303, "7b00572": 303, "ho96": 303, "hansen": [303, 337], "ostermei": [303, 337], "arbitrari": 303, "evolut": [303, 341], "strategi": [303, 307, 337], "covari": [303, 337], "312": 303, "317": 303, "1996": [303, 337], "icec": 303, "542381": 303, "hfg": 303, "21": [303, 328, 332], "machin": 303, "drug": [303, 332], "discoveri": 303, "develop": [303, 304, 305, 329], "fifth": 303, "2021": [303, 314, 321], "8nvgnornowr": 303, "jrhernandezgarcia": 303, "moksh": 303, "jain": [303, 308], "sharath": 303, "chandra": 303, "raparthi": 303, "alex": 303, "hern": 303, "\u00e1": 303, "ndez": 303, "garc": 303, "\u0131": 303, "jarrid": 303, "rector": 303, "brook": [303, 307], "yoshua": 303, "santiago": 303, "miret": 303, "emmanuel": 303, "gf": 303, "low": [19, 303], "kraus": 303, "emma": 303, "brunskil": 303, "kyunghyun": 303, "cho": 303, "barbara": 303, "engelhardt": 303, "sivan": 303, "sabato": 303, "jonathan": 303, "scarlett": 303, "40th": 303, "202": 303, "14631": 303, "14653": 303, "pmlr": 303, "29": 303, "jul": 303, "mlr": 303, "press": 303, "v202": 303, "jain23a": 303, "kmh": 303, "19": 303, "johann": 303, "kirschner": [303, 340], "mojmir": 303, "mutni": 303, "nicol": 303, "hiller": 303, "rasmu": 303, "ischebeck": 303, "safe": 303, "high": [19, 303], "subspac": 303, "36th": 303, "3429": 303, "3438": 303, "2019": [303, 307, 340], "v97": 303, "kirschner19a": 303, "ssw": 303, "16": [303, 309], "bobak": 303, "shahriari": [303, 336], "kevin": 303, "swerski": 303, "ziyu": 303, "wang": 303, "nando": 303, "freita": 303, "human": [303, 336], "out": [303, 312, 319, 320, 325, 326, 332, 336], "review": 303, "104": 303, "148": 303, "175": 303, "januari": 303, "jproc": 303, "2494218": 303, "sr73": 303, "shrake": [303, 309], "ruplei": [303, 309], "exposur": 303, "atom": 303, "lysozym": 303, "insulin": 303, "79": 303, "351": 303, "371": 303, "sep": 303, "1973": [303, 309], "1016": 303, "0022": 303, "2836": 303, "73": 303, "90011": 303, "smg": 303, "preprint": 303, "blankdeb20": 303, "blank": [303, 341], "pymoo": [303, 341], "89497": 303, "89509": 303, "tutori": [304, 309, 328, 330, 334, 335, 336], "cover": 304, "what": [304, 328, 334], "look": [304, 305, 329, 335], "poli": [304, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 333, 334, 336, 337, 340, 341, 342, 343], "live": [304, 333], "goe": [304, 309, 335], "exactli": [304, 305, 315, 318, 329], "doesn": [304, 330, 333], "mani": [9, 304, 341], "think": 304, "project": [304, 309], "ll": [304, 308, 309, 332, 334], "carri": 304, "let": [304, 306, 309, 328, 330, 332, 333, 335], "super_mario_bro": [304, 307, 328, 332], "pt": [304, 310], "level_util": 304, "md": [304, 305], "As": [304, 309, 328, 333, 335], "don": [304, 307, 313, 333], "end": [304, 309, 330, 334], "ignor": 304, "altern": 304, "averag": 304, "abstract_black_box": [304, 335], "abstract_problem_factori": [304, 335], "problem_setup_inform": [330, 335], "pythonpath": [], "runtim": [304, 335], "imagin": [], "your_local_depend": [], "yourblackbox": [], "your_arg": 304, "your_second_arg": 304, "your_kwarg": 304, "yourproblemfactori": [], "chapter": [305, 306, 307, 309, 329, 330, 332, 334, 335], "your_problem": 304, "problem_info": [324, 330, 332, 335], "__name__": [304, 310, 334, 335], "__main__": [304, 310, 334, 335], "registri": [304, 334], "register_problem": [304, 335], "your_problem_factori": [], "your_env": 304, "That": [304, 315], "camel_cas": 304, "under": [304, 306, 308, 314, 325, 335], "tell": 304, "though": 304, "sai": [304, 309, 325, 328, 333, 335], "channel": [304, 335], "machinelearninglifesci": [304, 305, 306, 307, 335], "dev": [304, 306, 307, 309], "java": [304, 335], "poli__mario": 304, "forg": 304, "pytorch": 304, "openjdk": 304, "cpuonli": 304, "click": [304, 307, 311, 332], "moreov": [304, 305, 329], "googl": [304, 307], "colab": [304, 307], "put": [304, 309, 341], "describ": [9, 304, 309, 315, 318, 321, 332, 334], "register": [], "get_problem": [328, 332, 334, 335], "your_arg_1": 304, "mayb": 304, "your_arg_2": 304, "your_factori": 304, "thereof": 304, "At": [19, 309, 330, 332, 335], "point": [304, 309, 330, 332, 335, 336], "wrote": [], "direct": 340, "life": 310, "debug": [306, 310, 324], "vscode": [], "available_problem_factori": 304, "importerror": 304, "share": [304, 305, 306], "feel": [304, 305, 309], "contribut": [304, 305], "case": [305, 306, 309, 312, 324, 325, 326, 328, 329, 330, 332, 335], "poli_baselin": [305, 306, 328, 332, 334, 336, 337, 340, 341, 342, 343], "almost": [305, 329], "trivial": [305, 306, 329, 332, 335], "complic": [305, 329, 333], "likewis": [305, 329], "explain": [305, 329, 330], "abstractsolv": [305, 328, 329], "abstract_solv": [305, 328, 329], "black_box": [305, 306, 312, 313, 314, 319, 320, 325, 326, 328, 329, 330, 332, 334, 336, 337, 340, 341, 342, 343], "histori": [305, 328, 329, 332, 342, 343], "x0_i": 305, "y0_i": 305, "ingredi": [305, 309, 328, 329], "next_candid": [305, 328, 329, 332], "propos": [305, 329, 332], "solv": [305, 328, 329, 332, 334, 335, 336, 337, 340, 341, 342, 343], "max_it": [305, 328, 329, 332, 334, 336, 337, 340, 341, 342, 343], "next": [305, 307, 309, 328, 329, 330, 332, 334, 335], "solut": [305, 319, 329, 341], "notimplementederror": [305, 329], "subclass": [304, 305, 329], "100": [305, 329, 332, 341, 342, 343], "rang": [305, 306, 326, 329], "callback": 305, "pre_step_callback": 305, "turn": 305, "updat": [305, 328, 330, 332, 337], "_": [305, 306, 336, 337, 340, 341], "post": 305, "post_step_callback": 305, "get_best_perform": [305, 328], "break_at_perform": [305, 334], "break": [305, 334], "leverag": [305, 329], "fact": [305, 329], "simplest": [305, 328, 329], "random_mut": [305, 328, 329, 332, 334], "len": [305, 329], "best_x": [305, 329], "argmax": [305, 329], "alwai": [305, 312, 325, 326, 329, 333, 335], "next_x": [305, 329], "po": [305, 329], "randint": [305, 329], "choic": [305, 329, 341], "pretti": [305, 309, 329], "lean": [305, 329], "notic": [305, 318, 329, 330], "sort": [305, 324, 329, 341], "logic": [5, 304, 305, 329, 330, 333], "noth": [305, 328, 329], "worri": [305, 307, 329, 335], "slightli": [305, 329, 335], "unfortun": [306, 313], "linux": [306, 313, 333], "maco": [306, 313], "top": [306, 307, 332], "therefor": [306, 333], "anaconda": 306, "went": 306, "okai": [306, 310], "anoth": [306, 309, 328, 332], "right": [306, 330, 333], "bleed": 306, "edg": 306, "while": [235, 306, 328], "stabl": [306, 328, 332], "releas": [306, 309], "shell": [304, 306, 335], "home": [306, 308, 309, 315, 316, 317], "poli_object": [304, 306, 310, 335], "phase": 306, "short": [306, 309], "futur": [306, 309], "everyth": [306, 308, 330], "requisit": 306, "openbabel": [306, 313], "white_nois": [306, 326, 328, 332], "minimal_working_exampl": 306, "plenti": 306, "complex": [5, 304, 306, 309], "rasp": [307, 310, 311, 328, 332], "pytdc": 307, "accces": 307, "featur": [307, 310], "clash": [307, 309], "discuss": [307, 330, 332, 334, 335], "baselin": [307, 328, 330, 332, 333, 334, 336, 341], "place": [307, 308, 309], "fresh": 307, "full": [307, 309], "drawn": [307, 311], "unit": [307, 311], "word": [307, 311, 335], "spell": [307, 311], "3pbl": [307, 311, 314], "implmenet": [307, 311], "fluoresc": [307, 309, 311, 328], "On": 307, "focus": 307, "cma": 307, "es": 307, "vanilla": 307, "acquisit": [307, 336, 340], "over": 307, "encourag": 307, "gonzalezduquebartelsmichael": 307, "2024": [307, 309], "gonz\u00e1lez": 307, "duqu": 307, "bartel": 307, "simon": 307, "michael": 307, "richard": 307, "month": 307, "jan": 307, "titl": 307, "libari": 307, "year": 307, "drd3_dock": [307, 328, 332], "graff": 307, "shakhnovich": 307, "foldx_": 307, "gfp_cba": [307, 328, 332], "park": 307, "listgarten": 307, "gfp_select": [307, 328, 332], "penalized_logp_lambo": [307, 318, 328, 332], "rdkit_": 307, "rfp_foldx_": 307, "sa_tdc": [304, 307, 321, 328, 332], "ertl": 307, "schuffenhau": 307, "volz": 307, "toy_continuous_problem": [306, 307, 328, 332, 336, 340], "2013": 307, "coupl": [307, 335], "guid": 307, "subset": [308, 325, 337], "suit": [304, 308], "thing": [304, 308, 309, 333, 335], "dg": 308, "metric": [235, 308], "recent": 308, "academ": 308, "licens": 308, "zip": 308, "auxiliari": 308, "renam": [308, 309, 315, 316, 317], "help": 308, "mac": [308, 333], "warn": [308, 333], "unverifi": 308, "quarantin": 308, "command": [308, 309, 316, 317], "own": [5, 304, 308], "risk": 308, "xattr": 308, "appl": 308, "familiar": 309, "ourselv": 309, "alreadi": [309, 328, 332], "refresh": 309, "essenti": [309, 330], "notebook": 309, "pathlib": [309, 310, 315, 316, 317, 321, 328, 330], "shutil": 309, "path_to_foldx_fil": 309, "this_dir": [309, 310, 330], "resolv": [309, 310, 328, 330], "tmp": 309, "mkdir": [309, 330], "copyfil": 309, "respons": 309, "transport": 309, "oxigen": 309, "sperm": 309, "whale": 309, "101m": 309, "hand": 309, "urllib": 309, "web_address": 309, "rcsb": 309, "urlretriev": 309, "Of": [309, 332], "cours": [235, 309, 332], "long": [309, 328, 335], "aid": 309, "pdb_name": 309, "choos": 309, "repairpdb": [309, 316, 317], "littl": 309, "consumig": 309, "400sec": 309, "build": [309, 332, 335, 336], "101m_repair": 309, "repair_cmd": 309, "water": [309, 316, 317, 319], "crystal": [309, 316, 317], "tree": 309, "fxout": 309, "unrecognized_molecul": 309, "onward": [309, 336], "inspect": [309, 310], "parser": 309, "get_residu": 309, "dive": [5, 309, 332, 334], "first_residu": 309, "resnam": 309, "index": 309, "get_par": 309, "met": 309, "extract": 309, "sequtil": 309, "seq1": 309, "original_residu": 309, "chain_id": 309, "position_in_sequ": 309, "mutant_residu": 309, "glycin": 309, "Be": [309, 310], "care": [309, 328, 333], "fire": 309, "did": 309, "modifi": [304, 309], "mutation_list": 309, "residue_idx": 309, "li": 309, "tranform": 309, "position_in_chain": 309, "content": 309, "indiviual_list": 309, "ma0g": 309, "won": 309, "buildmodel": 309, "gibb": 309, "foldx_cmd": 309, "consortium": 309, "jesper": 309, "freder": 309, "joost": 309, "lui": 309, "peter": 309, "vanhe": 309, "erik": 309, "verschueren": 309, "baeten": 309, "javier": 309, "delgado": 309, "francoi": 309, "permut": 309, "concept": 309, "raphael": 309, "gueroi": 309, "backhbond": 309, "142": 309, "58": 309, "sidehbond": 309, "48": 309, "61": 309, "energy_vdw": 309, "179": 309, "63": 309, "electro": 309, "energy_solvp": 309, "245": 309, "28": [309, 310], "energy_solvh": 309, "238": 309, "89": 309, "energy_vdwclash": 309, "42": 309, "energy_tors": 309, "70": 309, "backbone_vdwclash": 309, "158": 309, "entropy_sidec": 309, "105": 309, "87": 309, "entropy_mainc": 309, "231": 309, "69": 309, "bond": 309, "00": 309, "helix": 309, "dipol": 309, "75": 309, "loop_entropi": 309, "cis_bond": 309, "disulfid": 309, "kn": 309, "electrostat": 309, "partial": 309, "coval": 309, "energy_ionis": 309, "56": 309, "entropi": 309, "32": 309, "meta0": 309, "gly": 309, "ok": 309, "wed": 309, "feb": 309, "44": 309, "52": 309, "spend": 309, "96": 309, "valid": 309, "101m_repair_1": 309, "successfulli": 309, "completedprocess": 309, "sjt972": [309, 328, 332, 333], "understanding_foldx": 309, "01": 309, "returncod": 309, "average_101m_repair": 309, "dif_101m_repair": 309, "pdblist_101m_repair": 309, "raw_101m_repair": 309, "wt_101m_repair_1": 309, "raw_": 309, "_repair": [309, 316, 317], "tabl": 309, "quantiti": 309, "column_nam": 309, "backbon": 309, "hbond": 309, "sidechain": 309, "van": 309, "der": 309, "waal": 309, "solvat": 309, "polar": 309, "hydrophob": 309, "mainchain": 309, "sloop_entropi": 309, "mloop_entropi": 309, "torsion": 309, "bridg": 309, "kon": 309, "ionis": 309, "pd": 309, "readlin": 309, "df": 309, "split": 309, "column": 309, "var": 309, "l3": 309, "qk9dx6g958765kmn_2wn34t00000gn": 309, "ipykernel_25734": 309, "1758354106": 309, "deprecationwarn": 309, "pyarrow": 309, "major": 309, "arrow": 309, "interoper": 309, "caus": 309, "pleas": [309, 328, 332, 333], "issu": 309, "54466": 309, "overal": 309, "31": 309, "7457": 309, "34": 309, "3436": 309, "notat": 309, "stand": [309, 332, 335], "again": 309, "wt_structur": 309, "mut_structur": 309, "pdb1": 309, "shrakeruplei": 309, "attach": [309, 330], "8407": 309, "731560227876": 309, "8439": 309, "063468009845": 309, "impact": 309, "databas": 309, "desir": [309, 332], "lesser": 309, "stabler": 309, "correl": 309, "present": [309, 335], "supervis": 310, "approach": 310, "network": [310, 336], "drawback": 310, "similar": 310, "foldx_stabl": [310, 317, 328, 332], "awar": [310, 336], "scale": [310, 325], "easier": 310, "poli__rasp": 310, "correct": [310, 316, 317, 318, 324, 335], "breakpoint": 310, "satisfi": 310, "root": [310, 315, 318], "3ned": [310, 328], "__file__": 310, "wildtype_pdb_paths_for_rasp": 310, "f_rasp": 310, "wildtype_str": 310, "join": [310, 328], "three": [310, 330, 332], "three_mut": 310, "wildtype_sequ": 310, "ddg": 310, "approx": 310, "03": 310, "07": 310, "clang": 310, "cmake": 310, "reduc": 310, "pin": 310, "hash": 310, "bd23a0bf627ae9b08842102a5c2e9404b4a81924": 310, "cavity_model_15": 310, "ds_model": 310, "3ccebe87e017b6bd737f88e1943557d128c85616": 310, "against": [310, 313], "checksum": 310, "satur": 310, "mutagenesi": 310, "pmo": 311, "jump": [235, 311], "cap": 312, "prepar": 313, "autodock": 313, "vina": 313, "suppos": 313, "batteri": 313, "even": [313, 335], "poli__dockstr": 333, "canon": 314, "risperidon": [313, 333], "dockstringproblemfactori": 313, "drd2": [313, 333], "risperidone_smil": [], "cc1": [313, 333], "n2ccccc2": [313, 333], "n1": [313, 333], "ccn3ccc": [313, 333], "cc3": [313, 333], "c4": [313, 333], "noc5": [313, 333], "c4c": [313, 333], "c5": [313, 333], "handl": [316, 317, 333], "hood": 314, "abov": [314, 315, 318, 321, 334, 335], "success": 314, "underneath": [315, 318, 321], "poli__tdc": 321, "text": [315, 316, 317, 335], "foldx_rfp_lambo": [315, 318, 328, 332], "poli__lambo": [315, 318], "avali": 315, "skip": 315, "decid": 315, "11189": 315, "00587946": 315, "8155": 315, "acces": [316, 321], "foldx_stability_and_sasa": [316, 317, 328, 332], "v4": [316, 317], "filenam": [316, 317], "cach": [316, 317], "your_fil": [316, 317], "heteroatom": [316, 317], "pdbtool": [316, 317], "Then": [316, 317], "foldx_sasa": [316, 328, 332], "poli__protein": [316, 317, 333], "carefulli": 318, "zinc": 318, "coeffici": 319, "octanol": 319, "rdkit_logp": [328, 332], "carbon": [319, 320], "6361": 319, "rdkit_q": [328, 332], "35978494": [], "assert": 334, "isclos": [], "8548": 321, "run_info": 324, "link": 324, "peopl": 325, "sum_": 325, "x_d": 325, "saasbo": 325, "assumpt": 325, "roughli": 325, "speak": 325, "question": 325, "30d": 325, "dimensions_to_embed_in": 325, "mathcal": 326, "But": 327, "idea": 327, "rc": [], "sit": [], "rfp_foldx_stability_and_sasa": [328, 332], "stick": 328, "red": 328, "explor": [328, 336], "ls": 328, "3ned_repair": 328, "optimizing_protein_st": 328, "ipynb": 328, "mrogu": 328, "hopefulli": [], "remind": [], "forgot": [], "traceback": [], "138": [], "typeerror": [], "got": [], "unexpect": [], "176": [], "145": [], "cell": [], "439": [], "437": [], "438": [], "__create_as_isolated_process": [], "440": [], "441": [], "442": [], "443": [], "444": [], "445": [], "446": [], "447": [], "448": [], "449": [], "problem_inform": [], "451": [], "278": [], "tb": [], "msg": [], "277": [], "279": [], "280": [], "281": [], "msg_type": [], "282": [], "five": [], "section": [328, 334, 335], "select": [328, 332, 340], "alter": 328, "special": [328, 332], "n_iter": 328, "178": [], "76": [], "267": [], "80": [], "13": [], "374": [], "65": [], "17": [], "146": [], "340": [], "27": [], "77": 333, "41": [], "na194f": [], "asna194": [], "193": [], "phe": [], "fri": [], "09": [], "51": [], "54": [], "3ned_repair_1": [], "qa114": [], "glna114": [], "113": [], "ser": [], "da3m": [], "aspa3": [], "kei": [306, 328, 334], "get_best_solut": [328, 332, 334, 341, 342, 343], "41639": [], "0629": [], "5983": [], "1298": [], "eednmaiikefmrfkthmegsvnghefeiegegegrpyegtqtaklkvtkggplpfawdilspqfskayvkhpadipdylklsfpegfkwervmnfedggvvtvtqdsslsdgefiykvklrgtnfpsdgpvmqkktmgweacsermypedgalkgemkmrlklkdgghydaevkttykakkpvqlpgayftntklditshnedytiveqyernegrhstggmdelyk": [], "appli": 329, "part": [330, 333], "compar": [330, 333], "qualiti": 330, "save": 330, "json": 330, "mlflow": 330, "weight": 330, "bias": 330, "abstract_observ": 330, "skeleton": 330, "simpleobserv": 330, "init": 330, "servic": 330, "wandb": 330, "adjac": 330, "identifi": 330, "uuid4": 330, "metadata": 330, "uuid": 330, "experiment_path": 330, "as_dict": 330, "recal": 330, "tolist": 330, "dump": 330, "curiou": 330, "rememb": [330, 335], "invent": 330, "wheel": 330, "tensorboard": 330, "fp": 330, "snippet": [330, 334], "scenario": 330, "z": 330, "were": [330, 333], "accordingli": 330, "migu": 330, "flea": [330, 335], "showcas": 330, "behind": 330, "saw": 330, "overwritten": 330, "deeper": [5, 332, 334], "intro": 332, "treat": 332, "anyth": [], "further": [], "page": [332, 335], "randommut": [332, 334, 342, 343], "anaconda3": [328, 332, 333], "docs2": [328, 332], "lib": [328, 332, 333], "python3": [328, 332, 333], "tqdm": [328, 332], "auto": [328, 332], "tqdmwarn": [328, 332], "iprogress": [328, 332], "jupyt": [328, 332], "ipywidget": [328, 332], "readthedoc": [328, 332], "io": [328, 332], "user_instal": [328, 332], "autonotebook": [328, 332], "notebook_tqdm": [328, 332], "16173153": [], "dtype": 332, "u1": 332, "talk": 332, "babel": 333, "No": 333, "freez": 333, "grep": 333, "135": [], "dynamically_instanti": [], "102": [], "92": [], "exec": [], "modulenotfounderror": [], "critic": [], "opt": [], "homebrew": [], "condabin": [], "autodock_vina_1_1_2_mac_catalina_64bit": [], "usr": [], "cryptex": [], "app": [], "sbin": [], "cryptexd": [], "codex": [], "bootstrap": [], "appleintern": [], "tex": [], "texbin": [], "cargo": [], "using_poli": [], "the_bas": [], "python39": [], "dynload": [], "externalblackbox": [], "num_evalu": [], "dockstringwarn": 333, "although": 333, "perfectli": 333, "match": [333, 335], "platform": 333, "report": 333, "f_logp": [], "x0_logp": [], "y0_logp": [], "logpblackbox": 319, "combin": 334, "optimizing_aloha": 334, "01_a_simple_example_of_optim": 334, "our_aloha": [334, 335], "past": [304, 334], "haven": 334, "realli": 334, "Its": 334, "summari": 334, "less": 334, "conclud": 334, "takeawai": 334, "independ": 334, "why": 334, "registering_aloha": 335, "search": [335, 336], "aloof": 335, "syntax": 335, "ouralohablackbox": 335, "sum": 335, "axi": 335, "keepdim": 335, "get_max_sequence_length": 335, "x_0": 335, "alohablackbox": [312, 335], "ascii_uppercas": 335, "ouralohaproblemfactori": 335, "interpret": 335, "poli_aloha": 335, "poli_aloha_problem": 335, "yourself": 335, "aloha_problem_factori": 335, "somewher": 335, "workhors": 335, "querying_aloha": 335, "emphas": 335, "amaz": 335, "x1": 335, "y1": 335, "subtl": 335, "cheminformat": 335, "mechan": 335, "solver": [335, 336, 337, 340, 341, 342, 343], "approxim": 336, "tild": 336, "boldsymbol": [336, 337], "surrog": 336, "render": 336, "smartli": 336, "balanc": 336, "exploit": 336, "grid": 336, "vanillabayesianoptim": 336, "f_acklei": [336, 340], "randn": [336, 340], "clip": [336, 340], "bo_solv": 336, "great": 336, "mostli": 336, "intent": 336, "adversari": 336, "gan": 336, "maintain": [5, 337], "mu": 337, "sigma": 337, "member": 337, "introduct": 337, "blogpost": 337, "pycma": 337, "cma_e": 337, "toycontinuousproblemfactori": [325, 337], "population_s": [337, 341], "initial_mean": 337, "initial_sigma": 337, "restrict": 340, "coordin": 340, "singletaskgp": 340, "type_of_lin": 340, "non": 341, "domin": 341, "mate": 341, "procedur": 341, "upon": 341, "alohaproblemfactori": [312, 341, 342, 343], "multi_objective_black_box": 341, "multiobjectiveblackbox": 341, "discretensgaii": 341, "hyperparamet": 341, "max_iter": 341, "num_mut": 341, "f_aloha": 341, "togeth": 341, "popul": 341, "56267": [], "846902": [], "39441": [], "eednmaiikefmrfkthmegsvnghefeiegegegrpyegtqtaklkvtkggplpfawdilspqfskayvkhpadipdylklsfpegfkwervmnfedggvvtvtqdsslqdgefiykvklrgtnfpsdgpvmqkktmgweacsermypedgalkgemkmrlklkdgghydaevkttykakkpvqlpgayntntklditshnedytiveqyernegrhstggmdelyk": [], "258": [], "userwarn": [], "Will": [], "env_nam": [], "269": [], "compat": 5, "abstractisolatedfunct": [5, 304, 333], "externalfunct": 5, "external_isolated_function_script": 5, "properti": 9, "fix": [9, 304], "fidel": [19, 330], "noisi": 19, "etc": 19, "black_box_inform": [21, 304], "blackboxinform": [21, 304, 326, 328], "abstractproblem": 104, "plan": [122, 219], "elbo": 184, "n_starting_point": 184, "playabl": 235, "checklist": 304, "pai": 304, "attent": 304, "my_problem_nam": 304, "desc": 304, "boilerpl": 304, "my_problem_inform": 304, "fixed_length": [304, 326, 330], "determinist": [304, 326, 328, 330], "potenti": 304, "padding_token": [304, 326, 330], "entri": 304, "rout": 304, "whatev": 304, "one_depend": 304, "another_depend": 304, "yet_another_depend": 304, "complicatedclass": 304, "abstract_isolated_funct": 304, "myisolatedlog": 304, "register_isolated_funct": 304, "my_problem_name__isol": 304, "__isol": 304, "conda_env_inside_environment_fil": 304, "instance_function_as_isolated_process": 304, "my_problem_info": 304, "myblackbox": 304, "my_problem": 304, "inner_funct": [304, 333], "weren": 304, "problem_name__isol": 304, "static": 304, "staticmethod": 304, "get_black_box_info": 304, "myproblemfactori": 304, "my_problem_factori": 304, "available_black_box": [304, 306], "dict_kei": 306, "whitenoiseblackbox": [326, 332], "08390547": 332, "properli": 328, "foldxstabilityproblemfactori": 328, "foldxstabilityblackbox": 328, "46959": 328, "4687": 328, "14886": 328, "56841": 328, "eednmaiikefmrfkthmegsvnghefeiegegegrpyegtqtaklkvtkggplpfawdilspqfskayvkhpadipdylklsfpegfkwervmnfedggvvtvtqdsslqdgefiykvklrgtnfpsdgpvmqkktmgweacsermypedgalkgimkmrlklkdgghydaevkttykakkpvqlpgayntntklditshnedytiveqyernegrhstggmdelyk": 328, "dockstringblackbox": [313, 333], "submodul": 333, "multiprocess": 333, "qedproblemfactori": 320, "qedblackbox": 320, "35978": 320, "toycontinuousblackbox": 325, "whitenoiseproblemfactori": 326, "logpproblemfactori": 319, "drd3problemfactori": 314, "drd3blackbox": 314, "c1ccccc1": 314}, "objects": {"": [[0, 0, 0, "-", "poli"]], "poli": [[1, 0, 0, "-", "core"], [102, 0, 0, "-", "objective_factory"], [107, 0, 0, "-", "objective_repository"], [264, 0, 0, "-", "registered_objectives"], [265, 0, 0, "-", "tests"]], "poli.core": [[2, 0, 0, "-", "abstract_black_box"], [5, 0, 0, "-", "abstract_isolated_function"], [6, 0, 0, "-", "abstract_problem_factory"], [9, 0, 0, "-", "black_box_information"], [10, 0, 0, "-", "chemistry"], [14, 0, 0, "-", "exceptions"], [17, 0, 0, "-", "multi_objective_black_box"], [19, 0, 0, "-", "problem"], [20, 0, 0, "-", "problem_setup_information"], [22, 0, 0, "-", "proteins"], [26, 0, 0, "-", "registry"], [35, 0, 0, "-", "util"]], "poli.core.abstract_black_box": [[3, 1, 1, "", "AbstractBlackBox"], [4, 1, 1, "", "NegativeBlackBox"]], "poli.core.abstract_black_box.AbstractBlackBox": [[3, 2, 1, "", "__call__"], [3, 2, 1, "", "__del__"], [3, 2, 1, "", "__enter__"], [3, 2, 1, "", "__exit__"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "__neg__"], [3, 2, 1, "", "_black_box"], [3, 3, 1, "", "batch_size"], [3, 3, 1, "", "num_workers"], [3, 3, 1, "", "observer"], [3, 3, 1, "", "observer_info"], [3, 3, 1, "", "parallelize"], [3, 2, 1, "", "reset_evaluation_budget"], [3, 2, 1, "", "set_observer"], [3, 2, 1, "", "terminate"]], "poli.core.abstract_black_box.NegativeBlackBox": [[4, 2, 1, "", "__init__"]], "poli.core.abstract_problem_factory": [[7, 1, 1, "", "AbstractProblemFactory"], [8, 1, 1, "", "MetaProblemFactory"]], "poli.core.abstract_problem_factory.AbstractProblemFactory": [[7, 2, 1, "", "__init__"]], "poli.core.abstract_problem_factory.MetaProblemFactory": [[8, 2, 1, "", "__init__"]], "poli.core.chemistry": [[13, 0, 0, "-", "tdc_isolated_function"]], "poli.core.exceptions": [[15, 4, 1, "", "BudgetExhaustedException"], [16, 4, 1, "", "PoliException"]], "poli.core.multi_objective_black_box": [[18, 1, 1, "", "MultiObjectiveBlackBox"]], "poli.core.multi_objective_black_box.MultiObjectiveBlackBox": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "_black_box"], [18, 3, 1, "", "objective_functions"]], "poli.core.problem_setup_information": [[21, 1, 1, "", "ProblemSetupInformation"]], "poli.core.problem_setup_information.ProblemSetupInformation": [[21, 2, 1, "", "__init__"]], "poli.core.proteins": [[23, 0, 0, "-", "foldx_black_box"], [25, 0, 0, "-", "foldx_isolated_function"]], "poli.core.proteins.foldx_black_box": [[24, 1, 1, "", "FoldxBlackBox"]], "poli.core.proteins.foldx_black_box.FoldxBlackBox": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "create_working_directory"], [24, 3, 1, "", "experiment_id"], [24, 3, 1, "", "tmp_folder"], [24, 3, 1, "", "wildtype_amino_acids"], [24, 3, 1, "", "wildtype_pdb_paths"], [24, 3, 1, "", "wildtype_residue_strings"], [24, 3, 1, "", "wildtype_residues"]], "poli.core.registry": [[27, 5, 1, "", "delete_observer_run_script"], [28, 5, 1, "", "delete_problem"], [31, 5, 1, "", "register_problem"], [32, 5, 1, "", "register_problem_from_repository"], [33, 5, 1, "", "set_observer"], [34, 5, 1, "", "set_observer_run_script"]], "poli.core.util": [[36, 0, 0, "-", "abstract_observer"], [38, 0, 0, "-", "alignment"], [40, 0, 0, "-", "batch"], [43, 0, 0, "-", "chemistry"], [50, 0, 0, "-", "external_observer"], [52, 0, 0, "-", "files"], [58, 0, 0, "-", "inter_process_communication"], [62, 0, 0, "-", "isolation"], [67, 0, 0, "-", "objective_management"], [71, 0, 0, "-", "observer_wrapper"], [73, 0, 0, "-", "proteins"], [94, 0, 0, "-", "seeding"]], "poli.core.util.abstract_observer": [[37, 1, 1, "", "AbstractObserver"]], "poli.core.util.abstract_observer.AbstractObserver": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "finish"], [37, 2, 1, "", "observe"]], "poli.core.util.alignment": [[39, 0, 0, "-", "is_aligned"]], "poli.core.util.batch": [[41, 0, 0, "-", "batch_input"]], "poli.core.util.batch.batch_input": [[42, 5, 1, "", "batched"]], "poli.core.util.chemistry": [[44, 0, 0, "-", "string_to_molecule"]], "poli.core.util.chemistry.string_to_molecule": [[45, 5, 1, "", "selfies_to_molecules"], [46, 5, 1, "", "smiles_to_molecules"], [47, 5, 1, "", "strings_to_molecules"], [48, 5, 1, "", "translate_selfies_to_smiles"], [49, 5, 1, "", "translate_smiles_to_selfies"]], "poli.core.util.external_observer": [[51, 1, 1, "", "ExternalObserver"]], "poli.core.util.external_observer.ExternalObserver": [[51, 2, 1, "", "__getattr__"], [51, 2, 1, "", "__init__"], [51, 2, 1, "", "finish"], [51, 2, 1, "", "initialize_observer"], [51, 2, 1, "", "observe"]], "poli.core.util.files": [[53, 0, 0, "-", "download_files_from_github"], [56, 0, 0, "-", "integrity"]], "poli.core.util.files.download_files_from_github": [[54, 5, 1, "", "download_file_from_github_repository"], [55, 5, 1, "", "get_sha_for_tag"]], "poli.core.util.files.integrity": [[57, 5, 1, "", "compute_md5_from_filepath"]], "poli.core.util.inter_process_communication": [[59, 0, 0, "-", "process_wrapper"]], "poli.core.util.inter_process_communication.process_wrapper": [[60, 1, 1, "", "ProcessWrapper"], [61, 5, 1, "", "get_connection"]], "poli.core.util.inter_process_communication.process_wrapper.ProcessWrapper": [[60, 2, 1, "", "__init__"]], "poli.core.util.isolation": [[63, 0, 0, "-", "external_black_box"], [64, 0, 0, "-", "external_function"], [65, 0, 0, "-", "instancing"], [66, 0, 0, "-", "isolated_black_box"]], "poli.core.util.objective_management": [[68, 0, 0, "-", "make_run_script"]], "poli.core.util.objective_management.make_run_script": [[69, 5, 1, "", "make_observer_script"], [70, 5, 1, "", "make_run_script"]], "poli.core.util.observer_wrapper": [[72, 5, 1, "", "start_observer_process"]], "poli.core.util.proteins": [[74, 0, 0, "-", "defaults"], [75, 0, 0, "-", "foldx"], [77, 0, 0, "-", "mutations"], [81, 0, 0, "-", "pdb_parsing"], [85, 0, 0, "-", "rasp"]], "poli.core.util.proteins.foldx": [[76, 1, 1, "", "FoldxInterface"]], "poli.core.util.proteins.foldx.FoldxInterface": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "_compute_sasa"], [76, 2, 1, "", "_read_energy"], [76, 2, 1, "", "_repair_if_necessary_and_provide_path"], [76, 2, 1, "", "_simulate_mutations"], [76, 2, 1, "", "compute_sasa"], [76, 2, 1, "", "compute_stability"], [76, 2, 1, "", "compute_stability_and_sasa"], [76, 2, 1, "", "copy_foldx_files"], [76, 2, 1, "", "repair"], [76, 3, 1, "", "verbose"], [76, 3, 1, "", "working_dir"], [76, 2, 1, "", "write_mutations_to_file"]], "poli.core.util.proteins.mutations": [[78, 5, 1, "", "edits_between_strings"], [79, 5, 1, "", "find_closest_wildtype_pdb_file_to_mutant"], [80, 5, 1, "", "mutations_from_wildtype_residues_and_mutant"]], "poli.core.util.proteins.pdb_parsing": [[82, 5, 1, "", "parse_pdb_as_residue_strings"], [83, 5, 1, "", "parse_pdb_as_residues"], [84, 5, 1, "", "parse_pdb_as_structure"]], "poli.core.util.proteins.rasp": [[86, 0, 0, "-", "inner_rasp"], [92, 6, 1, "", "load_models"], [93, 6, 1, "", "rasp_interface"]], "poli.core.util.proteins.rasp.inner_rasp": [[87, 6, 1, "", "PrismData"], [88, 6, 1, "", "cavity_model"], [89, 6, 1, "", "helpers"], [90, 6, 1, "", "run_pipeline"], [91, 6, 1, "", "visualization"]], "poli.core.util.seeding": [[95, 0, 0, "-", "seeding"]], "poli.core.util.seeding.seeding": [[96, 5, 1, "", "seed_numpy"], [97, 5, 1, "", "seed_python"]], "poli.objective_factory": [[103, 1, 1, "", "ExternalBlackBox"], [104, 5, 1, "", "create"], [105, 5, 1, "", "load_config"], [106, 5, 1, "", "start"]], "poli.objective_factory.ExternalBlackBox": [[103, 2, 1, "", "__init__"]], "poli.objective_repository": [[108, 0, 0, "-", "aloha"], [112, 0, 0, "-", "dockstring"], [118, 0, 0, "-", "drd3_docking"], [124, 0, 0, "-", "foldx_rfp_lambo"], [132, 0, 0, "-", "foldx_sasa"], [139, 0, 0, "-", "foldx_stability"], [146, 0, 0, "-", "foldx_stability_and_sasa"], [152, 0, 0, "-", "gfp_cbas"], [186, 0, 0, "-", "gfp_select"], [192, 0, 0, "-", "penalized_logp_lambo"], [198, 0, 0, "-", "rasp"], [202, 0, 0, "-", "rdkit_logp"], [207, 0, 0, "-", "rdkit_qed"], [212, 0, 0, "-", "rfp_foldx_stability_and_sasa"], [215, 0, 0, "-", "sa_tdc"], [221, 0, 0, "-", "super_mario_bros"], [236, 0, 0, "-", "toy_continuous_problem"], [260, 0, 0, "-", "white_noise"]], "poli.objective_repository.aloha": [[109, 0, 0, "-", "register"]], "poli.objective_repository.aloha.register": [[110, 1, 1, "", "AlohaBlackBox"], [111, 1, 1, "", "AlohaProblemFactory"]], "poli.objective_repository.aloha.register.AlohaBlackBox": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "_black_box"], [110, 3, 1, "", "alphabet"]], "poli.objective_repository.aloha.register.AlohaProblemFactory": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "create"], [111, 2, 1, "", "get_setup_information"]], "poli.objective_repository.dockstring": [[113, 0, 0, "-", "information"], [114, 0, 0, "-", "isolated_function"], [115, 0, 0, "-", "register"]], "poli.objective_repository.dockstring.register": [[116, 1, 1, "", "DockstringBlackBox"], [117, 1, 1, "", "DockstringProblemFactory"]], "poli.objective_repository.dockstring.register.DockstringBlackBox": [[116, 2, 1, "", "__init__"], [116, 2, 1, "", "_black_box"], [116, 3, 1, "", "alphabet"]], "poli.objective_repository.dockstring.register.DockstringProblemFactory": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "create"], [117, 2, 1, "", "get_setup_information"]], "poli.objective_repository.drd3_docking": [[119, 0, 0, "-", "information"], [120, 0, 0, "-", "isolated_function"], [121, 0, 0, "-", "register"]], "poli.objective_repository.drd3_docking.register": [[122, 1, 1, "", "DRD3BlackBox"], [123, 1, 1, "", "DRD3ProblemFactory"]], "poli.objective_repository.drd3_docking.register.DRD3BlackBox": [[122, 2, 1, "id0", "__init__"], [122, 3, 1, "", "oracle_name"]], "poli.objective_repository.drd3_docking.register.DRD3ProblemFactory": [[123, 2, 1, "", "__init__"]], "poli.objective_repository.foldx_rfp_lambo": [[125, 0, 0, "-", "information"], [126, 0, 0, "-", "isolated_function"], [127, 0, 0, "-", "register"]], "poli.objective_repository.foldx_sasa": [[134, 0, 0, "-", "information"], [135, 0, 0, "-", "isolated_function"], [136, 0, 0, "-", "register"]], "poli.objective_repository.foldx_sasa.register": [[137, 1, 1, "", "FoldXSASABlackBox"], [138, 1, 1, "", "FoldXSASAProblemFactory"]], "poli.objective_repository.foldx_sasa.register.FoldXSASABlackBox": [[137, 2, 1, "", "__init__"]], "poli.objective_repository.foldx_sasa.register.FoldXSASAProblemFactory": [[138, 2, 1, "", "__init__"]], "poli.objective_repository.foldx_stability": [[141, 0, 0, "-", "information"], [142, 0, 0, "-", "isolated_function"], [143, 0, 0, "-", "register"]], "poli.objective_repository.foldx_stability.register": [[144, 1, 1, "", "FoldXStabilityBlackBox"], [145, 1, 1, "", "FoldXStabilityProblemFactory"]], "poli.objective_repository.foldx_stability.register.FoldXStabilityBlackBox": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "_black_box"]], "poli.objective_repository.foldx_stability.register.FoldXStabilityProblemFactory": [[145, 2, 1, "", "__init__"]], "poli.objective_repository.foldx_stability_and_sasa": [[147, 0, 0, "-", "information"], [148, 0, 0, "-", "isolated_function"], [149, 0, 0, "-", "register"]], "poli.objective_repository.foldx_stability_and_sasa.register": [[150, 1, 1, "", "FoldXStabilityAndSASABlackBox"], [151, 1, 1, "", "FoldXStabilityAndSASAProblemFactory"]], "poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASABlackBox": [[150, 2, 1, "", "__init__"]], "poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASAProblemFactory": [[151, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas": [[153, 0, 0, "-", "abstract_vae_wrapper"], [155, 0, 0, "-", "cbas_alphabet_preprocessing"], [170, 0, 0, "-", "cbas_wrapper"], [174, 0, 0, "-", "gfp_gp"], [175, 0, 0, "-", "information"], [176, 0, 0, "-", "isolated_function"], [177, 0, 0, "-", "make_vae"], [183, 0, 0, "-", "register"]], "poli.objective_repository.gfp_cbas.abstract_vae_wrapper": [[154, 1, 1, "", "AbstractVAEWrapper"]], "poli.objective_repository.gfp_cbas.abstract_vae_wrapper.AbstractVAEWrapper": [[154, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing": [[156, 5, 1, "", "convert_aas_to_idx_array"], [157, 5, 1, "", "convert_idx_array_to_aas"], [158, 5, 1, "", "convert_mutations_to_sequence"], [159, 5, 1, "", "get_argmax"], [160, 5, 1, "", "get_balaji_predictions"], [161, 5, 1, "", "get_experimental_X_y"], [162, 5, 1, "", "get_gfp_X_y_aa"], [163, 5, 1, "", "get_gfp_base_seq"], [164, 5, 1, "", "get_samples"], [165, 5, 1, "", "one_hot_encode_aa"], [166, 5, 1, "", "one_hot_encode_aa_array"], [167, 5, 1, "", "one_hot_encode_dna"], [168, 5, 1, "", "partition_data"], [169, 5, 1, "", "read_gfp_data"]], "poli.objective_repository.gfp_cbas.cbas_wrapper": [[171, 1, 1, "", "CBASVAEWrapper"], [172, 1, 1, "", "ConvertedTorchVaeDecoder"], [173, 1, 1, "", "ConvertedTorchVaeEncoder"]], "poli.objective_repository.gfp_cbas.cbas_wrapper.CBASVAEWrapper": [[171, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeDecoder": [[172, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeEncoder": [[173, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.make_vae": [[178, 1, 1, "", "BaseVAE"], [179, 1, 1, "", "SimpleVAE"], [180, 5, 1, "", "build_vae"], [181, 5, 1, "", "identity_loss"], [182, 5, 1, "", "summed_categorical_crossentropy"]], "poli.objective_repository.gfp_cbas.make_vae.BaseVAE": [[178, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.make_vae.SimpleVAE": [[179, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.register": [[184, 1, 1, "", "GFPCBasBlackBox"], [185, 1, 1, "", "GFPCBasProblemFactory"]], "poli.objective_repository.gfp_cbas.register.GFPCBasBlackBox": [[184, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.register.GFPCBasProblemFactory": [[185, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_select": [[187, 0, 0, "-", "information"], [188, 0, 0, "-", "isolated_function"], [189, 0, 0, "-", "register"]], "poli.objective_repository.gfp_select.register": [[191, 1, 1, "", "GFPSelectionProblemFactory"]], "poli.objective_repository.gfp_select.register.GFPSelectionProblemFactory": [[191, 2, 1, "", "__init__"]], "poli.objective_repository.penalized_logp_lambo": [[193, 0, 0, "-", "information"], [194, 0, 0, "-", "isolated_function"], [195, 0, 0, "-", "register"]], "poli.objective_repository.penalized_logp_lambo.register": [[196, 1, 1, "", "PenalizedLogPLamboBlackBox"], [197, 1, 1, "", "PenalizedLogPLamboProblemFactory"]], "poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboBlackBox": [[196, 2, 1, "", "__init__"]], "poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboProblemFactory": [[197, 2, 1, "", "__init__"]], "poli.objective_repository.rasp": [[199, 0, 0, "-", "information"], [200, 0, 0, "-", "isolated_function"], [201, 0, 0, "-", "register"]], "poli.objective_repository.rdkit_logp": [[203, 0, 0, "-", "information"], [204, 0, 0, "-", "register"]], "poli.objective_repository.rdkit_logp.register": [[205, 1, 1, "", "LogPBlackBox"], [206, 1, 1, "", "LogPProblemFactory"]], "poli.objective_repository.rdkit_logp.register.LogPBlackBox": [[205, 2, 1, "", "__init__"], [205, 2, 1, "", "_black_box"], [205, 3, 1, "", "from_selfies"], [205, 3, 1, "", "from_smiles"]], "poli.objective_repository.rdkit_logp.register.LogPProblemFactory": [[206, 2, 1, "", "__init__"]], "poli.objective_repository.rdkit_qed": [[208, 0, 0, "-", "information"], [209, 0, 0, "-", "register"]], "poli.objective_repository.rdkit_qed.register": [[210, 1, 1, "", "QEDBlackBox"], [211, 1, 1, "", "QEDProblemFactory"]], "poli.objective_repository.rdkit_qed.register.QEDBlackBox": [[210, 2, 1, "", "__init__"], [210, 2, 1, "", "_black_box"], [210, 3, 1, "", "from_selfies"], [210, 3, 1, "", "from_smiles"]], "poli.objective_repository.rdkit_qed.register.QEDProblemFactory": [[211, 2, 1, "", "__init__"], [211, 2, 1, "", "create"], [211, 2, 1, "", "get_setup_information"]], "poli.objective_repository.rfp_foldx_stability_and_sasa": [[213, 0, 0, "-", "information"], [214, 0, 0, "-", "register"]], "poli.objective_repository.sa_tdc": [[216, 0, 0, "-", "information"], [217, 0, 0, "-", "isolated_function"], [218, 0, 0, "-", "register"]], "poli.objective_repository.sa_tdc.register": [[219, 1, 1, "", "SABlackBox"], [220, 1, 1, "", "SAProblemFactory"]], "poli.objective_repository.sa_tdc.register.SABlackBox": [[219, 2, 1, "", "__init__"]], "poli.objective_repository.sa_tdc.register.SAProblemFactory": [[220, 2, 1, "", "__init__"], [220, 2, 1, "", "create"], [220, 2, 1, "", "get_setup_information"]], "poli.objective_repository.super_mario_bros": [[222, 0, 0, "-", "information"], [223, 0, 0, "-", "level_utils"], [232, 0, 0, "-", "model"], [235, 0, 0, "-", "register"]], "poli.objective_repository.super_mario_bros.level_utils": [[224, 5, 1, "", "add_padding_to_level"], [225, 5, 1, "", "clean_level"], [226, 5, 1, "", "level_to_array"], [227, 5, 1, "", "level_to_list"], [228, 5, 1, "", "levels_to_onehot"], [229, 5, 1, "", "onehot_to_levels"], [230, 5, 1, "", "tensor_to_sim_level"], [231, 5, 1, "", "vectorized"]], "poli.objective_repository.super_mario_bros.model": [[233, 1, 1, "", "VAEMario"], [234, 5, 1, "", "load_example_model"]], "poli.objective_repository.super_mario_bros.model.VAEMario": [[233, 2, 1, "", "__init__"]], "poli.objective_repository.toy_continuous_problem": [[237, 0, 0, "-", "definitions"], [254, 0, 0, "-", "information"], [255, 0, 0, "-", "register"], [258, 0, 0, "-", "toy_continuous_problem"]], "poli.objective_repository.toy_continuous_problem.definitions": [[238, 5, 1, "", "ackley_function_01"], [239, 5, 1, "", "alpine_01"], [240, 5, 1, "", "alpine_02"], [241, 5, 1, "", "bent_cigar"], [242, 5, 1, "", "brown"], [243, 5, 1, "", "camelback_2d"], [244, 5, 1, "", "chung_reynolds"], [245, 5, 1, "", "cosine_mixture"], [246, 5, 1, "", "cross_in_tray"], [247, 5, 1, "", "deb_01"], [248, 5, 1, "", "deb_02"], [249, 5, 1, "", "deflected_corrugated_spring"], [250, 5, 1, "", "easom"], [251, 5, 1, "", "egg_holder"], [252, 5, 1, "", "shifted_sphere"], [253, 5, 1, "", "styblinski_tang"]], "poli.objective_repository.toy_continuous_problem.register": [[256, 1, 1, "", "ToyContinuousBlackBox"], [257, 1, 1, "", "ToyContinuousProblemFactory"]], "poli.objective_repository.toy_continuous_problem.register.ToyContinuousBlackBox": [[256, 2, 1, "", "__init__"], [256, 2, 1, "", "_black_box"], [256, 3, 1, "", "bounds"], [256, 3, 1, "", "embed_in"], [256, 3, 1, "", "function"], [256, 3, 1, "", "function_name"], [256, 3, 1, "", "n_dimensions"]], "poli.objective_repository.toy_continuous_problem.register.ToyContinuousProblemFactory": [[257, 2, 1, "", "__init__"]], "poli.objective_repository.toy_continuous_problem.toy_continuous_problem": [[259, 1, 1, "", "ToyContinuousProblem"]], "poli.objective_repository.toy_continuous_problem.toy_continuous_problem.ToyContinuousProblem": [[259, 2, 1, "", "__init__"]], "poli.objective_repository.white_noise": [[261, 0, 0, "-", "register"]], "poli.objective_repository.white_noise.register": [[262, 1, 1, "", "WhiteNoiseBlackBox"], [263, 1, 1, "", "WhiteNoiseProblemFactory"]], "poli.objective_repository.white_noise.register.WhiteNoiseBlackBox": [[262, 2, 1, "", "__init__"], [262, 2, 1, "", "_black_box"]], "poli.objective_repository.white_noise.register.WhiteNoiseProblemFactory": [[263, 2, 1, "", "__init__"]], "poli.tests": [[266, 0, 0, "-", "docs_examples"], [274, 0, 0, "-", "registry"], [294, 0, 0, "-", "test_minimal_working_example"], [296, 0, 0, "-", "test_seeding"], [298, 0, 0, "-", "util"]], "poli.tests.docs_examples": [[267, 0, 0, "-", "test_objective_functions"]], "poli.tests.docs_examples.test_objective_functions": [[268, 5, 1, "", "test_aloha_example"], [269, 5, 1, "", "test_logp_example"], [271, 5, 1, "", "test_qed_example"], [273, 5, 1, "", "test_white_noise_example"]], "poli.tests.registry": [[275, 0, 0, "-", "basic_objectives"], [280, 0, 0, "-", "chemistry"], [282, 0, 0, "-", "proteins"], [286, 0, 0, "-", "test_basic_loop_without_create"], [287, 0, 0, "-", "test_force_isolation"], [288, 0, 0, "-", "test_instancing_black_boxes_alone"], [290, 0, 0, "-", "toy_continuous_problems"]], "poli.tests.registry.basic_objectives": [[276, 0, 0, "-", "test_basic_objectives"]], "poli.tests.registry.basic_objectives.test_basic_objectives": [[277, 5, 1, "", "test_registering_aloha"], [278, 5, 1, "", "test_registering_white_noise"]], "poli.tests.registry.toy_continuous_problems": [[291, 0, 0, "-", "test_embedding_problems_into_higher_dims"]], "poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims": [[292, 5, 1, "", "test_embed_camelback_into_high_dimensions"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"]}, "titleterms": {"poli": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 331, 332, 335], "core": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 330], "abstract_black_box": [2, 3, 4], "abstractblackbox": 3, "negativeblackbox": 4, "abstract_problem_factori": [6, 7, 8], "abstractproblemfactori": 7, "metaproblemfactori": 8, "chemistri": [10, 11, 12, 13, 43, 44, 45, 46, 47, 48, 49, 280, 281], "tdc_black_box": [11, 12], "tdcblackbox": 12, "except": [14, 15, 16], "budgetexhaustedexcept": 15, "poliexcept": 16, "multi_objective_black_box": [17, 18], "multiobjectiveblackbox": 18, "problem_setup_inform": [20, 21], "problemsetupinform": 21, "protein": [22, 23, 24, 25, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 282, 283, 284, 285, 307, 309, 311, 315, 316, 317, 328], "foldx_black_box": [23, 24], "foldxblackbox": 24, "registri": [26, 27, 28, 29, 30, 31, 32, 33, 34, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 335], "delete_observer_run_script": 27, "delete_problem": 28, "get_problem_factori": 29, "get_problem": 30, "register_problem": 31, "register_problem_from_repositori": 32, "set_observ": 33, "set_observer_run_script": 34, "util": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 298, 299, 300], "abstract_observ": [36, 37], "abstractobserv": 37, "align": [38, 39], "is_align": 39, "batch": [40, 41, 42, 329], "batch_input": [41, 42], "string_to_molecul": [44, 45, 46, 47, 48, 49], "selfies_to_molecul": 45, "smiles_to_molecul": 46, "strings_to_molecul": 47, "translate_selfies_to_smil": 48, "translate_smiles_to_selfi": 49, "external_observ": [50, 51], "externalobserv": 51, "file": [52, 53, 54, 55, 56, 57, 309, 314, 316, 317], "download_files_from_github": [53, 54, 55], "download_file_from_github_repositori": 54, "get_sha_for_tag": 55, "integr": [56, 57], "compute_md5_from_filepath": 57, "inter_process_commun": [58, 59, 60, 61], "process_wrapp": [59, 60, 61], "processwrapp": 60, "get_connect": 61, "objective_manag": [67, 68, 69, 70], "make_run_script": [68, 69, 70], "make_observer_script": 69, "observer_wrapp": [71, 72], "start_observer_process": 72, "default": 74, "foldx": [75, 76, 308, 315, 316, 317], "foldxinterfac": 76, "mutat": [77, 78, 79, 80, 309, 328, 342], "edits_between_str": 78, "find_closest_wildtype_pdb_file_to_mut": 79, "mutations_from_wildtype_residues_and_mut": 80, "pdb_pars": [81, 82, 83, 84], "parse_pdb_as_residue_str": 82, "parse_pdb_as_residu": 83, "parse_pdb_as_structur": 84, "rasp": [85, 86, 87, 88, 89, 90, 91, 92, 93, 198, 199, 200, 201], "inner_rasp": [86, 87, 88, 89, 90, 91], "prismdata": 87, "cavity_model": 88, "helper": 89, "run_pipelin": 90, "visual": 91, "load_model": 92, "rasp_interfac": 93, "seed": [94, 95, 96, 97], "seed_numpi": 96, "seed_python": 97, "object": [98, 99, 100, 101, 307, 311, 312, 324, 325, 326, 328, 332, 333, 334, 335], "dynamically_instanti": 99, "parse_factory_kwarg": 100, "run": [101, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 333, 336, 337, 340, 341, 342, 343], "objective_factori": [102, 103, 104, 105, 106], "externalblackbox": 103, "creat": [104, 118, 325, 332, 335], "load_config": 105, "start": [106, 306, 307], "objective_repositori": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "aloha": [108, 109, 110, 111, 312, 330, 334], "regist": [109, 110, 111, 115, 116, 117, 121, 122, 123, 127, 128, 129, 130, 131, 136, 137, 138, 143, 144, 145, 149, 150, 151, 183, 184, 185, 189, 190, 191, 195, 196, 197, 201, 204, 205, 206, 209, 210, 211, 214, 218, 219, 220, 235, 255, 256, 257, 261, 262, 263, 304, 327, 328, 334, 335], "alohablackbox": 110, "alohaproblemfactori": 111, "dockstr": [112, 113, 114, 115, 116, 117, 313], "dockstringblackbox": 116, "dockstringproblemfactori": 117, "drd3_dock": [118, 119, 120, 121, 122, 123], "prerequisit": [118, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 334], "instal": [118, 304, 306, 308, 314, 315], "autodock": [118, 314], "vina": [118, 314], "adfr": [118, 314], "suit": [118, 314], "poli__lambo": 118, "environ": [118, 304, 315, 318, 335], "drd3blackbox": 122, "drd3problemfactori": 123, "foldx_rfp_lambo": [124, 125, 126, 127, 128, 129, 130, 131], "config": 128, "rfpwrapper": 129, "rfpwrapperfactori": 130, "get_config": 131, "foldx_sasa": [132, 133, 134, 135, 136, 137, 138], "foldx_util": [133, 140], "foldxsasablackbox": 137, "foldxsasaproblemfactori": 138, "foldx_stabl": [139, 140, 141, 142, 143, 144, 145], "foldxstabilityblackbox": 144, "foldxstabilityproblemfactori": 145, "foldx_stability_and_sasa": [146, 147, 148, 149, 150, 151], "foldxstabilityandsasablackbox": 150, "foldxstabilityandsasaproblemfactori": 151, "gfp_cba": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "abstract_vae_wrapp": [153, 154], "abstractvaewrapp": 154, "cbas_alphabet_preprocess": [155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "convert_aas_to_idx_arrai": 156, "convert_idx_array_to_aa": 157, "convert_mutations_to_sequ": 158, "get_argmax": 159, "get_balaji_predict": 160, "get_experimental_x_i": 161, "get_gfp_x_y_aa": 162, "get_gfp_base_seq": 163, "get_sampl": 164, "one_hot_encode_aa": 165, "one_hot_encode_aa_arrai": 166, "one_hot_encode_dna": 167, "partition_data": 168, "read_gfp_data": 169, "cbas_wrapp": [170, 171, 172, 173], "cbasvaewrapp": 171, "convertedtorchvaedecod": 172, "convertedtorchvaeencod": 173, "gfp_gp": 174, "make_va": [177, 178, 179, 180, 181, 182], "baseva": 178, "simpleva": 179, "build_va": 180, "identity_loss": 181, "summed_categorical_crossentropi": 182, "gfpcbasblackbox": 184, "gfpcbasproblemfactori": 185, "gfp_select": [186, 187, 188, 189, 190, 191], "gfpblackbox": 190, "gfpselectionproblemfactori": 191, "penalized_logp_lambo": [192, 193, 194, 195, 196, 197], "penalizedlogplamboblackbox": 196, "penalizedlogplamboproblemfactori": 197, "rdkit_logp": [202, 203, 204, 205, 206], "logpblackbox": 205, "logpproblemfactori": 206, "rdkit_q": [207, 208, 209, 210, 211], "qedblackbox": 210, "qedproblemfactori": 211, "rfp_foldx_stability_and_sasa": [212, 213, 214], "sa_tdc": [215, 216, 217, 218, 219, 220], "sablackbox": 219, "saproblemfactori": 220, "super_mario_bro": [221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235], "level_util": [223, 224, 225, 226, 227, 228, 229, 230, 231], "add_padding_to_level": 224, "clean_level": 225, "level_to_arrai": 226, "level_to_list": 227, "levels_to_onehot": 228, "onehot_to_level": 229, "tensor_to_sim_level": 230, "vector": 231, "model": [232, 233, 234], "vaemario": 233, "load_example_model": 234, "toy_continuous_problem": [236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 290, 291, 292, 293], "definit": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253], "ackley_function_01": 238, "alpine_01": 239, "alpine_02": 240, "bent_cigar": 241, "brown": 242, "camelback_2d": 243, "chung_reynold": 244, "cosine_mixtur": 245, "cross_in_trai": 246, "deb_01": 247, "deb_02": 248, "deflected_corrugated_spr": 249, "easom": 250, "egg_hold": 251, "shifted_spher": 252, "styblinski_tang": 253, "toycontinuousblackbox": 256, "toycontinuousproblemfactori": 257, "toycontinuousproblem": 259, "white_nois": [260, 261, 262, 263], "whitenoiseblackbox": 262, "whitenoiseproblemfactori": 263, "registered_object": 264, "test": [265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 306], "docs_exampl": [266, 267, 268, 269, 270, 271, 272, 273], "test_objective_funct": [267, 268, 269, 270, 271, 272, 273], "test_aloha_exampl": 268, "test_logp_exampl": 269, "test_logp_example_using_str": 270, "test_qed_exampl": 271, "test_qed_example_using_str": 272, "test_white_noise_exampl": 273, "basic_object": [275, 276, 277, 278, 279], "test_basic_object": [276, 277, 278], "test_registering_aloha": 277, "test_registering_white_nois": 278, "test_budget_exhaust": 279, "test_chemistry_object": 281, "test_foldx": 283, "test_foldx_rfp_lambo": 284, "test_rasp": 285, "test_basic_loop_without_cr": 286, "test_force_isol": 287, "test_passing_array_of_str": 289, "test_embedding_problems_into_higher_dim": [291, 292], "test_embed_camelback_into_high_dimens": 292, "test_instancing_of_toy_continuous_problem": 293, "test_minimal_working_exampl": [294, 295], "test_seed": [296, 297], "test_seeding_in_white_nois": 297, "test_foldx_interfac": 299, "test_protein_util": 300, "api": 302, "document": 302, "refer": [303, 343], "ad": [304, 305], "new": [304, 305], "problem": [19, 304, 305, 307, 311, 325, 328, 329, 334, 335], "repositori": 304, "The": [304, 330, 332], "structur": 304, "A": 304, "gener": 304, "py": 304, "yml": 304, "why": [304, 335], "conda": [304, 306, 335], "your": [304, 306, 332, 335], "option": 333, "make": 314, "avail": [], "depend": 335, "ar": 309, "met": [], "submit": [304, 305], "pull": [304, 305], "request": [304, 305], "optim": [305, 307, 322, 328, 332, 334, 336, 339, 340, 343], "baselin": [305, 306], "an": [305, 329, 330, 334, 335], "abstract": [305, 329, 330], "solver": [305, 307, 328, 329, 332, 334], "exampl": [305, 329, 330, 335], "randommut": [305, 328, 329], "get": [306, 307], "first": 306, "script": 306, "us": [306, 307, 314, 315, 316, 317, 318, 321, 328, 332], "librari": 307, "discret": [307, 335, 341], "function": [307, 311, 312, 324, 325, 326, 328, 332, 333, 334, 335], "black": [304, 307, 326, 333, 335], "box": [304, 307, 326, 333, 335], "toi": [307, 311, 325], "small": [307, 311], "molecul": [307, 311], "algorithm": [307, 338, 343], "cite": 307, "other": [307, 309, 311, 318], "relev": 307, "work": [307, 331], "contribut": 307, "comput": 309, "energi": 309, "singl": 309, "python": [309, 315, 318, 335], "set": [309, 314], "up": 309, "folder": [309, 314], "download": [309, 314], "pdb": 309, "repair": [309, 316, 317], "what": [309, 329, 332, 333], "pars": 309, "wildtyp": 309, "defin": [309, 328, 329, 330, 335], "s": [304, 309, 335], "sasa": [309, 315], "score": 309, "conclus": [309, 330, 332, 334, 335], "rapid": 310, "stabil": [310, 315, 317, 328], "predict": 310, "how": [310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 331, 336, 337, 340, 341, 342, 343], "warn": 310, "further": 310, "read": [310, 333], "all": [311, 314, 330], "about": [312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 329, 336, 337, 340, 341, 342, 343], "drd3": 314, "dock": 314, "tdc": [314, 321], "add": [314, 335], "binari": 314, "path": [314, 335], "prepare_receptor": 314, "from": [], "sure": 314, "you": [314, 316, 317], "re": 314, "rfp": 315, "lambo": [315, 318], "we": [315, 316, 317], "can": [315, 316, 317], "automat": 315, "solvent": 316, "access": [316, 321], "penal": 318, "logp": [318, 319], "keyword": 318, "argument": 318, "log": [319, 330], "solubl": 319, "quantit": 320, "estim": 320, "druglik": 320, "qed": 320, "synthet": 321, "jump": 322, "super": 322, "mario": 322, "bro": 322, "therapeut": 323, "data": 323, "common": 323, "oracl": 323, "name": 324, "see": [324, 336, 341], "also": 324, "continu": [307, 325], "low": 325, "intrins": 325, "dimension": 325, "white": 326, "nois": 326, "observ": [327, 330], "isol": [62, 63, 64, 65, 66, 327, 333], "process": 327, "random": [328, 342], "mroug": 328, "check": 328, "result": 328, "poli_baselin": 329, "candid": 329, "want": 330, "more": [330, 333, 335, 336, 341], "complex": 330, "instanc": [65, 330, 334], "simpl": 330, "initi": 330, "put": 330, "togeth": 330, "coupl": 330, "queri": 330, "dive": 331, "deeper": 331, "doe": 331, "under": [331, 333], "hood": [331, 333], "content": [331, 332], "usual": 332, "develop": 332, "loop": 332, "identifi": 332, "own": 332, "when": [], "have": [], "right": [], "Is": 334, "factori": 335, "entir": 335, "need": 335, "where": 335, "thi": 335, "call": 335, "bayesian": [336, 339, 340], "cma": 337, "es": 337, "graph": 338, "genet": 338, "latent": 339, "space": 339, "line": 340, "nsga": 341, "2": 341, "templat": 343, "abstract_isolated_funct": 5, "black_box_inform": 9, "tdc_isolated_funct": 13, "foldx_isolated_funct": 25, "external_black_box": 63, "external_funct": 64, "isolated_black_box": 66, "inform": [113, 119, 125, 134, 141, 147, 175, 187, 193, 199, 203, 208, 213, 216, 222, 254, 304, 326], "isolated_funct": [114, 120, 126, 135, 142, 148, 176, 188, 194, 200, 217, 304], "test_instancing_black_boxes_alon": 288, "specifi": 304, "__init__": 304, "happen": 333}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 56}})