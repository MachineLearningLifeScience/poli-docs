Search.setIndex({"docnames": ["_autosummary/poli", "_autosummary/poli.core", "_autosummary/poli.core.abstract_black_box", "_autosummary/poli.core.abstract_black_box.AbstractBlackBox", "_autosummary/poli.core.abstract_black_box.NegativeBlackBox", "_autosummary/poli.core.abstract_isolated_function", "_autosummary/poli.core.abstract_problem_factory", "_autosummary/poli.core.abstract_problem_factory.AbstractProblemFactory", "_autosummary/poli.core.abstract_problem_factory.MetaProblemFactory", "_autosummary/poli.core.black_box_information", "_autosummary/poli.core.chemistry", "_autosummary/poli.core.chemistry.tdc_black_box", "_autosummary/poli.core.chemistry.tdc_black_box.TDCBlackBox", "_autosummary/poli.core.chemistry.tdc_isolated_function", "_autosummary/poli.core.exceptions", "_autosummary/poli.core.exceptions.BudgetExhaustedException", "_autosummary/poli.core.exceptions.PoliException", "_autosummary/poli.core.multi_objective_black_box", "_autosummary/poli.core.multi_objective_black_box.MultiObjectiveBlackBox", "_autosummary/poli.core.problem", "_autosummary/poli.core.problem_setup_information", "_autosummary/poli.core.problem_setup_information.ProblemSetupInformation", "_autosummary/poli.core.proteins", "_autosummary/poli.core.proteins.foldx_black_box", "_autosummary/poli.core.proteins.foldx_black_box.FoldxBlackBox", "_autosummary/poli.core.proteins.foldx_isolated_function", "_autosummary/poli.core.registry", "_autosummary/poli.core.registry.delete_observer_run_script", "_autosummary/poli.core.registry.delete_problem", "_autosummary/poli.core.registry.get_problem_factories", "_autosummary/poli.core.registry.get_problems", "_autosummary/poli.core.registry.register_problem", "_autosummary/poli.core.registry.register_problem_from_repository", "_autosummary/poli.core.registry.set_observer", "_autosummary/poli.core.registry.set_observer_run_script", "_autosummary/poli.core.util", "_autosummary/poli.core.util.abstract_observer", "_autosummary/poli.core.util.abstract_observer.AbstractObserver", "_autosummary/poli.core.util.alignment", "_autosummary/poli.core.util.alignment.is_aligned", "_autosummary/poli.core.util.batch", "_autosummary/poli.core.util.batch.batch_input", "_autosummary/poli.core.util.batch.batch_input.batched", "_autosummary/poli.core.util.chemistry", "_autosummary/poli.core.util.chemistry.string_to_molecule", "_autosummary/poli.core.util.chemistry.string_to_molecule.selfies_to_molecules", "_autosummary/poli.core.util.chemistry.string_to_molecule.smiles_to_molecules", "_autosummary/poli.core.util.chemistry.string_to_molecule.strings_to_molecules", "_autosummary/poli.core.util.chemistry.string_to_molecule.translate_selfies_to_smiles", "_autosummary/poli.core.util.chemistry.string_to_molecule.translate_smiles_to_selfies", "_autosummary/poli.core.util.external_observer", "_autosummary/poli.core.util.external_observer.ExternalObserver", "_autosummary/poli.core.util.files", "_autosummary/poli.core.util.files.download_files_from_github", "_autosummary/poli.core.util.files.download_files_from_github.download_file_from_github_repository", "_autosummary/poli.core.util.files.download_files_from_github.get_sha_for_tag", "_autosummary/poli.core.util.files.integrity", "_autosummary/poli.core.util.files.integrity.compute_md5_from_filepath", "_autosummary/poli.core.util.inter_process_communication", "_autosummary/poli.core.util.inter_process_communication.process_wrapper", "_autosummary/poli.core.util.inter_process_communication.process_wrapper.ProcessWrapper", "_autosummary/poli.core.util.inter_process_communication.process_wrapper.get_connection", "_autosummary/poli.core.util.isolation", "_autosummary/poli.core.util.isolation.external_black_box", "_autosummary/poli.core.util.isolation.external_function", "_autosummary/poli.core.util.isolation.instancing", "_autosummary/poli.core.util.isolation.isolated_black_box", "_autosummary/poli.core.util.objective_management", "_autosummary/poli.core.util.objective_management.make_run_script", "_autosummary/poli.core.util.objective_management.make_run_script.make_observer_script", "_autosummary/poli.core.util.objective_management.make_run_script.make_run_script", "_autosummary/poli.core.util.observer_wrapper", "_autosummary/poli.core.util.observer_wrapper.start_observer_process", "_autosummary/poli.core.util.proteins", "_autosummary/poli.core.util.proteins.defaults", "_autosummary/poli.core.util.proteins.foldx", "_autosummary/poli.core.util.proteins.foldx.FoldxInterface", "_autosummary/poli.core.util.proteins.mutations", "_autosummary/poli.core.util.proteins.mutations.edits_between_strings", "_autosummary/poli.core.util.proteins.mutations.find_closest_wildtype_pdb_file_to_mutant", "_autosummary/poli.core.util.proteins.mutations.mutations_from_wildtype_residues_and_mutant", "_autosummary/poli.core.util.proteins.pdb_parsing", "_autosummary/poli.core.util.proteins.pdb_parsing.parse_pdb_as_residue_strings", "_autosummary/poli.core.util.proteins.pdb_parsing.parse_pdb_as_residues", "_autosummary/poli.core.util.proteins.pdb_parsing.parse_pdb_as_structure", "_autosummary/poli.core.util.proteins.rasp", "_autosummary/poli.core.util.proteins.rasp.inner_rasp", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.PrismData", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.cavity_model", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.helpers", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.run_pipeline", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.visualization", "_autosummary/poli.core.util.proteins.rasp.load_models", "_autosummary/poli.core.util.proteins.rasp.rasp_interface", "_autosummary/poli.core.util.seeding", "_autosummary/poli.core.util.seeding.seeding", "_autosummary/poli.core.util.seeding.seeding.seed_numpy", "_autosummary/poli.core.util.seeding.seeding.seed_python", "_autosummary/poli.objective", "_autosummary/poli.objective.dynamically_instantiate", "_autosummary/poli.objective.parse_factory_kwargs", "_autosummary/poli.objective.run", "_autosummary/poli.objective_factory", "_autosummary/poli.objective_factory.ExternalBlackBox", "_autosummary/poli.objective_factory.create", "_autosummary/poli.objective_factory.load_config", "_autosummary/poli.objective_factory.start", "_autosummary/poli.objective_repository", "_autosummary/poli.objective_repository.albuterol_similarity", "_autosummary/poli.objective_repository.albuterol_similarity.information", "_autosummary/poli.objective_repository.albuterol_similarity.register", "_autosummary/poli.objective_repository.aloha", "_autosummary/poli.objective_repository.aloha.register", "_autosummary/poli.objective_repository.aloha.register.AlohaBlackBox", "_autosummary/poli.objective_repository.aloha.register.AlohaProblemFactory", "_autosummary/poli.objective_repository.amlodipine_mpo", "_autosummary/poli.objective_repository.amlodipine_mpo.information", "_autosummary/poli.objective_repository.amlodipine_mpo.register", "_autosummary/poli.objective_repository.celecoxib_rediscovery", "_autosummary/poli.objective_repository.celecoxib_rediscovery.information", "_autosummary/poli.objective_repository.celecoxib_rediscovery.register", "_autosummary/poli.objective_repository.deco_hop", "_autosummary/poli.objective_repository.deco_hop.information", "_autosummary/poli.objective_repository.deco_hop.register", "_autosummary/poli.objective_repository.dockstring", "_autosummary/poli.objective_repository.dockstring.information", "_autosummary/poli.objective_repository.dockstring.isolated_function", "_autosummary/poli.objective_repository.dockstring.register", "_autosummary/poli.objective_repository.dockstring.register.DockstringBlackBox", "_autosummary/poli.objective_repository.dockstring.register.DockstringProblemFactory", "_autosummary/poli.objective_repository.drd2_docking", "_autosummary/poli.objective_repository.drd2_docking.information", "_autosummary/poli.objective_repository.drd2_docking.register", "_autosummary/poli.objective_repository.drd3_docking", "_autosummary/poli.objective_repository.drd3_docking.information", "_autosummary/poli.objective_repository.drd3_docking.isolated_function", "_autosummary/poli.objective_repository.drd3_docking.register", "_autosummary/poli.objective_repository.drd3_docking.register.DRD3BlackBox", "_autosummary/poli.objective_repository.drd3_docking.register.DRD3ProblemFactory", "_autosummary/poli.objective_repository.fexofenadine_mpo", "_autosummary/poli.objective_repository.fexofenadine_mpo.information", "_autosummary/poli.objective_repository.fexofenadine_mpo.register", "_autosummary/poli.objective_repository.foldx_rfp_lambo", "_autosummary/poli.objective_repository.foldx_rfp_lambo.information", "_autosummary/poli.objective_repository.foldx_rfp_lambo.isolated_function", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.Config", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.RFPWrapper", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.RFPWrapperFactory", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.get_config", "_autosummary/poli.objective_repository.foldx_sasa", "_autosummary/poli.objective_repository.foldx_sasa.foldx_utils", "_autosummary/poli.objective_repository.foldx_sasa.information", "_autosummary/poli.objective_repository.foldx_sasa.isolated_function", "_autosummary/poli.objective_repository.foldx_sasa.register", "_autosummary/poli.objective_repository.foldx_sasa.register.FoldXSASABlackBox", "_autosummary/poli.objective_repository.foldx_sasa.register.FoldXSASAProblemFactory", "_autosummary/poli.objective_repository.foldx_stability", "_autosummary/poli.objective_repository.foldx_stability.foldx_utils", "_autosummary/poli.objective_repository.foldx_stability.information", "_autosummary/poli.objective_repository.foldx_stability.isolated_function", "_autosummary/poli.objective_repository.foldx_stability.register", "_autosummary/poli.objective_repository.foldx_stability.register.FoldXStabilityBlackBox", "_autosummary/poli.objective_repository.foldx_stability.register.FoldXStabilityProblemFactory", "_autosummary/poli.objective_repository.foldx_stability_and_sasa", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.information", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.isolated_function", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.register", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASABlackBox", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASAProblemFactory", "_autosummary/poli.objective_repository.gfp_cbas", "_autosummary/poli.objective_repository.gfp_cbas.abstract_vae_wrapper", "_autosummary/poli.objective_repository.gfp_cbas.abstract_vae_wrapper.AbstractVAEWrapper", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_aas_to_idx_array", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_idx_array_to_aas", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_mutations_to_sequence", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_argmax", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_balaji_predictions", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_experimental_X_y", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_gfp_X_y_aa", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_gfp_base_seq", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_samples", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_aa", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_aa_array", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_dna", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.partition_data", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.read_gfp_data", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.CBASVAEWrapper", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeDecoder", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeEncoder", "_autosummary/poli.objective_repository.gfp_cbas.gfp_gp", "_autosummary/poli.objective_repository.gfp_cbas.information", "_autosummary/poli.objective_repository.gfp_cbas.isolated_function", "_autosummary/poli.objective_repository.gfp_cbas.make_vae", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.BaseVAE", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.SimpleVAE", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.build_vae", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.identity_loss", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.summed_categorical_crossentropy", "_autosummary/poli.objective_repository.gfp_cbas.register", "_autosummary/poli.objective_repository.gfp_cbas.register.GFPCBasBlackBox", "_autosummary/poli.objective_repository.gfp_cbas.register.GFPCBasProblemFactory", "_autosummary/poli.objective_repository.gfp_select", "_autosummary/poli.objective_repository.gfp_select.information", "_autosummary/poli.objective_repository.gfp_select.isolated_function", "_autosummary/poli.objective_repository.gfp_select.register", "_autosummary/poli.objective_repository.gfp_select.register.GFPBlackBox", "_autosummary/poli.objective_repository.gfp_select.register.GFPSelectionProblemFactory", "_autosummary/poli.objective_repository.gsk3_beta", "_autosummary/poli.objective_repository.gsk3_beta.information", "_autosummary/poli.objective_repository.gsk3_beta.register", "_autosummary/poli.objective_repository.isomer_c7h8n2o2", "_autosummary/poli.objective_repository.isomer_c7h8n2o2.information", "_autosummary/poli.objective_repository.isomer_c7h8n2o2.register", "_autosummary/poli.objective_repository.isomer_c9h10n2o2pf2cl", "_autosummary/poli.objective_repository.isomer_c9h10n2o2pf2cl.information", "_autosummary/poli.objective_repository.isomer_c9h10n2o2pf2cl.register", "_autosummary/poli.objective_repository.jnk3", "_autosummary/poli.objective_repository.jnk3.information", "_autosummary/poli.objective_repository.jnk3.register", "_autosummary/poli.objective_repository.median_1", "_autosummary/poli.objective_repository.median_1.information", "_autosummary/poli.objective_repository.median_1.register", "_autosummary/poli.objective_repository.median_2", "_autosummary/poli.objective_repository.median_2.information", "_autosummary/poli.objective_repository.median_2.register", "_autosummary/poli.objective_repository.mestranol_similarity", "_autosummary/poli.objective_repository.mestranol_similarity.information", "_autosummary/poli.objective_repository.mestranol_similarity.register", "_autosummary/poli.objective_repository.osimetrinib_mpo", "_autosummary/poli.objective_repository.osimetrinib_mpo.information", "_autosummary/poli.objective_repository.osimetrinib_mpo.register", "_autosummary/poli.objective_repository.penalized_logp_lambo", "_autosummary/poli.objective_repository.penalized_logp_lambo.information", "_autosummary/poli.objective_repository.penalized_logp_lambo.isolated_function", "_autosummary/poli.objective_repository.penalized_logp_lambo.register", "_autosummary/poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboBlackBox", "_autosummary/poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboProblemFactory", "_autosummary/poli.objective_repository.perindopril_mpo", "_autosummary/poli.objective_repository.perindopril_mpo.information", "_autosummary/poli.objective_repository.perindopril_mpo.register", "_autosummary/poli.objective_repository.ranolazine_mpo", "_autosummary/poli.objective_repository.ranolazine_mpo.information", "_autosummary/poli.objective_repository.ranolazine_mpo.register", "_autosummary/poli.objective_repository.rasp", "_autosummary/poli.objective_repository.rasp.information", "_autosummary/poli.objective_repository.rasp.isolated_function", "_autosummary/poli.objective_repository.rasp.register", "_autosummary/poli.objective_repository.rdkit_logp", "_autosummary/poli.objective_repository.rdkit_logp.information", "_autosummary/poli.objective_repository.rdkit_logp.register", "_autosummary/poli.objective_repository.rdkit_logp.register.LogPBlackBox", "_autosummary/poli.objective_repository.rdkit_logp.register.LogPProblemFactory", "_autosummary/poli.objective_repository.rdkit_qed", "_autosummary/poli.objective_repository.rdkit_qed.information", "_autosummary/poli.objective_repository.rdkit_qed.register", "_autosummary/poli.objective_repository.rdkit_qed.register.QEDBlackBox", "_autosummary/poli.objective_repository.rdkit_qed.register.QEDProblemFactory", "_autosummary/poli.objective_repository.rfp_foldx_stability_and_sasa", "_autosummary/poli.objective_repository.rfp_foldx_stability_and_sasa.information", "_autosummary/poli.objective_repository.rfp_foldx_stability_and_sasa.register", "_autosummary/poli.objective_repository.sa_tdc", "_autosummary/poli.objective_repository.sa_tdc.information", "_autosummary/poli.objective_repository.sa_tdc.isolated_function", "_autosummary/poli.objective_repository.sa_tdc.register", "_autosummary/poli.objective_repository.sa_tdc.register.SABlackBox", "_autosummary/poli.objective_repository.sa_tdc.register.SAProblemFactory", "_autosummary/poli.objective_repository.scaffold_hop", "_autosummary/poli.objective_repository.scaffold_hop.information", "_autosummary/poli.objective_repository.scaffold_hop.register", "_autosummary/poli.objective_repository.sitagliptin_mpo", "_autosummary/poli.objective_repository.sitagliptin_mpo.information", "_autosummary/poli.objective_repository.sitagliptin_mpo.register", "_autosummary/poli.objective_repository.super_mario_bros", "_autosummary/poli.objective_repository.super_mario_bros.information", "_autosummary/poli.objective_repository.super_mario_bros.level_utils", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.add_padding_to_level", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.clean_level", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.level_to_array", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.level_to_list", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.levels_to_onehot", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.onehot_to_levels", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.tensor_to_sim_level", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.vectorized", "_autosummary/poli.objective_repository.super_mario_bros.model", "_autosummary/poli.objective_repository.super_mario_bros.model.VAEMario", "_autosummary/poli.objective_repository.super_mario_bros.model.load_example_model", "_autosummary/poli.objective_repository.super_mario_bros.register", "_autosummary/poli.objective_repository.thiothixene_rediscovery", "_autosummary/poli.objective_repository.thiothixene_rediscovery.information", "_autosummary/poli.objective_repository.thiothixene_rediscovery.register", "_autosummary/poli.objective_repository.toy_continuous_problem", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.ackley_function_01", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.alpine_01", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.alpine_02", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.bent_cigar", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.brown", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.camelback_2d", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.chung_reynolds", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.cosine_mixture", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.cross_in_tray", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.deb_01", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.deb_02", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.deflected_corrugated_spring", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.easom", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.egg_holder", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.shifted_sphere", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.styblinski_tang", "_autosummary/poli.objective_repository.toy_continuous_problem.information", "_autosummary/poli.objective_repository.toy_continuous_problem.register", "_autosummary/poli.objective_repository.toy_continuous_problem.register.ToyContinuousBlackBox", "_autosummary/poli.objective_repository.toy_continuous_problem.register.ToyContinuousProblemFactory", "_autosummary/poli.objective_repository.toy_continuous_problem.toy_continuous_problem", "_autosummary/poli.objective_repository.toy_continuous_problem.toy_continuous_problem.ToyContinuousProblem", "_autosummary/poli.objective_repository.troglitazone_rediscovery", "_autosummary/poli.objective_repository.troglitazone_rediscovery.information", "_autosummary/poli.objective_repository.troglitazone_rediscovery.register", "_autosummary/poli.objective_repository.valsartan_smarts", "_autosummary/poli.objective_repository.valsartan_smarts.information", "_autosummary/poli.objective_repository.valsartan_smarts.register", "_autosummary/poli.objective_repository.white_noise", "_autosummary/poli.objective_repository.white_noise.register", "_autosummary/poli.objective_repository.white_noise.register.WhiteNoiseBlackBox", "_autosummary/poli.objective_repository.white_noise.register.WhiteNoiseProblemFactory", "_autosummary/poli.objective_repository.zaleplon_mpo", "_autosummary/poli.objective_repository.zaleplon_mpo.information", "_autosummary/poli.objective_repository.zaleplon_mpo.register", "_autosummary/poli.registered_objectives", "_autosummary/poli.tests", "_autosummary/poli.tests.docs_examples", "_autosummary/poli.tests.docs_examples.test_objective_functions", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_aloha_example", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_logp_example", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_logp_example_using_strings", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_qed_example", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_qed_example_using_strings", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_white_noise_example", "_autosummary/poli.tests.registry", "_autosummary/poli.tests.registry.basic_objectives", "_autosummary/poli.tests.registry.basic_objectives.test_basic_objectives", "_autosummary/poli.tests.registry.basic_objectives.test_basic_objectives.test_registering_aloha", "_autosummary/poli.tests.registry.basic_objectives.test_basic_objectives.test_registering_white_noise", "_autosummary/poli.tests.registry.basic_objectives.test_budget_exhaustion", "_autosummary/poli.tests.registry.chemistry", "_autosummary/poli.tests.registry.chemistry.test_chemistry_objectives", "_autosummary/poli.tests.registry.proteins", "_autosummary/poli.tests.registry.proteins.test_foldx", "_autosummary/poli.tests.registry.proteins.test_foldx_rfp_lambo", "_autosummary/poli.tests.registry.proteins.test_rasp", "_autosummary/poli.tests.registry.test_basic_loop_without_create", "_autosummary/poli.tests.registry.test_black_box_instancing", "_autosummary/poli.tests.registry.test_force_isolation", "_autosummary/poli.tests.registry.test_instancing_black_boxes_alone", "_autosummary/poli.tests.registry.test_multi_objective_and_negative", "_autosummary/poli.tests.registry.test_passing_array_of_strings", "_autosummary/poli.tests.registry.toy_continuous_problems", "_autosummary/poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims", "_autosummary/poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims.test_embed_camelback_into_high_dimensions", "_autosummary/poli.tests.registry.toy_continuous_problems.test_instancing_of_toy_continuous_problems", "_autosummary/poli.tests.test_core_promises", "_autosummary/poli.tests.test_minimal_working_example", "_autosummary/poli.tests.test_minimal_working_example.test_minimal_working_example", "_autosummary/poli.tests.test_seeding", "_autosummary/poli.tests.test_seeding.test_seeding_in_white_noise", "_autosummary/poli.tests.util", "_autosummary/poli.tests.util.test_foldx_interface", "_autosummary/poli.tests.util.test_protein_utilities", "_templates/custom-module-template", "api", "bibliography", "contributing/a_new_problem", "contributing/a_new_solver", "getting_started/getting_started", "index", "understanding_foldx/00-installing-foldx", "understanding_foldx/01-single-mutation-using-foldx/index", "using_poli/objective_repository/RaSP", "using_poli/objective_repository/albuterol_similarity", "using_poli/objective_repository/all_objectives", "using_poli/objective_repository/aloha", "using_poli/objective_repository/amlodipine_mpo", "using_poli/objective_repository/celecoxib_rediscovery", "using_poli/objective_repository/dockstring", "using_poli/objective_repository/drd2_docking", "using_poli/objective_repository/drd3_docking", "using_poli/objective_repository/fexofenadine_mpo", "using_poli/objective_repository/foldx_rfp_lambo", "using_poli/objective_repository/foldx_sasa", "using_poli/objective_repository/foldx_stability", "using_poli/objective_repository/gsk3_beta", "using_poli/objective_repository/mestranol_similarity", "using_poli/objective_repository/osimetrinib_mpo", "using_poli/objective_repository/penalized_logp_lambo", "using_poli/objective_repository/ranolazine_mpo", "using_poli/objective_repository/rdkit_logp", "using_poli/objective_repository/rdkit_qed", "using_poli/objective_repository/sa_tdc", "using_poli/objective_repository/sitagliptin_mpo", "using_poli/objective_repository/super_mario_bros", "using_poli/objective_repository/tdc_oracles", "using_poli/objective_repository/template", "using_poli/objective_repository/thiothixene_rediscovery", "using_poli/objective_repository/toy_continuous_problems", "using_poli/objective_repository/troglitazone_rediscovery", "using_poli/objective_repository/white_noise", "using_poli/objective_repository/zaleplon_mpo", "using_poli/observers/registering_an_observer", "using_poli/optimization_examples/protein-stability-foldx/optimizing_protein_stability", "using_poli/the_basics/defining_a_problem_solver", "using_poli/the_basics/defining_an_observer", "using_poli/the_basics/diving_deeper", "using_poli/the_basics/intro_to_poli", "using_poli/the_basics/isolation", "using_poli/the_basics/optimizing_an_objective_function", "using_poli/the_basics/registering_an_objective_function", "using_poli_baselines/bayesian_optimization", "using_poli_baselines/cma_es", "using_poli_baselines/graph_ga", "using_poli_baselines/latent_space_bo", "using_poli_baselines/line_bayesian_optimization", "using_poli_baselines/nsga_2", "using_poli_baselines/random_mutations", "using_poli_baselines/template"], "filenames": ["_autosummary/poli.rst", "_autosummary/poli.core.rst", "_autosummary/poli.core.abstract_black_box.rst", "_autosummary/poli.core.abstract_black_box.AbstractBlackBox.rst", "_autosummary/poli.core.abstract_black_box.NegativeBlackBox.rst", "_autosummary/poli.core.abstract_isolated_function.rst", "_autosummary/poli.core.abstract_problem_factory.rst", "_autosummary/poli.core.abstract_problem_factory.AbstractProblemFactory.rst", "_autosummary/poli.core.abstract_problem_factory.MetaProblemFactory.rst", "_autosummary/poli.core.black_box_information.rst", "_autosummary/poli.core.chemistry.rst", "_autosummary/poli.core.chemistry.tdc_black_box.rst", "_autosummary/poli.core.chemistry.tdc_black_box.TDCBlackBox.rst", "_autosummary/poli.core.chemistry.tdc_isolated_function.rst", "_autosummary/poli.core.exceptions.rst", "_autosummary/poli.core.exceptions.BudgetExhaustedException.rst", "_autosummary/poli.core.exceptions.PoliException.rst", "_autosummary/poli.core.multi_objective_black_box.rst", "_autosummary/poli.core.multi_objective_black_box.MultiObjectiveBlackBox.rst", "_autosummary/poli.core.problem.rst", "_autosummary/poli.core.problem_setup_information.rst", "_autosummary/poli.core.problem_setup_information.ProblemSetupInformation.rst", "_autosummary/poli.core.proteins.rst", "_autosummary/poli.core.proteins.foldx_black_box.rst", "_autosummary/poli.core.proteins.foldx_black_box.FoldxBlackBox.rst", "_autosummary/poli.core.proteins.foldx_isolated_function.rst", "_autosummary/poli.core.registry.rst", "_autosummary/poli.core.registry.delete_observer_run_script.rst", "_autosummary/poli.core.registry.delete_problem.rst", "_autosummary/poli.core.registry.get_problem_factories.rst", "_autosummary/poli.core.registry.get_problems.rst", "_autosummary/poli.core.registry.register_problem.rst", "_autosummary/poli.core.registry.register_problem_from_repository.rst", "_autosummary/poli.core.registry.set_observer.rst", "_autosummary/poli.core.registry.set_observer_run_script.rst", "_autosummary/poli.core.util.rst", "_autosummary/poli.core.util.abstract_observer.rst", "_autosummary/poli.core.util.abstract_observer.AbstractObserver.rst", "_autosummary/poli.core.util.alignment.rst", "_autosummary/poli.core.util.alignment.is_aligned.rst", "_autosummary/poli.core.util.batch.rst", "_autosummary/poli.core.util.batch.batch_input.rst", "_autosummary/poli.core.util.batch.batch_input.batched.rst", "_autosummary/poli.core.util.chemistry.rst", "_autosummary/poli.core.util.chemistry.string_to_molecule.rst", "_autosummary/poli.core.util.chemistry.string_to_molecule.selfies_to_molecules.rst", "_autosummary/poli.core.util.chemistry.string_to_molecule.smiles_to_molecules.rst", "_autosummary/poli.core.util.chemistry.string_to_molecule.strings_to_molecules.rst", "_autosummary/poli.core.util.chemistry.string_to_molecule.translate_selfies_to_smiles.rst", "_autosummary/poli.core.util.chemistry.string_to_molecule.translate_smiles_to_selfies.rst", "_autosummary/poli.core.util.external_observer.rst", "_autosummary/poli.core.util.external_observer.ExternalObserver.rst", "_autosummary/poli.core.util.files.rst", "_autosummary/poli.core.util.files.download_files_from_github.rst", "_autosummary/poli.core.util.files.download_files_from_github.download_file_from_github_repository.rst", "_autosummary/poli.core.util.files.download_files_from_github.get_sha_for_tag.rst", "_autosummary/poli.core.util.files.integrity.rst", "_autosummary/poli.core.util.files.integrity.compute_md5_from_filepath.rst", "_autosummary/poli.core.util.inter_process_communication.rst", "_autosummary/poli.core.util.inter_process_communication.process_wrapper.rst", "_autosummary/poli.core.util.inter_process_communication.process_wrapper.ProcessWrapper.rst", "_autosummary/poli.core.util.inter_process_communication.process_wrapper.get_connection.rst", "_autosummary/poli.core.util.isolation.rst", "_autosummary/poli.core.util.isolation.external_black_box.rst", "_autosummary/poli.core.util.isolation.external_function.rst", "_autosummary/poli.core.util.isolation.instancing.rst", "_autosummary/poli.core.util.isolation.isolated_black_box.rst", "_autosummary/poli.core.util.objective_management.rst", "_autosummary/poli.core.util.objective_management.make_run_script.rst", "_autosummary/poli.core.util.objective_management.make_run_script.make_observer_script.rst", "_autosummary/poli.core.util.objective_management.make_run_script.make_run_script.rst", "_autosummary/poli.core.util.observer_wrapper.rst", "_autosummary/poli.core.util.observer_wrapper.start_observer_process.rst", "_autosummary/poli.core.util.proteins.rst", "_autosummary/poli.core.util.proteins.defaults.rst", "_autosummary/poli.core.util.proteins.foldx.rst", "_autosummary/poli.core.util.proteins.foldx.FoldxInterface.rst", "_autosummary/poli.core.util.proteins.mutations.rst", "_autosummary/poli.core.util.proteins.mutations.edits_between_strings.rst", "_autosummary/poli.core.util.proteins.mutations.find_closest_wildtype_pdb_file_to_mutant.rst", "_autosummary/poli.core.util.proteins.mutations.mutations_from_wildtype_residues_and_mutant.rst", "_autosummary/poli.core.util.proteins.pdb_parsing.rst", "_autosummary/poli.core.util.proteins.pdb_parsing.parse_pdb_as_residue_strings.rst", "_autosummary/poli.core.util.proteins.pdb_parsing.parse_pdb_as_residues.rst", "_autosummary/poli.core.util.proteins.pdb_parsing.parse_pdb_as_structure.rst", "_autosummary/poli.core.util.proteins.rasp.rst", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.rst", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.PrismData.rst", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.cavity_model.rst", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.helpers.rst", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.run_pipeline.rst", "_autosummary/poli.core.util.proteins.rasp.inner_rasp.visualization.rst", "_autosummary/poli.core.util.proteins.rasp.load_models.rst", "_autosummary/poli.core.util.proteins.rasp.rasp_interface.rst", "_autosummary/poli.core.util.seeding.rst", "_autosummary/poli.core.util.seeding.seeding.rst", "_autosummary/poli.core.util.seeding.seeding.seed_numpy.rst", "_autosummary/poli.core.util.seeding.seeding.seed_python.rst", "_autosummary/poli.objective.rst", "_autosummary/poli.objective.dynamically_instantiate.rst", "_autosummary/poli.objective.parse_factory_kwargs.rst", "_autosummary/poli.objective.run.rst", "_autosummary/poli.objective_factory.rst", "_autosummary/poli.objective_factory.ExternalBlackBox.rst", "_autosummary/poli.objective_factory.create.rst", "_autosummary/poli.objective_factory.load_config.rst", "_autosummary/poli.objective_factory.start.rst", "_autosummary/poli.objective_repository.rst", "_autosummary/poli.objective_repository.albuterol_similarity.rst", "_autosummary/poli.objective_repository.albuterol_similarity.information.rst", "_autosummary/poli.objective_repository.albuterol_similarity.register.rst", "_autosummary/poli.objective_repository.aloha.rst", "_autosummary/poli.objective_repository.aloha.register.rst", "_autosummary/poli.objective_repository.aloha.register.AlohaBlackBox.rst", "_autosummary/poli.objective_repository.aloha.register.AlohaProblemFactory.rst", "_autosummary/poli.objective_repository.amlodipine_mpo.rst", "_autosummary/poli.objective_repository.amlodipine_mpo.information.rst", "_autosummary/poli.objective_repository.amlodipine_mpo.register.rst", "_autosummary/poli.objective_repository.celecoxib_rediscovery.rst", "_autosummary/poli.objective_repository.celecoxib_rediscovery.information.rst", "_autosummary/poli.objective_repository.celecoxib_rediscovery.register.rst", "_autosummary/poli.objective_repository.deco_hop.rst", "_autosummary/poli.objective_repository.deco_hop.information.rst", "_autosummary/poli.objective_repository.deco_hop.register.rst", "_autosummary/poli.objective_repository.dockstring.rst", "_autosummary/poli.objective_repository.dockstring.information.rst", "_autosummary/poli.objective_repository.dockstring.isolated_function.rst", "_autosummary/poli.objective_repository.dockstring.register.rst", "_autosummary/poli.objective_repository.dockstring.register.DockstringBlackBox.rst", "_autosummary/poli.objective_repository.dockstring.register.DockstringProblemFactory.rst", "_autosummary/poli.objective_repository.drd2_docking.rst", "_autosummary/poli.objective_repository.drd2_docking.information.rst", "_autosummary/poli.objective_repository.drd2_docking.register.rst", "_autosummary/poli.objective_repository.drd3_docking.rst", "_autosummary/poli.objective_repository.drd3_docking.information.rst", "_autosummary/poli.objective_repository.drd3_docking.isolated_function.rst", "_autosummary/poli.objective_repository.drd3_docking.register.rst", "_autosummary/poli.objective_repository.drd3_docking.register.DRD3BlackBox.rst", "_autosummary/poli.objective_repository.drd3_docking.register.DRD3ProblemFactory.rst", "_autosummary/poli.objective_repository.fexofenadine_mpo.rst", "_autosummary/poli.objective_repository.fexofenadine_mpo.information.rst", "_autosummary/poli.objective_repository.fexofenadine_mpo.register.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.information.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.isolated_function.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.Config.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.RFPWrapper.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.RFPWrapperFactory.rst", "_autosummary/poli.objective_repository.foldx_rfp_lambo.register.get_config.rst", "_autosummary/poli.objective_repository.foldx_sasa.rst", "_autosummary/poli.objective_repository.foldx_sasa.foldx_utils.rst", "_autosummary/poli.objective_repository.foldx_sasa.information.rst", "_autosummary/poli.objective_repository.foldx_sasa.isolated_function.rst", "_autosummary/poli.objective_repository.foldx_sasa.register.rst", "_autosummary/poli.objective_repository.foldx_sasa.register.FoldXSASABlackBox.rst", "_autosummary/poli.objective_repository.foldx_sasa.register.FoldXSASAProblemFactory.rst", "_autosummary/poli.objective_repository.foldx_stability.rst", "_autosummary/poli.objective_repository.foldx_stability.foldx_utils.rst", "_autosummary/poli.objective_repository.foldx_stability.information.rst", "_autosummary/poli.objective_repository.foldx_stability.isolated_function.rst", "_autosummary/poli.objective_repository.foldx_stability.register.rst", "_autosummary/poli.objective_repository.foldx_stability.register.FoldXStabilityBlackBox.rst", "_autosummary/poli.objective_repository.foldx_stability.register.FoldXStabilityProblemFactory.rst", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.rst", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.information.rst", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.isolated_function.rst", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.register.rst", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASABlackBox.rst", "_autosummary/poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASAProblemFactory.rst", "_autosummary/poli.objective_repository.gfp_cbas.rst", "_autosummary/poli.objective_repository.gfp_cbas.abstract_vae_wrapper.rst", "_autosummary/poli.objective_repository.gfp_cbas.abstract_vae_wrapper.AbstractVAEWrapper.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_aas_to_idx_array.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_idx_array_to_aas.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_mutations_to_sequence.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_argmax.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_balaji_predictions.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_experimental_X_y.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_gfp_X_y_aa.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_gfp_base_seq.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_samples.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_aa.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_aa_array.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_dna.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.partition_data.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.read_gfp_data.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.CBASVAEWrapper.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeDecoder.rst", "_autosummary/poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeEncoder.rst", "_autosummary/poli.objective_repository.gfp_cbas.gfp_gp.rst", "_autosummary/poli.objective_repository.gfp_cbas.information.rst", "_autosummary/poli.objective_repository.gfp_cbas.isolated_function.rst", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.rst", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.BaseVAE.rst", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.SimpleVAE.rst", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.build_vae.rst", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.identity_loss.rst", "_autosummary/poli.objective_repository.gfp_cbas.make_vae.summed_categorical_crossentropy.rst", "_autosummary/poli.objective_repository.gfp_cbas.register.rst", "_autosummary/poli.objective_repository.gfp_cbas.register.GFPCBasBlackBox.rst", "_autosummary/poli.objective_repository.gfp_cbas.register.GFPCBasProblemFactory.rst", "_autosummary/poli.objective_repository.gfp_select.rst", "_autosummary/poli.objective_repository.gfp_select.information.rst", "_autosummary/poli.objective_repository.gfp_select.isolated_function.rst", "_autosummary/poli.objective_repository.gfp_select.register.rst", "_autosummary/poli.objective_repository.gfp_select.register.GFPBlackBox.rst", "_autosummary/poli.objective_repository.gfp_select.register.GFPSelectionProblemFactory.rst", "_autosummary/poli.objective_repository.gsk3_beta.rst", "_autosummary/poli.objective_repository.gsk3_beta.information.rst", "_autosummary/poli.objective_repository.gsk3_beta.register.rst", "_autosummary/poli.objective_repository.isomer_c7h8n2o2.rst", "_autosummary/poli.objective_repository.isomer_c7h8n2o2.information.rst", "_autosummary/poli.objective_repository.isomer_c7h8n2o2.register.rst", "_autosummary/poli.objective_repository.isomer_c9h10n2o2pf2cl.rst", "_autosummary/poli.objective_repository.isomer_c9h10n2o2pf2cl.information.rst", "_autosummary/poli.objective_repository.isomer_c9h10n2o2pf2cl.register.rst", "_autosummary/poli.objective_repository.jnk3.rst", "_autosummary/poli.objective_repository.jnk3.information.rst", "_autosummary/poli.objective_repository.jnk3.register.rst", "_autosummary/poli.objective_repository.median_1.rst", "_autosummary/poli.objective_repository.median_1.information.rst", "_autosummary/poli.objective_repository.median_1.register.rst", "_autosummary/poli.objective_repository.median_2.rst", "_autosummary/poli.objective_repository.median_2.information.rst", "_autosummary/poli.objective_repository.median_2.register.rst", "_autosummary/poli.objective_repository.mestranol_similarity.rst", "_autosummary/poli.objective_repository.mestranol_similarity.information.rst", "_autosummary/poli.objective_repository.mestranol_similarity.register.rst", "_autosummary/poli.objective_repository.osimetrinib_mpo.rst", "_autosummary/poli.objective_repository.osimetrinib_mpo.information.rst", "_autosummary/poli.objective_repository.osimetrinib_mpo.register.rst", "_autosummary/poli.objective_repository.penalized_logp_lambo.rst", "_autosummary/poli.objective_repository.penalized_logp_lambo.information.rst", "_autosummary/poli.objective_repository.penalized_logp_lambo.isolated_function.rst", "_autosummary/poli.objective_repository.penalized_logp_lambo.register.rst", "_autosummary/poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboBlackBox.rst", "_autosummary/poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboProblemFactory.rst", "_autosummary/poli.objective_repository.perindopril_mpo.rst", "_autosummary/poli.objective_repository.perindopril_mpo.information.rst", "_autosummary/poli.objective_repository.perindopril_mpo.register.rst", "_autosummary/poli.objective_repository.ranolazine_mpo.rst", "_autosummary/poli.objective_repository.ranolazine_mpo.information.rst", "_autosummary/poli.objective_repository.ranolazine_mpo.register.rst", "_autosummary/poli.objective_repository.rasp.rst", "_autosummary/poli.objective_repository.rasp.information.rst", "_autosummary/poli.objective_repository.rasp.isolated_function.rst", "_autosummary/poli.objective_repository.rasp.register.rst", "_autosummary/poli.objective_repository.rdkit_logp.rst", "_autosummary/poli.objective_repository.rdkit_logp.information.rst", "_autosummary/poli.objective_repository.rdkit_logp.register.rst", "_autosummary/poli.objective_repository.rdkit_logp.register.LogPBlackBox.rst", "_autosummary/poli.objective_repository.rdkit_logp.register.LogPProblemFactory.rst", "_autosummary/poli.objective_repository.rdkit_qed.rst", "_autosummary/poli.objective_repository.rdkit_qed.information.rst", "_autosummary/poli.objective_repository.rdkit_qed.register.rst", "_autosummary/poli.objective_repository.rdkit_qed.register.QEDBlackBox.rst", "_autosummary/poli.objective_repository.rdkit_qed.register.QEDProblemFactory.rst", "_autosummary/poli.objective_repository.rfp_foldx_stability_and_sasa.rst", "_autosummary/poli.objective_repository.rfp_foldx_stability_and_sasa.information.rst", "_autosummary/poli.objective_repository.rfp_foldx_stability_and_sasa.register.rst", "_autosummary/poli.objective_repository.sa_tdc.rst", "_autosummary/poli.objective_repository.sa_tdc.information.rst", "_autosummary/poli.objective_repository.sa_tdc.isolated_function.rst", "_autosummary/poli.objective_repository.sa_tdc.register.rst", "_autosummary/poli.objective_repository.sa_tdc.register.SABlackBox.rst", "_autosummary/poli.objective_repository.sa_tdc.register.SAProblemFactory.rst", "_autosummary/poli.objective_repository.scaffold_hop.rst", "_autosummary/poli.objective_repository.scaffold_hop.information.rst", "_autosummary/poli.objective_repository.scaffold_hop.register.rst", "_autosummary/poli.objective_repository.sitagliptin_mpo.rst", "_autosummary/poli.objective_repository.sitagliptin_mpo.information.rst", "_autosummary/poli.objective_repository.sitagliptin_mpo.register.rst", "_autosummary/poli.objective_repository.super_mario_bros.rst", "_autosummary/poli.objective_repository.super_mario_bros.information.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.add_padding_to_level.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.clean_level.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.level_to_array.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.level_to_list.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.levels_to_onehot.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.onehot_to_levels.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.tensor_to_sim_level.rst", "_autosummary/poli.objective_repository.super_mario_bros.level_utils.vectorized.rst", "_autosummary/poli.objective_repository.super_mario_bros.model.rst", "_autosummary/poli.objective_repository.super_mario_bros.model.VAEMario.rst", "_autosummary/poli.objective_repository.super_mario_bros.model.load_example_model.rst", "_autosummary/poli.objective_repository.super_mario_bros.register.rst", "_autosummary/poli.objective_repository.thiothixene_rediscovery.rst", "_autosummary/poli.objective_repository.thiothixene_rediscovery.information.rst", "_autosummary/poli.objective_repository.thiothixene_rediscovery.register.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.ackley_function_01.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.alpine_01.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.alpine_02.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.bent_cigar.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.brown.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.camelback_2d.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.chung_reynolds.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.cosine_mixture.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.cross_in_tray.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.deb_01.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.deb_02.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.deflected_corrugated_spring.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.easom.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.egg_holder.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.shifted_sphere.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.definitions.styblinski_tang.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.information.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.register.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.register.ToyContinuousBlackBox.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.register.ToyContinuousProblemFactory.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.toy_continuous_problem.rst", "_autosummary/poli.objective_repository.toy_continuous_problem.toy_continuous_problem.ToyContinuousProblem.rst", "_autosummary/poli.objective_repository.troglitazone_rediscovery.rst", "_autosummary/poli.objective_repository.troglitazone_rediscovery.information.rst", "_autosummary/poli.objective_repository.troglitazone_rediscovery.register.rst", "_autosummary/poli.objective_repository.valsartan_smarts.rst", "_autosummary/poli.objective_repository.valsartan_smarts.information.rst", "_autosummary/poli.objective_repository.valsartan_smarts.register.rst", "_autosummary/poli.objective_repository.white_noise.rst", "_autosummary/poli.objective_repository.white_noise.register.rst", "_autosummary/poli.objective_repository.white_noise.register.WhiteNoiseBlackBox.rst", "_autosummary/poli.objective_repository.white_noise.register.WhiteNoiseProblemFactory.rst", "_autosummary/poli.objective_repository.zaleplon_mpo.rst", "_autosummary/poli.objective_repository.zaleplon_mpo.information.rst", "_autosummary/poli.objective_repository.zaleplon_mpo.register.rst", "_autosummary/poli.registered_objectives.rst", "_autosummary/poli.tests.rst", "_autosummary/poli.tests.docs_examples.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_aloha_example.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_logp_example.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_logp_example_using_strings.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_qed_example.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_qed_example_using_strings.rst", "_autosummary/poli.tests.docs_examples.test_objective_functions.test_white_noise_example.rst", "_autosummary/poli.tests.registry.rst", "_autosummary/poli.tests.registry.basic_objectives.rst", "_autosummary/poli.tests.registry.basic_objectives.test_basic_objectives.rst", "_autosummary/poli.tests.registry.basic_objectives.test_basic_objectives.test_registering_aloha.rst", "_autosummary/poli.tests.registry.basic_objectives.test_basic_objectives.test_registering_white_noise.rst", "_autosummary/poli.tests.registry.basic_objectives.test_budget_exhaustion.rst", "_autosummary/poli.tests.registry.chemistry.rst", "_autosummary/poli.tests.registry.chemistry.test_chemistry_objectives.rst", "_autosummary/poli.tests.registry.proteins.rst", "_autosummary/poli.tests.registry.proteins.test_foldx.rst", "_autosummary/poli.tests.registry.proteins.test_foldx_rfp_lambo.rst", "_autosummary/poli.tests.registry.proteins.test_rasp.rst", "_autosummary/poli.tests.registry.test_basic_loop_without_create.rst", "_autosummary/poli.tests.registry.test_black_box_instancing.rst", "_autosummary/poli.tests.registry.test_force_isolation.rst", "_autosummary/poli.tests.registry.test_instancing_black_boxes_alone.rst", "_autosummary/poli.tests.registry.test_multi_objective_and_negative.rst", "_autosummary/poli.tests.registry.test_passing_array_of_strings.rst", "_autosummary/poli.tests.registry.toy_continuous_problems.rst", "_autosummary/poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims.rst", "_autosummary/poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims.test_embed_camelback_into_high_dimensions.rst", "_autosummary/poli.tests.registry.toy_continuous_problems.test_instancing_of_toy_continuous_problems.rst", "_autosummary/poli.tests.test_core_promises.rst", "_autosummary/poli.tests.test_minimal_working_example.rst", "_autosummary/poli.tests.test_minimal_working_example.test_minimal_working_example.rst", "_autosummary/poli.tests.test_seeding.rst", "_autosummary/poli.tests.test_seeding.test_seeding_in_white_noise.rst", "_autosummary/poli.tests.util.rst", "_autosummary/poli.tests.util.test_foldx_interface.rst", "_autosummary/poli.tests.util.test_protein_utilities.rst", "_templates/custom-module-template.rst", "api.rst", "bibliography.md", "contributing/a_new_problem.md", "contributing/a_new_solver.md", "getting_started/getting_started.md", "index.md", "understanding_foldx/00-installing-foldx.md", "understanding_foldx/01-single-mutation-using-foldx/index.ipynb", "using_poli/objective_repository/RaSP.md", "using_poli/objective_repository/albuterol_similarity.md", "using_poli/objective_repository/all_objectives.md", "using_poli/objective_repository/aloha.md", "using_poli/objective_repository/amlodipine_mpo.md", "using_poli/objective_repository/celecoxib_rediscovery.md", "using_poli/objective_repository/dockstring.md", "using_poli/objective_repository/drd2_docking.md", "using_poli/objective_repository/drd3_docking.md", "using_poli/objective_repository/fexofenadine_mpo.md", "using_poli/objective_repository/foldx_rfp_lambo.md", "using_poli/objective_repository/foldx_sasa.md", "using_poli/objective_repository/foldx_stability.md", "using_poli/objective_repository/gsk3_beta.md", "using_poli/objective_repository/mestranol_similarity.md", "using_poli/objective_repository/osimetrinib_mpo.md", "using_poli/objective_repository/penalized_logp_lambo.md", "using_poli/objective_repository/ranolazine_mpo.md", "using_poli/objective_repository/rdkit_logp.md", "using_poli/objective_repository/rdkit_qed.md", "using_poli/objective_repository/sa_tdc.md", "using_poli/objective_repository/sitagliptin_mpo.md", "using_poli/objective_repository/super_mario_bros.md", "using_poli/objective_repository/tdc_oracles.md", "using_poli/objective_repository/template.md", "using_poli/objective_repository/thiothixene_rediscovery.md", "using_poli/objective_repository/toy_continuous_problems.md", "using_poli/objective_repository/troglitazone_rediscovery.md", "using_poli/objective_repository/white_noise.md", "using_poli/objective_repository/zaleplon_mpo.md", "using_poli/observers/registering_an_observer.md", "using_poli/optimization_examples/protein-stability-foldx/optimizing_protein_stability.ipynb", "using_poli/the_basics/defining_a_problem_solver.md", "using_poli/the_basics/defining_an_observer.ipynb", "using_poli/the_basics/diving_deeper.md", "using_poli/the_basics/intro_to_poli.ipynb", "using_poli/the_basics/isolation.ipynb", "using_poli/the_basics/optimizing_an_objective_function.md", "using_poli/the_basics/registering_an_objective_function.md", "using_poli_baselines/bayesian_optimization.md", "using_poli_baselines/cma_es.md", "using_poli_baselines/graph_ga.md", "using_poli_baselines/latent_space_bo.md", "using_poli_baselines/line_bayesian_optimization.md", "using_poli_baselines/nsga_2.md", "using_poli_baselines/random_mutations.md", "using_poli_baselines/template.md"], "titles": ["poli", "poli.core", "poli.core.abstract_black_box", "poli.core.abstract_black_box.AbstractBlackBox", "poli.core.abstract_black_box.NegativeBlackBox", "poli.core.abstract_isolated_function", "poli.core.abstract_problem_factory", "poli.core.abstract_problem_factory.AbstractProblemFactory", "poli.core.abstract_problem_factory.MetaProblemFactory", "poli.core.black_box_information", "poli.core.chemistry", "poli.core.chemistry.tdc_black_box", "poli.core.chemistry.tdc_black_box.TDCBlackBox", "poli.core.chemistry.tdc_isolated_function", "poli.core.exceptions", "poli.core.exceptions.BudgetExhaustedException", "poli.core.exceptions.PoliException", "poli.core.multi_objective_black_box", "poli.core.multi_objective_black_box.MultiObjectiveBlackBox", "poli.core.problem", "poli.core.problem_setup_information", "poli.core.problem_setup_information.ProblemSetupInformation", "poli.core.proteins", "poli.core.proteins.foldx_black_box", "poli.core.proteins.foldx_black_box.FoldxBlackBox", "poli.core.proteins.foldx_isolated_function", "poli.core.registry", "poli.core.registry.delete_observer_run_script", "poli.core.registry.delete_problem", "poli.core.registry.get_problem_factories", "poli.core.registry.get_problems", "poli.core.registry.register_problem", "poli.core.registry.register_problem_from_repository", "poli.core.registry.set_observer", "poli.core.registry.set_observer_run_script", "poli.core.util", "poli.core.util.abstract_observer", "poli.core.util.abstract_observer.AbstractObserver", "poli.core.util.alignment", "poli.core.util.alignment.is_aligned", "poli.core.util.batch", "poli.core.util.batch.batch_input", "poli.core.util.batch.batch_input.batched", "poli.core.util.chemistry", "poli.core.util.chemistry.string_to_molecule", "poli.core.util.chemistry.string_to_molecule.selfies_to_molecules", "poli.core.util.chemistry.string_to_molecule.smiles_to_molecules", "poli.core.util.chemistry.string_to_molecule.strings_to_molecules", "poli.core.util.chemistry.string_to_molecule.translate_selfies_to_smiles", "poli.core.util.chemistry.string_to_molecule.translate_smiles_to_selfies", "poli.core.util.external_observer", "poli.core.util.external_observer.ExternalObserver", "poli.core.util.files", "poli.core.util.files.download_files_from_github", "poli.core.util.files.download_files_from_github.download_file_from_github_repository", "poli.core.util.files.download_files_from_github.get_sha_for_tag", "poli.core.util.files.integrity", "poli.core.util.files.integrity.compute_md5_from_filepath", "poli.core.util.inter_process_communication", "poli.core.util.inter_process_communication.process_wrapper", "poli.core.util.inter_process_communication.process_wrapper.ProcessWrapper", "poli.core.util.inter_process_communication.process_wrapper.get_connection", "poli.core.util.isolation", "poli.core.util.isolation.external_black_box", "poli.core.util.isolation.external_function", "poli.core.util.isolation.instancing", "poli.core.util.isolation.isolated_black_box", "poli.core.util.objective_management", "poli.core.util.objective_management.make_run_script", "poli.core.util.objective_management.make_run_script.make_observer_script", "poli.core.util.objective_management.make_run_script.make_run_script", "poli.core.util.observer_wrapper", "poli.core.util.observer_wrapper.start_observer_process", "poli.core.util.proteins", "poli.core.util.proteins.defaults", "poli.core.util.proteins.foldx", "poli.core.util.proteins.foldx.FoldxInterface", "poli.core.util.proteins.mutations", "poli.core.util.proteins.mutations.edits_between_strings", "poli.core.util.proteins.mutations.find_closest_wildtype_pdb_file_to_mutant", "poli.core.util.proteins.mutations.mutations_from_wildtype_residues_and_mutant", "poli.core.util.proteins.pdb_parsing", "poli.core.util.proteins.pdb_parsing.parse_pdb_as_residue_strings", "poli.core.util.proteins.pdb_parsing.parse_pdb_as_residues", "poli.core.util.proteins.pdb_parsing.parse_pdb_as_structure", "poli.core.util.proteins.rasp", "poli.core.util.proteins.rasp.inner_rasp", "poli.core.util.proteins.rasp.inner_rasp.PrismData", "poli.core.util.proteins.rasp.inner_rasp.cavity_model", "poli.core.util.proteins.rasp.inner_rasp.helpers", "poli.core.util.proteins.rasp.inner_rasp.run_pipeline", "poli.core.util.proteins.rasp.inner_rasp.visualization", "poli.core.util.proteins.rasp.load_models", "poli.core.util.proteins.rasp.rasp_interface", "poli.core.util.seeding", "poli.core.util.seeding.seeding", "poli.core.util.seeding.seeding.seed_numpy", "poli.core.util.seeding.seeding.seed_python", "poli.objective", "poli.objective.dynamically_instantiate", "poli.objective.parse_factory_kwargs", "poli.objective.run", "poli.objective_factory", "poli.objective_factory.ExternalBlackBox", "poli.objective_factory.create", "poli.objective_factory.load_config", "poli.objective_factory.start", "poli.objective_repository", "poli.objective_repository.albuterol_similarity", "poli.objective_repository.albuterol_similarity.information", "poli.objective_repository.albuterol_similarity.register", "poli.objective_repository.aloha", "poli.objective_repository.aloha.register", "poli.objective_repository.aloha.register.AlohaBlackBox", "poli.objective_repository.aloha.register.AlohaProblemFactory", "poli.objective_repository.amlodipine_mpo", "poli.objective_repository.amlodipine_mpo.information", "poli.objective_repository.amlodipine_mpo.register", "poli.objective_repository.celecoxib_rediscovery", "poli.objective_repository.celecoxib_rediscovery.information", "poli.objective_repository.celecoxib_rediscovery.register", "poli.objective_repository.deco_hop", "poli.objective_repository.deco_hop.information", "poli.objective_repository.deco_hop.register", "poli.objective_repository.dockstring", "poli.objective_repository.dockstring.information", "poli.objective_repository.dockstring.isolated_function", "poli.objective_repository.dockstring.register", "poli.objective_repository.dockstring.register.DockstringBlackBox", "poli.objective_repository.dockstring.register.DockstringProblemFactory", "poli.objective_repository.drd2_docking", "poli.objective_repository.drd2_docking.information", "poli.objective_repository.drd2_docking.register", "poli.objective_repository.drd3_docking", "poli.objective_repository.drd3_docking.information", "poli.objective_repository.drd3_docking.isolated_function", "poli.objective_repository.drd3_docking.register", "poli.objective_repository.drd3_docking.register.DRD3BlackBox", "poli.objective_repository.drd3_docking.register.DRD3ProblemFactory", "poli.objective_repository.fexofenadine_mpo", "poli.objective_repository.fexofenadine_mpo.information", "poli.objective_repository.fexofenadine_mpo.register", "poli.objective_repository.foldx_rfp_lambo", "poli.objective_repository.foldx_rfp_lambo.information", "poli.objective_repository.foldx_rfp_lambo.isolated_function", "poli.objective_repository.foldx_rfp_lambo.register", "poli.objective_repository.foldx_rfp_lambo.register.Config", "poli.objective_repository.foldx_rfp_lambo.register.RFPWrapper", "poli.objective_repository.foldx_rfp_lambo.register.RFPWrapperFactory", "poli.objective_repository.foldx_rfp_lambo.register.get_config", "poli.objective_repository.foldx_sasa", "poli.objective_repository.foldx_sasa.foldx_utils", "poli.objective_repository.foldx_sasa.information", "poli.objective_repository.foldx_sasa.isolated_function", "poli.objective_repository.foldx_sasa.register", "poli.objective_repository.foldx_sasa.register.FoldXSASABlackBox", "poli.objective_repository.foldx_sasa.register.FoldXSASAProblemFactory", "poli.objective_repository.foldx_stability", "poli.objective_repository.foldx_stability.foldx_utils", "poli.objective_repository.foldx_stability.information", "poli.objective_repository.foldx_stability.isolated_function", "poli.objective_repository.foldx_stability.register", "poli.objective_repository.foldx_stability.register.FoldXStabilityBlackBox", "poli.objective_repository.foldx_stability.register.FoldXStabilityProblemFactory", "poli.objective_repository.foldx_stability_and_sasa", "poli.objective_repository.foldx_stability_and_sasa.information", "poli.objective_repository.foldx_stability_and_sasa.isolated_function", "poli.objective_repository.foldx_stability_and_sasa.register", "poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASABlackBox", "poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASAProblemFactory", "poli.objective_repository.gfp_cbas", "poli.objective_repository.gfp_cbas.abstract_vae_wrapper", "poli.objective_repository.gfp_cbas.abstract_vae_wrapper.AbstractVAEWrapper", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_aas_to_idx_array", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_idx_array_to_aas", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.convert_mutations_to_sequence", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_argmax", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_balaji_predictions", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_experimental_X_y", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_gfp_X_y_aa", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_gfp_base_seq", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.get_samples", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_aa", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_aa_array", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.one_hot_encode_dna", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.partition_data", "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing.read_gfp_data", "poli.objective_repository.gfp_cbas.cbas_wrapper", "poli.objective_repository.gfp_cbas.cbas_wrapper.CBASVAEWrapper", "poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeDecoder", "poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeEncoder", "poli.objective_repository.gfp_cbas.gfp_gp", "poli.objective_repository.gfp_cbas.information", "poli.objective_repository.gfp_cbas.isolated_function", "poli.objective_repository.gfp_cbas.make_vae", "poli.objective_repository.gfp_cbas.make_vae.BaseVAE", "poli.objective_repository.gfp_cbas.make_vae.SimpleVAE", "poli.objective_repository.gfp_cbas.make_vae.build_vae", "poli.objective_repository.gfp_cbas.make_vae.identity_loss", "poli.objective_repository.gfp_cbas.make_vae.summed_categorical_crossentropy", "poli.objective_repository.gfp_cbas.register", "poli.objective_repository.gfp_cbas.register.GFPCBasBlackBox", "poli.objective_repository.gfp_cbas.register.GFPCBasProblemFactory", "poli.objective_repository.gfp_select", "poli.objective_repository.gfp_select.information", "poli.objective_repository.gfp_select.isolated_function", "poli.objective_repository.gfp_select.register", "poli.objective_repository.gfp_select.register.GFPBlackBox", "poli.objective_repository.gfp_select.register.GFPSelectionProblemFactory", "poli.objective_repository.gsk3_beta", "poli.objective_repository.gsk3_beta.information", "poli.objective_repository.gsk3_beta.register", "poli.objective_repository.isomer_c7h8n2o2", "poli.objective_repository.isomer_c7h8n2o2.information", "poli.objective_repository.isomer_c7h8n2o2.register", "poli.objective_repository.isomer_c9h10n2o2pf2cl", "poli.objective_repository.isomer_c9h10n2o2pf2cl.information", "poli.objective_repository.isomer_c9h10n2o2pf2cl.register", "poli.objective_repository.jnk3", "poli.objective_repository.jnk3.information", "poli.objective_repository.jnk3.register", "poli.objective_repository.median_1", "poli.objective_repository.median_1.information", "poli.objective_repository.median_1.register", "poli.objective_repository.median_2", "poli.objective_repository.median_2.information", "poli.objective_repository.median_2.register", "poli.objective_repository.mestranol_similarity", "poli.objective_repository.mestranol_similarity.information", "poli.objective_repository.mestranol_similarity.register", "poli.objective_repository.osimetrinib_mpo", "poli.objective_repository.osimetrinib_mpo.information", "poli.objective_repository.osimetrinib_mpo.register", "poli.objective_repository.penalized_logp_lambo", "poli.objective_repository.penalized_logp_lambo.information", "poli.objective_repository.penalized_logp_lambo.isolated_function", "poli.objective_repository.penalized_logp_lambo.register", "poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboBlackBox", "poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboProblemFactory", "poli.objective_repository.perindopril_mpo", "poli.objective_repository.perindopril_mpo.information", "poli.objective_repository.perindopril_mpo.register", "poli.objective_repository.ranolazine_mpo", "poli.objective_repository.ranolazine_mpo.information", "poli.objective_repository.ranolazine_mpo.register", "poli.objective_repository.rasp", "poli.objective_repository.rasp.information", "poli.objective_repository.rasp.isolated_function", "poli.objective_repository.rasp.register", "poli.objective_repository.rdkit_logp", "poli.objective_repository.rdkit_logp.information", "poli.objective_repository.rdkit_logp.register", "poli.objective_repository.rdkit_logp.register.LogPBlackBox", "poli.objective_repository.rdkit_logp.register.LogPProblemFactory", "poli.objective_repository.rdkit_qed", "poli.objective_repository.rdkit_qed.information", "poli.objective_repository.rdkit_qed.register", "poli.objective_repository.rdkit_qed.register.QEDBlackBox", "poli.objective_repository.rdkit_qed.register.QEDProblemFactory", "poli.objective_repository.rfp_foldx_stability_and_sasa", "poli.objective_repository.rfp_foldx_stability_and_sasa.information", "poli.objective_repository.rfp_foldx_stability_and_sasa.register", "poli.objective_repository.sa_tdc", "poli.objective_repository.sa_tdc.information", "poli.objective_repository.sa_tdc.isolated_function", "poli.objective_repository.sa_tdc.register", "poli.objective_repository.sa_tdc.register.SABlackBox", "poli.objective_repository.sa_tdc.register.SAProblemFactory", "poli.objective_repository.scaffold_hop", "poli.objective_repository.scaffold_hop.information", "poli.objective_repository.scaffold_hop.register", "poli.objective_repository.sitagliptin_mpo", "poli.objective_repository.sitagliptin_mpo.information", "poli.objective_repository.sitagliptin_mpo.register", "poli.objective_repository.super_mario_bros", "poli.objective_repository.super_mario_bros.information", "poli.objective_repository.super_mario_bros.level_utils", "poli.objective_repository.super_mario_bros.level_utils.add_padding_to_level", "poli.objective_repository.super_mario_bros.level_utils.clean_level", "poli.objective_repository.super_mario_bros.level_utils.level_to_array", "poli.objective_repository.super_mario_bros.level_utils.level_to_list", "poli.objective_repository.super_mario_bros.level_utils.levels_to_onehot", "poli.objective_repository.super_mario_bros.level_utils.onehot_to_levels", "poli.objective_repository.super_mario_bros.level_utils.tensor_to_sim_level", "poli.objective_repository.super_mario_bros.level_utils.vectorized", "poli.objective_repository.super_mario_bros.model", "poli.objective_repository.super_mario_bros.model.VAEMario", "poli.objective_repository.super_mario_bros.model.load_example_model", "poli.objective_repository.super_mario_bros.register", "poli.objective_repository.thiothixene_rediscovery", "poli.objective_repository.thiothixene_rediscovery.information", "poli.objective_repository.thiothixene_rediscovery.register", "poli.objective_repository.toy_continuous_problem", "poli.objective_repository.toy_continuous_problem.definitions", "poli.objective_repository.toy_continuous_problem.definitions.ackley_function_01", "poli.objective_repository.toy_continuous_problem.definitions.alpine_01", "poli.objective_repository.toy_continuous_problem.definitions.alpine_02", "poli.objective_repository.toy_continuous_problem.definitions.bent_cigar", "poli.objective_repository.toy_continuous_problem.definitions.brown", "poli.objective_repository.toy_continuous_problem.definitions.camelback_2d", "poli.objective_repository.toy_continuous_problem.definitions.chung_reynolds", "poli.objective_repository.toy_continuous_problem.definitions.cosine_mixture", "poli.objective_repository.toy_continuous_problem.definitions.cross_in_tray", "poli.objective_repository.toy_continuous_problem.definitions.deb_01", "poli.objective_repository.toy_continuous_problem.definitions.deb_02", "poli.objective_repository.toy_continuous_problem.definitions.deflected_corrugated_spring", "poli.objective_repository.toy_continuous_problem.definitions.easom", "poli.objective_repository.toy_continuous_problem.definitions.egg_holder", "poli.objective_repository.toy_continuous_problem.definitions.shifted_sphere", "poli.objective_repository.toy_continuous_problem.definitions.styblinski_tang", "poli.objective_repository.toy_continuous_problem.information", "poli.objective_repository.toy_continuous_problem.register", "poli.objective_repository.toy_continuous_problem.register.ToyContinuousBlackBox", "poli.objective_repository.toy_continuous_problem.register.ToyContinuousProblemFactory", "poli.objective_repository.toy_continuous_problem.toy_continuous_problem", "poli.objective_repository.toy_continuous_problem.toy_continuous_problem.ToyContinuousProblem", "poli.objective_repository.troglitazone_rediscovery", "poli.objective_repository.troglitazone_rediscovery.information", "poli.objective_repository.troglitazone_rediscovery.register", "poli.objective_repository.valsartan_smarts", "poli.objective_repository.valsartan_smarts.information", "poli.objective_repository.valsartan_smarts.register", "poli.objective_repository.white_noise", "poli.objective_repository.white_noise.register", "poli.objective_repository.white_noise.register.WhiteNoiseBlackBox", "poli.objective_repository.white_noise.register.WhiteNoiseProblemFactory", "poli.objective_repository.zaleplon_mpo", "poli.objective_repository.zaleplon_mpo.information", "poli.objective_repository.zaleplon_mpo.register", "poli.registered_objectives", "poli.tests", "poli.tests.docs_examples", "poli.tests.docs_examples.test_objective_functions", "poli.tests.docs_examples.test_objective_functions.test_aloha_example", "poli.tests.docs_examples.test_objective_functions.test_logp_example", "poli.tests.docs_examples.test_objective_functions.test_logp_example_using_strings", "poli.tests.docs_examples.test_objective_functions.test_qed_example", "poli.tests.docs_examples.test_objective_functions.test_qed_example_using_strings", "poli.tests.docs_examples.test_objective_functions.test_white_noise_example", "poli.tests.registry", "poli.tests.registry.basic_objectives", "poli.tests.registry.basic_objectives.test_basic_objectives", "poli.tests.registry.basic_objectives.test_basic_objectives.test_registering_aloha", "poli.tests.registry.basic_objectives.test_basic_objectives.test_registering_white_noise", "poli.tests.registry.basic_objectives.test_budget_exhaustion", "poli.tests.registry.chemistry", "poli.tests.registry.chemistry.test_chemistry_objectives", "poli.tests.registry.proteins", "poli.tests.registry.proteins.test_foldx", "poli.tests.registry.proteins.test_foldx_rfp_lambo", "poli.tests.registry.proteins.test_rasp", "poli.tests.registry.test_basic_loop_without_create", "poli.tests.registry.test_black_box_instancing", "poli.tests.registry.test_force_isolation", "poli.tests.registry.test_instancing_black_boxes_alone", "poli.tests.registry.test_multi_objective_and_negative", "poli.tests.registry.test_passing_array_of_strings", "poli.tests.registry.toy_continuous_problems", "poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims", "poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims.test_embed_camelback_into_high_dimensions", "poli.tests.registry.toy_continuous_problems.test_instancing_of_toy_continuous_problems", "poli.tests.test_core_promises", "poli.tests.test_minimal_working_example", "poli.tests.test_minimal_working_example.test_minimal_working_example", "poli.tests.test_seeding", "poli.tests.test_seeding.test_seeding_in_white_noise", "poli.tests.util", "poli.tests.util.test_foldx_interface", "poli.tests.util.test_protein_utilities", "&lt;no title&gt;", "API documentation for poli", "References", "Adding a new black box to the repository", "Adding a new optimizer to <code class=\"docutils literal notranslate\"><span class=\"pre\">poli-baselines</span></code>", "Getting started", "poli \ud83e\uddea: a library of discrete objective functions", "Installing <code class=\"docutils literal notranslate\"><span class=\"pre\">foldx</span></code>", "Computing the energy of a protein and a single mutation", "Rapid Stability Predictions", "Albuterol Similarity (using TDC)", "All objective functions", "Aloha objective function", "Amlodipine MPO (using TDC)", "Celecoxib Rediscovery (using TDC)", "dockstring", "DRD2 Docking (using TDC)", "DRD3 docking (using TDC)", "Fexofenadine MPO (using TDC)", "Protein (RFP) stability and SASA (using <code class=\"docutils literal notranslate\"><span class=\"pre\">foldx</span></code>,<code class=\"docutils literal notranslate\"><span class=\"pre\">lambo</span></code>)", "Protein solvent accessibility (using <code class=\"docutils literal notranslate\"><span class=\"pre\">foldx</span></code>)", "Protein stability (using <code class=\"docutils literal notranslate\"><span class=\"pre\">foldx</span></code>)", "GSK3\u03b2 (using TDC)", "Mestranol Similarity (using TDC)", "Osimetrinib MPO (using TDC)", "Penalized logP (using <code class=\"docutils literal notranslate\"><span class=\"pre\">lambo</span></code>)", "Ranolazine MPO (using TDC)", "Log-solubility (logP)", "Quantitative Estimate of Druglikeness (QED)", "Synthetic Accessibility (using TDC)", "Sitagliptin MPO (using TDC)", "Optimizing jumps in Super Mario Bros", "Therapeutics Data Commons\u2019 oracles", "Objective function name", "Thiothixene Rediscovery (using TDC)", "Toy continuous objective functions", "Troglitazone Rediscovery (using TDC)", "White Noise objective function", "Zaleplon MPO (using TDC)", "Registering and running observers in isolated processes", "Optimizing protein stability using random mutations", "Defining a problem solver in <code class=\"docutils literal notranslate\"><span class=\"pre\">poli_baselines</span></code>", "Defining an observer", "Diving deeper: how does poli work under the hood?", "What is poli?", "Isolating black box objective functions", "Optimizing an objective function", "Registering an objective function in poli", "Bayesian Optimization", "CMA-ES", "Graph Genetic Algorithms", "Latent Space Bayesian Optimization", "Line Bayesian Optimization", "Discrete NSGA-2", "Random mutations", "Template: optimization algorithm"], "terms": {"librari": [0, 37, 42, 294, 378, 412, 414, 415], "discret": [0, 19, 112, 113, 114, 171, 373, 374, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 401, 404, 406, 407, 408, 410, 411, 412, 414, 416, 418], "black": [0, 2, 3, 4, 5, 9, 10, 11, 12, 17, 18, 19, 22, 23, 24, 43, 73, 103, 104, 106, 107, 112, 113, 114, 127, 128, 137, 144, 145, 150, 154, 155, 157, 161, 162, 164, 167, 168, 202, 212, 238, 248, 249, 252, 253, 257, 258, 260, 262, 267, 313, 324, 325, 354, 374, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 408, 410, 411, 412, 414, 416, 418, 423], "box": [0, 2, 3, 4, 5, 9, 10, 11, 12, 17, 18, 19, 22, 23, 24, 43, 73, 103, 104, 106, 107, 112, 113, 114, 127, 128, 137, 144, 145, 150, 154, 155, 157, 161, 162, 164, 167, 168, 202, 212, 238, 248, 249, 252, 253, 257, 258, 260, 262, 267, 313, 324, 325, 354, 374, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 408, 410, 411, 412, 414, 416, 418, 423], "object": [0, 2, 3, 4, 5, 12, 17, 18, 21, 23, 24, 37, 51, 55, 60, 61, 69, 76, 83, 84, 102, 103, 104, 105, 106, 107, 111, 112, 113, 124, 127, 128, 133, 137, 144, 145, 154, 155, 157, 161, 162, 167, 168, 202, 212, 221, 238, 252, 257, 259, 262, 265, 266, 267, 289, 294, 310, 312, 313, 316, 324, 352, 354, 359, 372, 373, 374, 375, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 404, 406, 408, 411, 412, 418, 423], "function": [0, 2, 3, 4, 5, 12, 13, 17, 18, 19, 26, 27, 28, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 48, 49, 53, 54, 56, 58, 59, 61, 65, 68, 71, 72, 77, 80, 81, 95, 102, 103, 104, 106, 107, 111, 112, 113, 124, 127, 128, 133, 137, 144, 145, 150, 155, 157, 162, 168, 173, 195, 202, 236, 237, 238, 252, 253, 257, 258, 259, 267, 277, 289, 293, 294, 310, 312, 313, 315, 316, 324, 325, 342, 352, 354, 355, 356, 359, 363, 365, 372, 373, 374, 375, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 404, 406, 408, 411, 412, 418, 422, 423], "modul": [0, 1, 2, 5, 6, 10, 22, 23, 26, 35, 38, 40, 41, 43, 52, 53, 56, 58, 59, 62, 67, 68, 73, 74, 75, 77, 81, 94, 107, 108, 111, 115, 118, 121, 124, 127, 130, 133, 139, 142, 150, 157, 164, 170, 190, 192, 204, 210, 213, 216, 219, 222, 225, 228, 231, 234, 236, 237, 240, 243, 246, 248, 249, 250, 255, 260, 263, 269, 272, 275, 290, 293, 317, 320, 323, 327, 331, 332, 340, 341, 346, 348, 352, 354, 358, 365, 367, 370], "class": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 17, 18, 19, 20, 21, 23, 24, 25, 33, 36, 37, 50, 51, 59, 60, 63, 64, 66, 75, 76, 103, 110, 112, 113, 114, 117, 120, 123, 126, 127, 128, 129, 132, 136, 137, 138, 141, 144, 145, 153, 154, 155, 156, 160, 161, 162, 163, 166, 167, 168, 169, 171, 172, 188, 189, 190, 191, 192, 194, 195, 196, 197, 201, 202, 203, 206, 207, 209, 212, 215, 218, 221, 224, 227, 230, 233, 236, 237, 238, 239, 242, 245, 248, 249, 252, 253, 254, 257, 258, 259, 262, 265, 266, 267, 268, 271, 274, 289, 292, 312, 313, 314, 315, 316, 319, 322, 324, 325, 326, 329, 373, 374, 411, 412, 417], "util": [1, 26, 192, 277, 373, 412, 415, 418], "insid": [1, 5, 14, 32, 107, 133, 373, 375, 376, 378, 379, 387, 401, 405, 410, 414, 415, 417], "thi": [2, 4, 5, 6, 7, 9, 13, 17, 18, 19, 23, 26, 27, 28, 31, 32, 33, 34, 37, 41, 42, 48, 49, 53, 54, 56, 60, 61, 68, 72, 74, 75, 76, 77, 80, 81, 104, 106, 110, 112, 117, 120, 123, 127, 132, 133, 138, 141, 154, 161, 167, 188, 192, 212, 215, 218, 221, 224, 227, 230, 233, 236, 237, 242, 245, 248, 249, 252, 257, 262, 271, 274, 292, 294, 310, 312, 313, 319, 322, 324, 329, 352, 354, 359, 365, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411, 412, 414, 415, 416, 418, 419, 422, 423, 424, 425], "implement": [2, 4, 5, 6, 9, 10, 11, 13, 17, 18, 19, 20, 22, 23, 41, 75, 110, 113, 117, 120, 123, 127, 128, 132, 136, 141, 155, 162, 168, 171, 188, 196, 212, 215, 218, 221, 224, 227, 230, 233, 234, 236, 237, 242, 245, 248, 249, 265, 266, 267, 271, 274, 292, 313, 319, 322, 329, 373, 374, 376, 381, 385, 389, 395, 405, 410, 411, 414, 415, 416, 417, 418, 419, 423], "abstract": [2, 3, 5, 6, 7, 11, 12, 19, 36, 37, 373, 410, 417], "from": [2, 24, 28, 32, 42, 48, 49, 52, 53, 54, 55, 56, 57, 75, 76, 80, 106, 110, 117, 120, 123, 133, 141, 155, 162, 168, 174, 179, 182, 197, 215, 218, 224, 227, 230, 233, 242, 245, 248, 249, 271, 274, 280, 283, 292, 294, 300, 309, 319, 322, 329, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425], "which": [2, 3, 5, 8, 12, 19, 20, 24, 50, 57, 76, 80, 84, 105, 127, 137, 238, 257, 259, 267, 312, 313, 325, 373, 374, 378, 379, 387, 389, 399, 401, 405, 410, 411, 412, 414, 415, 416, 417, 418], "all": [2, 11, 102, 104, 107, 112, 113, 114, 133, 188, 294, 325, 373, 374, 375, 378, 379, 382, 410, 411, 414, 415, 417], "should": [2, 60, 133, 373, 374, 375, 377, 380, 382, 383, 384, 385, 386, 387, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 404, 405, 406, 407, 408, 410, 411, 412, 415, 416, 417], "inherit": [2, 18, 110, 117, 120, 123, 141, 215, 218, 224, 227, 230, 233, 242, 245, 271, 274, 292, 319, 322, 329, 374, 410, 411, 412, 417], "info": [24, 103, 137, 325, 374, 410, 411, 412, 414, 417, 423], "problemsetupinform": [24, 37, 103, 325, 389, 412, 417], "batch_siz": [3, 4, 12, 18, 24, 104, 113, 128, 137, 155, 162, 168, 184, 202, 238, 253, 258, 267, 313, 325, 373, 417, 423], "option": [3, 4, 12, 18, 24, 27, 31, 32, 33, 34, 45, 47, 48, 49, 51, 54, 57, 69, 70, 76, 78, 79, 82, 83, 84, 96, 97, 104, 106, 113, 128, 137, 155, 162, 168, 202, 238, 253, 258, 267, 313, 316, 325], "int": [3, 4, 12, 18, 24, 37, 42, 61, 72, 78, 79, 96, 97, 104, 106, 113, 128, 137, 155, 162, 168, 189, 202, 238, 253, 258, 267, 278, 279, 282, 313, 316, 325, 373, 374, 411, 412, 416, 417], "none": [3, 4, 12, 18, 24, 27, 31, 33, 34, 37, 48, 49, 51, 54, 69, 70, 76, 96, 97, 104, 106, 113, 128, 137, 155, 162, 168, 183, 185, 187, 202, 203, 238, 253, 258, 267, 313, 316, 325, 373, 374, 380, 382, 383, 384, 385, 386, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 412, 416, 417], "parallel": [3, 4, 12, 24, 104, 113, 128, 137, 155, 162, 168, 202, 238, 253, 258, 267, 313, 325, 373], "bool": [3, 4, 12, 24, 31, 32, 45, 46, 47, 48, 49, 54, 76, 78, 79, 82, 83, 84, 104, 106, 113, 128, 137, 155, 162, 168, 180, 202, 238, 253, 258, 267, 310, 313, 325, 373, 416], "fals": [3, 4, 12, 24, 32, 46, 47, 48, 49, 54, 76, 79, 82, 83, 84, 104, 106, 113, 128, 137, 155, 162, 168, 179, 180, 186, 202, 238, 253, 258, 267, 283, 313, 325, 373, 401, 407, 412, 416], "num_work": [3, 4, 12, 24, 104, 113, 128, 137, 155, 162, 168, 202, 238, 253, 258, 267, 313, 325, 373], "evaluation_budget": [3, 4, 12, 24, 104, 113, 128, 137, 155, 162, 168, 202, 238, 253, 258, 267, 313, 325, 373], "inf": [3, 4, 11, 12, 24, 104, 110, 113, 117, 120, 123, 128, 137, 141, 155, 162, 168, 202, 215, 218, 224, 227, 230, 233, 238, 242, 245, 253, 258, 267, 271, 274, 292, 313, 319, 322, 325, 329, 373, 407], "base": [3, 7, 16, 37, 60, 133, 196, 372, 375, 376, 378, 381, 399, 414, 417, 423], "optim": [3, 5, 11, 19, 37, 75, 120, 142, 234, 236, 237, 292, 293, 294, 312, 315, 319, 359, 372, 377, 378, 381, 384, 404, 405, 406, 411, 412, 417, 423, 424], "problem": [3, 6, 7, 9, 11, 12, 20, 21, 24, 26, 28, 31, 32, 39, 67, 68, 70, 103, 104, 112, 113, 114, 128, 129, 138, 156, 169, 252, 257, 259, 260, 268, 275, 294, 312, 313, 323, 324, 325, 359, 375, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 406, 407, 408, 412, 414, 415, 423, 424], "paramet": [3, 4, 7, 12, 18, 21, 24, 27, 28, 31, 32, 33, 34, 42, 45, 46, 47, 48, 49, 51, 54, 55, 57, 60, 61, 69, 70, 72, 76, 77, 78, 79, 80, 82, 83, 84, 96, 97, 103, 104, 106, 113, 114, 128, 129, 137, 155, 156, 162, 168, 169, 202, 253, 258, 259, 267, 268, 313, 325], "The": [3, 4, 9, 12, 18, 19, 21, 23, 24, 27, 28, 31, 32, 33, 34, 42, 51, 54, 55, 57, 60, 61, 69, 70, 72, 75, 76, 78, 79, 80, 82, 83, 84, 103, 104, 105, 106, 111, 112, 113, 114, 128, 133, 137, 154, 155, 161, 162, 167, 168, 196, 202, 234, 253, 258, 259, 262, 267, 289, 308, 309, 312, 313, 324, 325, 372, 374, 376, 378, 379, 381, 385, 386, 392, 401, 410, 411, 415, 416, 417, 423], "setup": [7, 19, 20, 24, 51, 72, 114, 129, 138, 156, 169, 259, 268, 325, 389], "inform": [3, 7, 9, 19, 20, 24, 37, 51, 72, 103, 104, 106, 114, 127, 128, 129, 138, 156, 169, 248, 249, 259, 268, 316, 325, 372, 378, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408, 410, 412, 417], "provid": [18, 51, 102, 110, 138, 162, 230, 373, 376, 377, 378, 386, 401, 412, 414, 415], "detail": [77, 378, 410, 414], "about": [32, 103, 104, 106, 376, 377, 381, 410, 414, 417], "batch": [3, 4, 12, 18, 24, 104, 113, 128, 137, 155, 162, 168, 202, 253, 258, 267, 313, 325], "size": [3, 4, 12, 18, 24, 42, 104, 113, 128, 137, 155, 162, 168, 202, 253, 258, 267, 313, 325, 417, 419, 423], "evalu": [3, 4, 5, 12, 17, 18, 19, 24, 104, 106, 113, 128, 137, 155, 162, 168, 202, 253, 258, 259, 267, 313, 325, 374, 375, 390, 391, 411, 412, 415, 417], "default": [3, 4, 12, 18, 24, 27, 32, 33, 34, 51, 54, 57, 76, 78, 79, 82, 83, 84, 104, 113, 128, 137, 155, 162, 168, 202, 253, 258, 267, 313, 325, 373, 374, 380, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 396, 400, 404, 406, 408, 417, 418, 422], "flag": [3, 4, 12, 24, 31, 113, 128, 137, 155, 162, 168, 202, 253, 258, 267, 313], "indic": [3, 4, 12, 24, 31, 113, 128, 137, 155, 162, 168, 174, 175, 202, 253, 258, 267, 313, 374, 411], "whether": [3, 4, 9, 12, 19, 24, 31, 54, 82, 83, 113, 128, 137, 155, 162, 168, 202, 253, 258, 267, 313, 325, 354, 365, 373, 378, 397, 398, 401, 410, 412, 417], "number": [3, 4, 12, 19, 24, 42, 61, 72, 94, 95, 96, 97, 104, 106, 113, 128, 137, 155, 162, 168, 202, 238, 253, 258, 267, 289, 313, 325, 374, 380, 381, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 401, 404, 406, 408, 411, 414, 416], "worker": [3, 4, 12, 24, 113, 128, 137, 155, 162, 168, 202, 253, 258, 267, 313, 325], "us": [3, 4, 5, 8, 9, 12, 19, 24, 27, 31, 33, 34, 37, 48, 49, 51, 54, 56, 60, 61, 70, 74, 75, 76, 104, 106, 110, 112, 113, 117, 120, 123, 128, 132, 133, 136, 137, 141, 155, 161, 162, 164, 168, 178, 179, 180, 202, 212, 215, 218, 221, 224, 227, 230, 233, 234, 236, 237, 238, 242, 245, 248, 249, 250, 253, 255, 257, 258, 260, 265, 266, 267, 271, 274, 292, 312, 313, 319, 322, 324, 329, 352, 359, 372, 373, 374, 377, 378, 379, 381, 385, 397, 398, 405, 409, 411, 412, 415, 416, 417, 418, 419, 422, 423], "half": [3, 4, 12, 104, 137, 155, 162, 168, 202, 313, 325], "avail": [3, 4, 12, 104, 133, 137, 154, 155, 161, 162, 167, 168, 202, 262, 313, 325, 373, 375, 378, 381, 389, 390, 391, 401, 405, 410, 414, 416, 417], "cpu": [3, 4, 12, 104, 137, 155, 162, 168, 202, 313, 325], "maximum": [3, 4, 12, 19, 104, 113, 128, 137, 155, 162, 168, 202, 253, 258, 267, 313, 325, 373, 417], "allow": [3, 4, 5, 8, 9, 12, 19, 23, 24, 104, 137, 154, 155, 161, 162, 167, 168, 202, 252, 257, 262, 312, 313, 373, 374, 377, 378, 401, 405, 411, 414, 416, 417], "float": [3, 4, 12, 24, 137, 155, 162, 168, 202, 253, 257, 258, 267, 306, 313, 325, 373, 376, 416], "type": [3, 12, 18, 24, 27, 33, 45, 46, 47, 48, 49, 55, 60, 61, 69, 70, 76, 78, 79, 80, 82, 83, 84, 104, 105, 113, 128, 132, 137, 176, 181, 253, 258, 313, 373, 378, 386, 417], "observ": [3, 5, 26, 27, 33, 34, 35, 36, 37, 50, 51, 67, 68, 69, 71, 72, 104, 106, 179, 376, 416, 417], "record": [3, 289], "dure": [3, 72, 373, 405], "abstractobserv": [3, 33, 69, 104, 106, 412], "observer_info": 3, "given": [3, 18, 27, 48, 49, 61, 69, 70, 76, 79, 84, 127, 128, 129, 162, 176, 177, 178, 289, 374, 375, 379, 380, 383, 385, 388, 393, 394, 396, 400, 401, 408, 411], "after": [3, 33, 37, 133, 373, 374, 378, 387, 389, 410, 411, 417], "initi": [3, 4, 12, 18, 19, 21, 24, 37, 51, 60, 72, 76, 103, 104, 106, 113, 128, 137, 155, 162, 168, 202, 253, 258, 267, 313, 325, 374, 378, 410, 411, 414, 417, 423], "set_observ": [3, 409], "set": [3, 31, 33, 34, 37, 60, 84, 133, 178, 180, 186, 192, 253, 258, 373, 374, 385, 399, 401, 411, 412, 414], "reset_evaluation_budget": 3, "reset": [3, 106], "budget": [3, 15, 19, 24, 106], "made": 3, "0": [3, 76, 78, 155, 162, 168, 198, 257, 283, 306, 374, 375, 376, 378, 380, 383, 384, 386, 388, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 411, 412, 414, 416, 418, 419, 422], "__call__": [3, 4, 5, 373], "x": [3, 4, 5, 18, 37, 51, 106, 113, 128, 132, 133, 162, 180, 185, 186, 253, 258, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 309, 310, 313, 325, 372, 373, 374, 375, 380, 382, 383, 384, 385, 386, 387, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411, 412, 417, 418], "context": [3, 5, 18, 37, 51, 106, 113, 128, 162, 253, 258, 313, 325, 373, 412, 417], "input": [3, 18, 27, 34, 39, 41, 104, 113, 128, 162, 253, 258, 313, 325, 373, 375, 376, 380, 382, 383, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 411, 417, 418, 422, 423], "_black_box": [3, 4, 5, 18, 113, 128, 162, 253, 258, 313, 325, 373, 417], "method": [3, 4, 5, 7, 8, 12, 18, 21, 24, 37, 51, 60, 76, 80, 84, 103, 104, 113, 114, 128, 129, 137, 138, 155, 156, 162, 163, 168, 169, 172, 178, 189, 190, 191, 196, 197, 202, 203, 209, 238, 239, 253, 254, 258, 259, 267, 268, 313, 314, 316, 325, 326, 373, 374, 378, 389, 390, 391, 410, 411, 412, 414, 416, 417], "termin": [3, 72, 412, 417], "__enter__": 3, "enter": 3, "manag": [3, 54, 106], "__exit__": 3, "exc_typ": 3, "exc_val": 3, "exc_tb": 3, "exit": 3, "__del__": 3, "destructor": 3, "__neg__": 3, "creat": [3, 7, 19, 24, 31, 32, 33, 54, 60, 67, 68, 69, 70, 102, 106, 114, 129, 138, 156, 169, 259, 268, 275, 352, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 406, 407, 408, 410, 412, 415, 416, 423, 424, 425], "new": [3, 12, 137, 376, 378, 411, 417], "neg": [3, 200, 385, 391], "origin": [3, 4, 76, 77, 80, 171, 309, 376, 378], "one": [3, 183, 282, 372, 373, 374, 376, 378, 379, 381, 389, 410, 411, 414, 415, 422], "__init__": [3, 4, 7, 8, 12, 18, 21, 24, 37, 51, 60, 76, 103, 113, 114, 128, 129, 137, 138, 155, 156, 162, 163, 168, 169, 172, 189, 190, 191, 196, 197, 202, 203, 209, 238, 239, 253, 254, 258, 259, 267, 268, 313, 314, 316, 325, 326, 374, 411, 412, 417], "execut": [3, 4, 12, 56, 60, 69, 133, 137, 155, 162, 168, 202, 267, 313, 377, 387], "we": [3, 4, 12, 17, 24, 32, 74, 80, 104, 110, 117, 120, 123, 132, 133, 137, 141, 154, 155, 161, 162, 167, 168, 179, 202, 212, 215, 218, 221, 224, 227, 230, 233, 234, 236, 237, 242, 245, 252, 253, 257, 258, 262, 271, 274, 292, 294, 308, 310, 312, 313, 319, 322, 329, 359, 373, 374, 375, 376, 378, 379, 380, 383, 384, 386, 387, 388, 392, 393, 394, 395, 396, 399, 400, 401, 404, 405, 406, 408, 410, 411, 412, 414, 415, 416, 417, 418, 419, 422, 423], "f": [4, 23, 74, 75, 106, 154, 161, 167, 262, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 412, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425], "abstractblackbox": [4, 12, 18, 106, 137, 155, 162, 168, 202, 313, 373, 374, 411, 412, 417], "A": [4, 11, 12, 24, 31, 33, 42, 45, 46, 47, 48, 49, 70, 74, 76, 78, 79, 80, 82, 83, 106, 112, 113, 114, 133, 137, 142, 150, 154, 155, 161, 162, 164, 167, 168, 238, 253, 258, 260, 262, 263, 267, 275, 293, 313, 315, 323, 325, 372, 375, 376, 378, 379, 381, 382, 390, 391, 399, 401, 412, 417], "wrapper": [4, 13, 103, 133, 142, 171, 188, 252, 257, 263, 376, 381, 423], "negat": 4, "If": [4, 18, 27, 32, 33, 34, 37, 42, 45, 46, 47, 48, 49, 51, 54, 55, 61, 72, 75, 76, 78, 79, 80, 84, 96, 97, 104, 106, 212, 310, 313, 373, 374, 375, 376, 377, 378, 380, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 403, 404, 406, 408, 412, 414, 415, 416, 417], "you": [4, 5, 12, 76, 84, 110, 117, 120, 123, 132, 133, 137, 141, 212, 215, 218, 221, 224, 233, 242, 245, 253, 258, 267, 271, 274, 292, 294, 319, 322, 329, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 408, 410, 411, 412, 414, 415, 416, 417], "construct": [4, 197], "maxim": [4, 123, 289, 294, 309, 310, 374, 405], "minim": [4, 294, 373, 374, 381, 385, 411, 423], "latter": [4, 378], "onli": [4, 5, 106, 171, 179, 188, 303, 307, 308, 313, 373, 374, 375, 378, 379, 385, 389, 390, 391, 405, 411, 416, 417], "differ": [4, 23, 78, 154, 161, 167, 262, 373, 374, 375, 378, 379, 411, 412, 415, 417], "return": [4, 7, 24, 27, 45, 46, 47, 48, 49, 55, 57, 61, 69, 70, 76, 78, 79, 80, 82, 83, 84, 104, 105, 106, 114, 129, 156, 162, 169, 176, 177, 178, 181, 183, 198, 199, 238, 252, 253, 257, 258, 259, 268, 281, 323, 324, 325, 373, 374, 382, 385, 389, 390, 391, 397, 398, 401, 407, 410, 411, 417], "instead": [4, 294, 374, 390, 391, 411], "same": [4, 79, 80, 234, 236, 237, 238, 373, 375, 379, 414], "factori": [6, 7, 23, 31, 32, 60, 70, 102, 104, 106, 107, 111, 112, 114, 124, 127, 129, 138, 144, 145, 154, 156, 157, 161, 167, 169, 252, 257, 259, 262, 268, 289, 312, 324, 373, 376], "defin": [7, 33, 77, 260, 294, 359, 374, 405, 414, 415, 416], "interfac": [7, 75, 102, 376, 392, 415], "instanc": [7, 12, 18, 114, 129, 137, 156, 169, 259, 268, 313, 373, 375, 410, 415, 417, 423], "get_setup_inform": [7, 114, 129, 138, 156, 169, 259, 268, 373, 417], "specifi": [7, 12, 54, 55, 104, 114, 129, 137, 156, 169, 177, 182, 190, 196, 259, 267, 268, 312, 378, 397, 398, 416, 417, 423], "metaclass": 8, "abstractproblemfactori": [8, 31, 70, 373, 417], "overrid": 8, "__repr__": 8, "__str__": 8, "arg": [8, 190, 191, 196, 197, 373, 378], "kwarg": [8, 31, 70, 190, 191, 196, 197, 373, 417], "contain": [5, 9, 10, 20, 22, 26, 42, 56, 68, 70, 74, 77, 78, 79, 81, 105, 174, 175, 192, 316, 373, 375, 378, 390, 391, 401, 417], "relat": [10, 11, 22, 43, 73, 104, 377, 410], "around": [13, 133, 142, 252, 257, 263, 376, 381, 423], "therapeut": [11, 12, 13, 110, 117, 120, 123, 132, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 265, 266, 271, 274, 292, 319, 322, 329, 372, 376, 380, 381, 383, 384, 386, 387, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408, 417], "data": [12, 13, 40, 54, 113, 128, 133, 179, 180, 186, 187, 192, 212, 221, 372, 376, 378, 380, 381, 383, 384, 386, 387, 388, 389, 392, 393, 394, 396, 399, 400, 404, 406, 408, 417], "common": [12, 13, 102, 372, 376, 378, 380, 381, 383, 384, 386, 387, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408, 417, 423], "tdc": [11, 12, 13, 110, 117, 120, 123, 132, 133, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 263, 265, 266, 267, 271, 274, 292, 319, 322, 329, 376, 381], "oracl": [12, 13, 110, 117, 120, 123, 132, 136, 137, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 263, 265, 266, 267, 271, 274, 292, 319, 322, 329, 376, 380, 381, 383, 384, 386, 387, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "1": [11, 12, 13, 23, 32, 42, 75, 78, 80, 106, 110, 117, 120, 123, 127, 128, 129, 132, 136, 141, 142, 154, 155, 161, 162, 167, 168, 174, 175, 179, 186, 198, 202, 212, 215, 218, 221, 224, 227, 230, 233, 234, 236, 237, 238, 242, 245, 248, 249, 257, 262, 265, 266, 267, 271, 274, 278, 292, 294, 300, 309, 312, 316, 319, 322, 329, 372, 374, 375, 376, 378, 379, 380, 382, 383, 384, 386, 387, 388, 392, 393, 394, 395, 396, 397, 399, 400, 401, 403, 404, 405, 406, 407, 408, 411, 412, 414, 417, 418, 419, 422, 423], "so": [31, 80, 253, 258, 373, 374, 378, 389, 395, 411, 415, 417], "far": [374, 411], "support": [352, 373, 375, 376, 411, 415], "two": [61, 78, 375, 378, 405, 412, 415, 416, 417, 423], "drd3": [133, 136, 137, 138, 376, 381], "synthet": [263, 265, 266, 267, 268, 372, 376, 381], "access": [54, 76, 133, 150, 155, 156, 164, 168, 169, 260, 265, 266, 267, 268, 372, 373, 376, 378, 381, 387, 401, 405], "see": [48, 49, 77, 112, 133, 294, 312, 315, 324, 373, 375, 378, 379, 389, 410, 414, 415, 417], "document": [238, 375, 376, 378, 400, 408, 410, 415], "our": [373, 374, 378, 381, 385, 390, 391, 410, 411, 412, 415, 416, 417, 418, 419, 423], "more": [77, 155, 162, 168, 315, 316, 375, 378, 400, 408, 410, 414], "refer": [11, 12, 13, 23, 75, 110, 117, 120, 123, 127, 128, 129, 132, 133, 136, 141, 142, 212, 215, 218, 221, 224, 227, 230, 233, 234, 236, 237, 242, 245, 265, 266, 271, 274, 292, 319, 322, 329, 376, 380, 383, 384, 386, 388, 389, 392, 393, 394, 396, 399, 400, 404, 406, 408], "artifici": [11, 12, 13, 110, 117, 120, 123, 132, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 265, 266, 271, 274, 292, 294, 319, 322, 329, 401], "intellig": [11, 12, 13, 110, 117, 120, 123, 132, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 265, 266, 271, 274, 292, 319, 322, 329], "foundat": [11, 12, 13, 110, 117, 120, 123, 132, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 265, 266, 271, 274, 292, 319, 322, 329], "scienc": [11, 12, 13, 110, 117, 120, 123, 132, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 265, 266, 271, 274, 292, 319, 322, 329, 372], "huang": [11, 12, 13, 110, 117, 120, 123, 132, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 265, 266, 271, 274, 292, 319, 322, 329, 372, 376, 380, 383, 384, 386, 387, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "kexin": [13, 372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "tianfan": [11, 13, 372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "fu": [11, 12, 13, 110, 117, 120, 123, 132, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 265, 266, 271, 274, 292, 319, 322, 329, 372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "wenhao": [11, 13, 372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "gao": [11, 12, 13, 110, 117, 120, 123, 132, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 265, 266, 271, 274, 292, 319, 322, 329, 372, 380, 381, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "yue": [13, 372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "zhao": [13, 372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "yusuf": [13, 372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "roohani": [13, 372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "jure": [13, 372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "leskovec": [13, 372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "connor": [11, 13, 372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "w": [11, 12, 13, 74, 110, 117, 120, 123, 132, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 265, 266, 271, 274, 282, 292, 319, 322, 329, 372, 376, 378, 380, 383, 384, 386, 387, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408, 412], "colei": [11, 13, 372, 376, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "cao": [13, 372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "xiao": [13, 372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "jimeng": [11, 13, 372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "sun": [11, 13, 212, 221, 372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "marinka": [13, 372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "zitnik": [13, 372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "natur": 13, "chemic": [13, 127, 128, 129, 372, 380, 383, 384, 388, 393, 394, 396, 400, 404, 406, 408], "biologi": [13, 133, 154, 161, 167, 262, 372, 387], "18": [11, 12, 13, 110, 117, 120, 123, 132, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 265, 266, 271, 274, 292, 319, 322, 329, 372], "10": [11, 12, 13, 42, 110, 117, 120, 123, 127, 128, 129, 132, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 248, 249, 265, 266, 271, 274, 292, 319, 322, 329, 372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 407, 408, 410, 418, 419, 422, 423], "octob": 13, "2022": [11, 12, 13, 75, 110, 117, 120, 123, 127, 128, 129, 132, 136, 141, 142, 212, 215, 218, 221, 224, 227, 230, 233, 234, 236, 237, 242, 245, 265, 266, 271, 274, 292, 319, 322, 329, 372, 376, 377, 378, 381, 385, 395, 410], "1033": [11, 12, 13, 110, 117, 120, 123, 132, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 265, 266, 271, 274, 292, 319, 322, 329], "36": 13, "http": [11, 12, 13, 42, 53, 54, 75, 77, 110, 117, 120, 123, 127, 128, 129, 132, 133, 136, 141, 142, 212, 215, 218, 221, 224, 227, 230, 233, 234, 236, 237, 242, 245, 248, 249, 265, 266, 271, 274, 292, 294, 315, 316, 319, 322, 329, 372, 373, 375, 376, 377, 378, 380, 383, 384, 386, 388, 389, 392, 393, 394, 396, 399, 400, 404, 406, 408, 410, 414, 417], "doi": [11, 12, 13, 110, 117, 120, 123, 127, 128, 129, 132, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 248, 249, 265, 266, 271, 274, 292, 319, 322, 329, 372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "org": [11, 12, 13, 42, 75, 110, 117, 120, 123, 127, 128, 129, 132, 136, 141, 142, 212, 215, 218, 221, 224, 227, 230, 233, 234, 236, 237, 242, 245, 248, 249, 265, 266, 271, 274, 292, 294, 315, 316, 319, 322, 329, 372, 378, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "1038": [11, 12, 13, 110, 117, 120, 123, 132, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 265, 266, 271, 274, 292, 319, 322, 329], "s41589": [11, 12, 13, 110, 117, 120, 123, 132, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 265, 266, 271, 274, 292, 319, 322, 329], "022": [11, 12, 13, 110, 117, 120, 123, 132, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 265, 266, 271, 274, 292, 319, 322, 329], "01131": [11, 12, 13, 110, 117, 120, 123, 132, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 265, 266, 271, 274, 292, 319, 322, 329], "2": [11, 12, 13, 32, 42, 75, 78, 110, 117, 120, 123, 132, 136, 141, 154, 161, 167, 174, 175, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 262, 265, 266, 271, 274, 292, 294, 310, 313, 316, 319, 322, 329, 372, 373, 375, 378, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 403, 404, 405, 406, 407, 408, 414, 418, 422], "oracle_nam": [12, 137], "str": [12, 21, 24, 27, 28, 31, 32, 33, 34, 45, 46, 47, 48, 49, 51, 54, 55, 57, 60, 61, 69, 70, 72, 76, 78, 79, 80, 82, 83, 84, 104, 106, 128, 137, 155, 162, 168, 203, 280, 281, 313, 373, 378, 407, 412, 417], "from_smil": [137, 253, 258], "true": [31, 32, 45, 46, 47, 48, 49, 54, 76, 78, 79, 84, 104, 106, 137, 180, 197, 202, 238, 253, 258, 310, 373, 378, 390, 391, 407, 410, 412, 416, 417], "kwargs_for_oracl": 12, "repres": [24, 61, 78, 83, 137, 196, 414], "It": [31, 60, 61, 133, 373, 375, 378, 385, 387, 411, 414], "name": [9, 12, 13, 21, 27, 28, 31, 32, 33, 34, 51, 54, 55, 70, 72, 82, 83, 84, 104, 106, 128, 137, 313, 316, 373, 375, 378, 379, 389, 390, 391, 407, 410, 412, 414, 416, 417], "comput": [23, 57, 76, 78, 80, 113, 128, 133, 154, 155, 161, 162, 164, 167, 168, 234, 236, 237, 250, 253, 258, 260, 262, 294, 372, 375, 376, 377, 379, 380, 381, 383, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 399, 400, 404, 406, 408, 415], "dock": [127, 128, 129, 132, 133, 136, 137, 138, 372, 376, 381, 385, 415], "score": [127, 128, 129, 155, 162, 168, 372, 376, 379, 381, 385, 386, 387, 390, 391, 395, 399, 415], "an": [5, 11, 12, 13, 19, 23, 27, 33, 34, 37, 39, 42, 45, 46, 47, 48, 49, 50, 51, 54, 61, 71, 72, 75, 80, 103, 104, 106, 154, 161, 167, 174, 175, 212, 221, 262, 282, 313, 354, 373, 375, 376, 377, 378, 385, 389, 392, 401, 403, 405, 410, 415, 418, 419, 423], "process": [5, 31, 33, 37, 50, 51, 60, 61, 71, 72, 103, 104, 106, 113, 128, 155, 161, 162, 168, 192, 253, 258, 354, 372, 373, 378, 380, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 396, 399, 400, 401, 404, 405, 406, 408, 410, 414, 415, 416, 417, 418], "multipl": [113, 128, 253, 258], "infin": [12, 104, 113, 128, 137, 155, 162, 168, 253, 258, 267], "molecul": [12, 44, 45, 46, 47, 110, 127, 128, 129, 132, 137, 212, 221, 230, 238, 253, 258, 259, 267, 292, 319, 372, 375, 378, 385, 386, 387, 392, 399, 414], "ar": [5, 19, 32, 37, 75, 78, 80, 105, 133, 180, 238, 253, 258, 259, 312, 359, 373, 374, 375, 376, 377, 379, 381, 389, 390, 391, 397, 398, 401, 403, 405, 410, 411, 412, 414, 415, 416, 417, 418], "smile": [12, 46, 47, 48, 49, 110, 123, 128, 137, 230, 238, 252, 253, 257, 258, 267, 376, 380, 383, 384, 386, 388, 392, 393, 394, 396, 397, 398, 400, 404, 406, 408], "format": [60, 77, 80, 176], "represent": [12, 44, 47, 128, 137, 248, 249, 253, 258, 267, 372, 415], "dict": [12, 31, 60, 104, 106, 113, 128, 373, 417], "addit": [31, 51, 60, 69, 104, 106, 379], "keyword": [12, 31, 51, 60, 104, 106, 373, 390, 391, 416], "argument": [12, 27, 31, 33, 34, 51, 60, 104, 106, 390, 391, 416], "custom": [14, 416], "packag": [14, 16, 48, 49, 53, 410, 414, 415, 417], "rais": [15, 18, 45, 46, 48, 49, 54, 55, 61, 75, 78, 79, 374, 377, 411, 416], "when": [13, 15, 60, 104, 106, 110, 117, 120, 123, 132, 141, 215, 218, 221, 224, 227, 230, 233, 242, 245, 271, 274, 292, 319, 322, 329, 373, 379, 400, 408, 412, 414, 415, 416], "exhaust": 15, "multi_object": 17, "version": [17, 51, 76, 103, 133, 234, 257, 259, 374, 375, 376, 377, 378, 379, 380, 383, 384, 386, 387, 388, 392, 393, 394, 396, 399, 400, 404, 405, 406, 408, 411, 412, 422, 423], "mean": [17, 80, 178, 238, 373, 395, 405, 419], "simpli": [17, 374, 375, 389, 411, 412, 414], "concaten": [17, 18, 253, 258], "result": [17, 18, 76, 253, 258, 378, 412, 415], "individu": [17, 18, 77, 281, 378, 412, 415], "objective_funct": [18, 423], "list": [18, 24, 31, 33, 45, 46, 47, 48, 49, 69, 70, 76, 77, 78, 79, 80, 82, 83, 155, 162, 168, 174, 188, 197, 279, 281, 313, 316, 373, 376, 378, 390, 391, 412, 414, 417], "multi": [18, 212, 221, 372, 383, 388, 392, 394, 396, 400, 408, 423], "requir": [18, 24, 53, 54, 133, 373, 374, 376, 378, 379, 401, 410, 411, 412, 414, 415, 416], "valueerror": [18, 55, 79], "e": [5, 19, 20, 54, 74, 80, 106, 113, 133, 174, 175, 179, 248, 249, 253, 258, 259, 310, 325, 372, 373, 374, 375, 376, 378, 379, 381, 385, 389, 390, 391, 407, 410, 411, 412, 416, 417], "g": [5, 19, 20, 74, 80, 174, 175, 259, 373, 374, 375, 376, 378, 381, 390, 391, 407, 410, 411, 412, 416, 417], "alphabet": [9, 20, 24, 113, 128, 373, 374, 389, 407, 410, 411, 412, 414, 417, 423, 424, 425], "sequenc": [9, 20, 75, 112, 113, 114, 142, 174, 175, 176, 177, 181, 182, 183, 234, 236, 237, 372, 373, 374, 376, 378, 380, 382, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 407, 408, 410, 411, 414, 417], "length": [9, 20, 42, 78, 79, 185, 373, 378, 417], "max_sequence_length": [373, 407, 412, 417], "align": [9, 373, 407, 412, 417], "log_transform_recommend": [373, 407, 412], "s": [9, 19, 21, 24, 48, 49, 74, 75, 106, 133, 155, 162, 168, 171, 248, 249, 252, 253, 257, 258, 259, 294, 308, 372, 375, 376, 380, 381, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 399, 400, 401, 404, 406, 408, 410, 411, 412, 414, 415, 416, 418, 422, 423], "longest": 9, "have": [5, 9, 32, 42, 133, 155, 162, 168, 294, 352, 373, 374, 375, 377, 378, 379, 385, 387, 389, 390, 391, 395, 401, 403, 410, 411, 414, 415, 416, 417], "been": [294, 377], "charact": 9, "mai": [32, 248, 249, 372, 414], "appear": [375, 378], "recommend": [110, 117, 120, 123, 132, 133, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 271, 274, 292, 319, 322, 329, 373, 375, 376, 387, 389, 401, 419], "algorithm": [19, 37, 312, 359, 372, 374, 378, 405, 411, 412, 414, 416, 417, 418, 423], "log": [51, 200, 234, 250, 252, 253, 373, 376, 381, 417], "transform": [44, 277, 282, 283, 373], "target": [113, 128], "foldx": [23, 24, 77, 80, 154, 155, 156, 157, 161, 162, 164, 167, 168, 169, 248, 249, 260, 262, 375, 376, 378, 381, 410, 415, 417], "simul": [23, 24, 75, 76, 154, 161, 167, 262, 294, 373, 375, 401], "free": [23, 154, 161, 167, 262, 373, 374, 377, 378], "energi": [23, 76, 154, 161, 167, 262, 377, 391], "between": [23, 78, 80, 113, 154, 161, 167, 257, 262, 397, 400, 408], "wildtyp": [23, 24, 79, 80, 154, 155, 161, 162, 167, 168, 248, 249, 262, 376, 379, 381, 390, 391], "mutat": [23, 24, 76, 154, 161, 167, 176, 262, 372, 374, 376, 379, 381, 390, 391, 411, 414, 416, 423], "web": [23, 75, 154, 161, 167, 262], "server": [23, 60, 61, 75, 154, 161, 167, 262], "onlin": [23, 75, 154, 161, 167, 262], "forc": [12, 23, 31, 75, 137, 154, 161, 167, 262, 354], "field": [23, 75, 154, 161, 167, 262], "nucleic": [23, 75, 154, 161, 167, 262], "acid": [23, 24, 74, 75, 154, 161, 167, 174, 175, 177, 182, 183, 262], "research": [23, 75, 154, 161, 167, 262, 372], "schymkowitz": [23, 75, 154, 161, 167, 262, 376, 378], "j": [11, 23, 75, 110, 117, 120, 123, 127, 128, 129, 141, 154, 161, 167, 215, 218, 224, 227, 230, 233, 242, 245, 262, 271, 274, 292, 319, 322, 329, 372, 412], "borg": [23, 75, 154, 161, 167, 262, 378], "stricher": [23, 75, 154, 161, 167, 262, 378], "ny": [23, 75, 154, 161, 167, 262], "r": [23, 74, 75, 80, 154, 161, 167, 262, 294, 372, 380, 383, 384, 386, 387, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408, 412], "rousseau": [23, 75, 154, 161, 167, 262, 378], "serrano": [23, 75, 154, 161, 167, 262, 378], "l": [23, 74, 75, 106, 112, 113, 114, 154, 161, 167, 184, 189, 190, 191, 212, 221, 248, 249, 262, 372, 373, 374, 375, 382, 403, 405, 407, 411, 412, 414, 417], "2005": [23, 75, 154, 161, 167, 262, 376], "33": [23, 75, 154, 161, 167, 198, 262, 372, 378, 392], "suppl_2": [23, 75, 154, 161, 167, 262], "w382": [23, 75, 154, 161, 167, 262], "w388": [23, 75, 154, 161, 167, 262], "wildtype_pdb_path": [24, 155, 162, 168, 379, 390, 391, 410], "union": [24, 31, 33, 69, 70, 76, 79, 155, 162, 168], "path": [24, 31, 33, 54, 57, 69, 70, 76, 79, 82, 83, 84, 133, 155, 162, 168, 187, 373, 378, 379, 389, 390, 391, 410, 412], "experiment_id": [24, 155, 162, 168, 412], "tmp_folder": [24, 155, 162, 168], "eager_repair": [24, 155, 162, 168, 390, 391], "verbos": [24, 54, 76, 82, 83, 84, 155, 162, 168, 374, 416], "pdb": [24, 76, 79, 80, 81, 82, 83, 84, 155, 161, 162, 168, 248, 249, 375, 379, 390, 391, 410, 415], "file": [24, 32, 75, 76, 77, 79, 80, 81, 82, 83, 84, 105, 112, 133, 155, 161, 162, 168, 248, 249, 312, 324, 372, 373, 375, 377, 379, 389, 410, 412, 417], "amino": [24, 74, 174, 175, 177, 182, 183], "experi": [24, 155, 162, 168, 179, 294, 412], "id": [24, 77, 155, 162, 168, 279, 352, 372, 373, 378, 412, 417], "temporari": [24, 155, 162, 168], "folder": [24, 32, 54, 112, 133, 155, 162, 168, 312, 324, 373, 375, 377, 412, 415, 417], "eagerli": [24, 162], "repair": [24, 75, 76, 155, 162, 168, 410], "print": [24, 42, 54, 76, 82, 83, 84, 106, 155, 162, 168, 374, 375, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 412, 414, 416, 417, 423, 424, 425], "output": [24, 76, 82, 83, 84, 155, 162, 168, 373, 376, 378, 414, 415], "wildtype_residu": [24, 80], "residu": [24, 77, 79, 80, 82, 83, 378], "each": [24, 37, 42, 78, 80, 177, 182, 376, 378, 412, 415, 416, 419], "wildtype_amino_acid": 24, "wildtype_residue_str": [24, 80], "string": [12, 24, 44, 45, 46, 47, 48, 49, 60, 70, 78, 79, 80, 82, 110, 128, 137, 175, 176, 185, 230, 252, 253, 257, 258, 267, 280, 281, 374, 376, 378, 382, 386, 397, 398, 401, 407, 411, 416, 417, 424, 425], "create_working_directori": 24, "work": [24, 42, 69, 70, 76, 106, 133, 303, 307, 365, 374, 375, 377, 378, 381, 385, 397, 398, 410, 411, 412, 414, 416, 418], "directori": [24, 69, 70, 76, 377, 378, 379, 389, 390, 391, 412], "regist": [13, 26, 31, 32, 33, 34, 104, 105, 106, 133, 375, 414], "observer_nam": [27, 33, 34, 51, 72, 409], "delet": [27, 28, 412], "run": [5, 13, 19, 27, 31, 32, 33, 34, 50, 60, 67, 68, 69, 70, 76, 104, 106, 133, 162, 373, 374, 375, 376, 377, 378, 411, 412, 414, 416, 417], "script": [5, 13, 27, 31, 33, 34, 60, 67, 68, 69, 70, 71, 75, 112, 133, 161, 252, 257, 294, 312, 324, 373, 379, 387, 412, 416, 417], "take": [27, 28, 31, 32, 33, 34, 60, 281, 372, 373, 374, 382, 401, 405, 407, 410, 411, 414, 417, 418], "pass": [12, 27, 31, 33, 34, 51, 60, 80, 84, 104, 378, 389, 390, 391, 410, 417], "locat": [27, 33, 34, 75, 308, 316, 378, 424, 425], "note": [27, 33, 34, 54, 60, 61, 72, 76, 155, 162, 168], "must": [27, 33, 34, 375, 382, 403, 405, 407], "accept": [27, 33, 34, 60, 373], "port": [27, 33, 34, 60, 61, 72], "password": [27, 33, 34, 60, 61, 72], "problem_nam": [28, 373, 403, 410], "configur": [28, 31, 34, 105], "dictionari": [60, 410], "problem_factori": [31, 70, 410, 423, 424, 425], "only_avail": [], "includ": [9, 19, 133, 375, 376, 379, 385, 387, 405, 412, 415, 416, 417, 418], "can": [5, 31, 32, 33, 42, 50, 60, 72, 84, 133, 197, 248, 249, 253, 258, 373, 374, 375, 377, 378, 379, 380, 383, 384, 386, 388, 392, 393, 394, 396, 397, 398, 400, 401, 403, 404, 405, 406, 408, 410, 411, 412, 414, 415, 416, 417, 422], "import": [32, 55, 75, 106, 236, 237, 373, 375, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 412, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425], "directli": [300, 378, 415], "problem_list": [], "repositori": [32, 52, 53, 54, 55, 102, 127, 171, 294, 300, 372, 374, 375, 376, 379, 389, 410, 412, 414], "otherwis": [47, 79, 378, 390, 391], "user": [33, 54, 60, 155, 162, 168, 196, 359, 374, 378, 410, 411, 412, 414, 415, 417], "readili": [], "conda_environment_nam": [31, 70, 373, 417], "python_path": [31, 33, 69, 70, 417], "conda": [5, 31, 33, 69, 70, 112, 133, 312, 324, 374, 376, 379, 389, 411, 415], "environ": [5, 31, 32, 33, 54, 69, 70, 112, 312, 324, 372, 374, 375, 376, 378, 379, 403, 411, 415, 416], "python": [31, 33, 42, 69, 70, 74, 97, 106, 133, 154, 161, 167, 262, 372, 373, 375, 376, 387], "With": [31, 33, 416, 417], "instanti": [31, 33, 34, 51, 72, 103, 104, 106, 374, 411, 412, 416, 417], "separ": [31, 33], "also": [31, 133, 161, 373, 375, 376, 379, 389, 390, 391, 405, 410, 412, 414, 416, 417, 422], "later": 31, "append": [31, 33, 70, 411, 412], "overwrit": [31, 54, 76, 104, 106, 412, 417], "exist": [31, 54, 55, 373, 378, 410], "quiet": [32, 104, 378], "correspond": [32, 113, 128, 175, 325, 378, 401], "objective_repositori": [32, 373, 375, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 410, 414, 415, 417, 418, 419, 422, 423, 424, 425], "yaml": 32, "said": [32, 373, 374, 389, 411, 417], "enviro": [32, 373, 374, 411, 417], "sinc": [32, 80, 133, 359, 373, 374, 377, 378, 385, 387, 389, 405, 411, 414, 416, 417, 418], "t": [11, 12, 32, 74, 110, 117, 120, 123, 132, 136, 141, 154, 161, 167, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 262, 265, 266, 271, 274, 292, 319, 322, 329, 372, 373, 376, 377, 378, 385, 387, 389, 412, 415, 416, 417], "depend": [5, 32, 373, 378, 403, 414, 415], "instal": [32, 53, 155, 162, 168, 376, 378, 390, 391, 403, 410, 414, 415, 416, 417], "squelch": [32, 104], "feedback": [32, 104, 378], "creation": [32, 37, 104, 373, 405, 423], "registr": [32, 104, 106, 112, 252, 257, 312, 324, 373, 416, 417], "conda_environment_loc": 33, "extern": [33, 50, 51, 71, 103, 414], "externalobserv": [33, 409], "relev": [33, 378, 389, 405, 410, 417], "script_file_nam": 34, "run_script": [34, 60, 69, 70], "call": [34, 37, 54, 60, 71, 72, 104, 112, 155, 162, 168, 312, 324, 373, 374, 375, 376, 377, 378, 389, 410, 412, 414, 415], "monitor": 37, "progress": [37, 54, 84, 411], "valu": [37, 74, 96, 97, 104, 106, 179, 180, 186, 310, 378, 389, 395, 400, 405, 408, 410], "decis": 37, "variabl": [37, 54, 253, 258, 378, 389, 405], "iter": [37, 42, 374, 411, 414, 416, 419], "np": [37, 106, 294, 313, 373, 374, 375, 376, 380, 382, 383, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411, 412, 415, 417, 418, 419, 422, 423, 424, 425], "ndarrai": [37, 184, 278, 279, 280, 282, 283, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 373, 374, 410, 411, 412, 417], "y": [37, 51, 74, 106, 180, 186, 212, 221, 373, 374, 380, 383, 384, 385, 386, 387, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 404, 406, 408, 410, 411, 412], "everi": [37, 412], "time": [37, 61, 373, 378, 401, 412, 423], "initialize_observ": [37, 51, 412], "problem_setup_info": [37, 412], "caller_info": [37, 51, 106, 412, 416, 417], "x0": [19, 37, 51, 373, 374, 375, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425], "y0": [19, 37, 51, 374, 389, 403, 410, 411, 412, 414, 416, 417, 418, 419, 422, 423, 424, 425], "seed": [37, 51, 104, 106, 202, 283, 365, 373, 412, 417], "necessari": [37, 76, 373, 389, 390, 391, 417], "finish": [37, 51, 378, 401, 412], "perform": [37, 96, 97, 113, 155, 168, 253, 258, 374, 376, 378, 401, 410, 411, 416, 418, 419], "ani": [37, 60, 104, 106, 190, 191, 373, 378, 407, 410, 412, 414, 416, 417], "cleanup": 37, "final": [37, 412], "step": [37, 374, 389, 410, 416, 417], "complet": [37, 378, 417], "model": [11, 39, 75, 110, 117, 120, 123, 127, 128, 129, 141, 179, 180, 192, 196, 198, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 271, 274, 292, 319, 322, 329, 372, 373, 378, 379, 380, 383, 384, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408, 418], "check": [39, 56, 75, 78, 316, 374, 378, 379, 390, 391, 395, 405, 411, 412, 414, 415, 416, 417], "inde": [39, 354, 378, 390, 391, 416, 417], "gener": [41, 42, 60, 69, 70, 94, 95, 96, 97, 104, 106, 212, 221, 325, 372, 378, 392, 399, 418], "chunk_siz": 42, "element": [42, 410], "3": [11, 42, 174, 175, 212, 221, 372, 373, 375, 376, 378, 380, 382, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 403, 404, 406, 407, 408, 410, 412, 414, 417, 418, 419, 422], "12": [42, 75, 142, 234, 236, 237, 248, 249, 372, 400], "replac": [42, 78, 80, 248, 249, 279, 379, 410, 424, 425], "built": [42, 178, 375], "itertool": 42, "doc": [42, 54, 378], "html": [42, 294, 372, 410, 414], "yield": [42, 127, 128, 129, 372], "tupl": [42, 78, 79, 313, 373, 417], "equal": [42, 78, 416], "exampl": [42, 55, 57, 78, 80, 106, 112, 315, 365, 373, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 414, 415, 416, 423], "4": [42, 185, 198, 212, 221, 372, 377, 386, 387, 392, 399, 414], "5": [42, 76, 112, 113, 114, 257, 259, 306, 375, 376, 378, 381, 382, 405, 412, 414, 416, 417, 423], "6": [42, 372, 378, 392, 395, 410, 414], "7": [42, 76, 378, 390, 391, 414], "8": [42, 127, 128, 129, 372, 378, 399, 414], "9": [42, 132, 212, 221, 372, 373, 375, 376, 378, 385, 386, 410, 414, 415, 417], "rdkit": [44, 45, 46, 47, 55, 250, 252, 253, 255, 257, 258, 376, 381, 385, 397, 398, 399, 417], "selfies_str": [45, 48], "chem": [11, 12, 45, 46, 47, 110, 117, 120, 123, 132, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 253, 257, 258, 265, 266, 271, 274, 292, 319, 322, 329], "mol": [45, 46, 47], "convert": [45, 46, 47, 60, 174, 175, 180, 185], "selfi": [12, 45, 47, 48, 49, 110, 128, 137, 230, 238, 252, 253, 257, 258, 267, 376, 380, 383, 384, 386, 388, 392, 393, 394, 396, 397, 398, 400, 404, 406, 408], "strict": [45, 46, 48, 49, 54, 78], "error": [45, 46, 48, 49, 54, 75], "fail": [45, 253, 258, 416], "decod": [45, 190, 196, 197], "smiles_str": [46, 48, 49], "cannot": [46, 48, 49, 253, 258], "pars": [46, 48, 49, 81, 82, 83, 84, 253, 258, 280], "molecule_str": 47, "from_selfi": [47, 253, 258], "assum": [47, 80, 253, 258, 359, 373, 374, 378, 379, 390, 391, 403, 410, 411, 414], "translat": [48, 49], "els": [48, 49, 417], "those": [48, 49], "aspuru": [48, 49, 372, 399], "guzik": [48, 49, 372, 399], "lab": [48, 49], "group": [48, 49], "isol": [5, 12, 13, 50, 51, 103, 104, 106, 137, 354, 373, 376, 389, 403, 410, 412, 417], "kwargs_for_observ": 51, "send": [51, 72], "verifi": [51, 56, 412], "wa": [51, 53, 80, 236, 237, 374, 378, 387, 401, 410, 411], "correctli": [51, 377], "setup_info": 51, "start": [51, 60, 71, 72, 248, 249, 378, 379, 410, 412, 414, 415, 416, 417], "close": [51, 106, 380, 383, 384, 386, 387, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 404, 406, 408], "__getattr__": 51, "__name": 51, "retriev": [51, 72, 138], "attribut": [51, 72, 190, 191, 378, 410], "underli": [51, 386, 392], "download": [52, 53, 54, 56, 133, 373, 377, 379, 389, 410], "github": [52, 53, 54, 55, 133, 373, 375, 376, 378, 379, 380, 383, 384, 386, 388, 389, 392, 393, 394, 396, 399, 400, 404, 406, 408, 417], "pygithub": [53, 55, 389], "pip": [53, 133, 373, 375, 376, 378, 389, 415, 417], "most": [53, 177, 381], "code": [53, 56, 192, 248, 249, 373, 378, 389, 414, 417], "taken": [53, 300, 379, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408, 415], "adapt": [53, 372, 378, 419], "gist": 53, "com": [53, 54, 132, 133, 373, 375, 376, 377, 378, 380, 383, 384, 386, 388, 389, 392, 393, 394, 396, 399, 400, 404, 406, 408, 417], "pdashford": 53, "2e4bcd4fc2343e2fd03efe4da17f577d": 53, "permalink_comment_id": 53, "4274705": 53, "gistcom": 53, "repository_nam": 54, "file_path_in_repositori": 54, "download_path_for_fil": 54, "tag": [54, 55], "master": [54, 375, 417], "commit_sha": [54, 55], "exist_ok": [54, 378, 412], "parent_folders_exist_ok": 54, "i": [54, 74, 113, 154, 161, 167, 179, 253, 258, 262, 310, 325, 372, 374, 376, 378, 379, 385, 391, 407, 411, 412, 417], "repo": [54, 133, 375], "download_path": 54, "branch": [54, 55, 375], "sha": [54, 55], "commit": [54, 55, 379], "exists_ok": 54, "parent": [54, 378, 379, 412, 423], "thei": [19, 54, 75, 236, 237, 238, 378, 395, 412], "do": [54, 133, 236, 237, 373, 374, 378, 389, 395, 401, 411, 415, 417], "except": [54, 61, 72, 373], "github_token_for_poli": [54, 389], "doe": [54, 236, 237], "try": [54, 373, 390, 391], "without": [54, 104, 106, 352, 374, 391, 411, 416, 417], "rate": 54, "limit": [54, 316, 379, 389], "60": 54, "request": [54, 378], "per": 54, "hour": 54, "anonym": [54, 389], "To": [54, 373, 375, 376, 377, 378, 395, 417], "token": [54, 185, 253, 258, 279, 281, 373, 389, 401, 414, 417, 424, 425], "like": [54, 106, 133, 303, 372, 373, 374, 377, 387, 399, 401, 405, 411, 412, 414, 415, 416, 417, 418], "follow": [9, 19, 54, 74, 373, 374, 375, 377, 378, 380, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 396, 399, 400, 403, 404, 405, 406, 408, 410, 411, 414, 416, 417, 422], "instruct": [54, 373, 374, 414], "here": [54, 373, 376, 378, 389, 400, 408, 410, 415, 417, 423], "en": [54, 315, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408, 410, 414], "authent": [54, 60, 61], "keep": [54, 80, 289, 390, 391], "your": [5, 54, 133, 374, 377, 378, 379, 387, 389, 390, 391, 403, 412, 415], "account": 54, "secur": 54, "person": [54, 389], "fine": [54, 375], "grain": 54, "get_repo": 55, "release_2023_09": 55, "068441957858f786c227825d90eb2c43f4f2b000": 55, "internet": 56, "reproduc": 56, "purpos": 56, "make": [56, 289, 375, 377, 378, 379, 389, 401, 416, 417, 423], "sure": [56, 375, 377, 378, 379, 389, 401, 412, 416, 417], "malici": 56, "being": [56, 289, 377, 379, 389], "filepath": 57, "read_mod": 57, "rb": 57, "md5": [57, 379], "hex": 57, "digest": 57, "open": [57, 248, 249, 378, 412], "binari": [57, 76, 133, 155, 162, 168, 378, 389, 390, 391], "form": [9, 57, 378], "mode": [57, 77], "read": [57, 76, 187, 378, 400, 408, 412, 416], "hex_digest": 57, "txt": [57, 76, 80, 373, 377, 378, 389, 390, 391, 412], "d41d8cd98f00b204e9800998ecf8427": 57, "wrap": [58, 59, 417], "interprocess": [58, 59], "commun": [5, 58, 59, 60, 103, 373], "kwargs_for_factori": [60, 104, 106], "connect": [60, 61, 72, 196], "inter": 60, "These": [60, 373, 376, 378, 379, 381, 389, 405, 410, 412, 414], "inner": 60, "up": [60, 61, 374, 385, 387, 401, 411, 412, 417], "listen": 60, "random": [60, 94, 95, 96, 97, 104, 106, 374, 376, 386, 392, 411, 414, 416, 418, 419, 422, 423, 425], "subprocess": [60, 378], "expect": [5, 60, 75, 76, 77, 80, 133, 155, 162, 168, 373, 378, 380, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 396, 399, 400, 404, 406, 408, 412, 417], "well": [60, 375, 378, 385, 415, 416, 418], "other": [12, 60, 110, 253, 258, 373, 377, 410, 412, 415, 416, 417], "objective_factori": [60, 352, 373, 375, 389, 403, 412, 414, 416, 417], "determin": 60, "client": 61, "get": [61, 71, 84, 373, 374, 378, 381, 400, 408, 411, 412, 414, 416, 417], "eoferror": 61, "host": 61, "readi": [61, 180], "yet": [61, 373, 411], "connectionrefusederror": 61, "refus": 61, "attempt": 61, "establish": [61, 72], "retri": 61, "befor": [61, 69, 410, 416, 417], "conda_environ": 69, "cwd": [69, 70, 378], "activ": [69, 373, 375, 376, 389, 412], "ad": [69, 133, 352, 387, 412, 417], "current": [69, 400, 403, 408, 414, 415], "either": [12, 70, 128, 137, 267, 378, 389, 403, 412, 422], "mother": [71, 72], "receiv": 72, "wait": [72, 417], "occur": 72, "sent": 72, "back": [72, 277], "quit": [72, 373, 379, 414], "messag": [72, 104], "encod": [74, 183, 184, 196, 197, 389], "For": [74, 80, 133, 179, 234, 248, 249, 316, 359, 373, 376, 378, 387, 389, 405, 412, 414, 415, 417, 419], "amino_acid": 74, "n": [11, 74, 110, 117, 120, 123, 127, 128, 129, 141, 215, 218, 224, 227, 230, 233, 242, 245, 271, 274, 292, 316, 319, 322, 329, 372, 375, 376, 378, 380, 383, 384, 386, 388, 392, 393, 394, 396, 400, 404, 405, 406, 407, 408, 412], "d": [74, 248, 249, 294, 310, 372, 377, 405, 412], "c": [74, 127, 128, 129, 372, 375, 378, 380, 383, 384, 385, 386, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 404, 406, 408, 412, 415, 417], "q": [74, 372, 412], "h": [74, 112, 113, 114, 282, 372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408, 412, 417], "k": [11, 12, 74, 110, 117, 120, 123, 132, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 252, 265, 266, 271, 274, 292, 306, 319, 322, 329, 372, 412], "m": [74, 132, 185, 248, 249, 372, 378, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408, 412], "p": [74, 372, 412], "v": [74, 76, 412], "measur": [75, 110, 179, 230, 378, 397, 398], "stabil": [75, 76, 157, 161, 162, 164, 167, 248, 249, 260, 262, 372, 375, 376, 378, 381, 390, 415], "sasa": [75, 76, 150, 154, 155, 156, 164, 167, 168, 169, 260, 262, 376, 381, 390, 391], "foldxinterfac": 75, "queri": [75, 373, 374, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 411, 417], "heavili": [5, 75, 378], "inspir": [75, 378], "wai": [19, 75, 374, 375, 378, 411, 412, 414, 415], "lambo": [75, 133, 142, 234, 236, 237, 238, 376, 378, 381, 410], "automat": [75, 106, 372, 373, 377], "acceler": [75, 142, 234, 236, 237, 372], "bayesian": [75, 142, 234, 236, 237, 359, 372, 374, 376, 411], "biolog": [75, 142, 234, 236, 237, 372], "design": [11, 75, 110, 117, 120, 123, 127, 128, 129, 132, 141, 142, 196, 212, 215, 218, 221, 224, 227, 230, 233, 234, 236, 237, 242, 245, 271, 274, 292, 319, 322, 329, 372, 373, 374, 377, 380, 381, 383, 384, 385, 386, 388, 392, 393, 394, 396, 400, 404, 406, 408, 410, 411, 414, 417], "withdenois": 75, "autoencod": [75, 142, 196, 234, 236, 237, 372, 418], "stanton": [75, 142, 234, 236, 237, 372, 376, 377, 378, 395, 410], "samuel": [75, 142, 234, 236, 237, 372], "weslei": [75, 142, 234, 236, 237, 372], "maddox": [75, 142, 234, 236, 237, 372], "nate": [75, 142, 234, 236, 237, 372], "gruver": [75, 142, 234, 236, 237, 372], "phillip": [75, 142, 234, 236, 237, 372], "maffetton": [75, 142, 234, 236, 237, 372], "emili": [75, 142, 234, 236, 237, 372], "delanei": [75, 142, 234, 236, 237, 372], "peyton": [75, 142, 234, 236, 237, 372], "greensid": [75, 142, 234, 236, 237, 372], "andrew": [75, 142, 234, 236, 237, 372], "gordon": [75, 142, 234, 236, 237, 372], "wilson": [75, 142, 234, 236, 237, 372], "arxiv": [11, 75, 142, 234, 236, 237, 372], "juli": [75, 142, 234, 236, 237, 372, 392], "ab": [11, 75, 142, 234, 236, 237, 372], "2203": [75, 142, 234, 236, 237, 372], "12742": [75, 142, 234, 236, 237, 372], "samuelstanton": [75, 133, 389], "working_dir": [76, 378], "interact": [76, 378], "engin": [76, 294, 418], "softwar": [76, 376, 377, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "where": [76, 112, 113, 114, 197, 373, 374, 376, 378, 401, 411, 415], "store": [76, 379, 410, 415], "pdb_file": 76, "remove_and_renam": 76, "ph": [76, 378, 390, 391], "remove_heteroatom": 76, "_repair_if_necessary_and_provide_path": 76, "_simulate_mut": 76, "_read_energi": 76, "_compute_sasa": 76, "solvent": [76, 150, 155, 156, 164, 168, 169, 260, 372, 376, 378, 381], "surfac": [76, 150, 155, 156, 164, 168, 169, 260, 376, 378, 381, 390], "area": [76, 150, 155, 156, 164, 168, 169, 260, 376, 378, 381, 390], "compute_st": 76, "structur": [76, 82, 83, 84, 133, 162, 378, 387, 412], "compute_sasa": 76, "compute_stability_and_sasa": 76, "singl": [76, 80, 248, 249, 294, 372, 376, 379, 381, 395, 397, 398, 410, 412, 418, 422], "copy_foldx_fil": 76, "copi": [76, 373, 374, 378, 411, 423], "write_mutations_to_fil": 76, "wildtype_resiud": 76, "output_dir": 76, "write": [76, 133, 373, 375, 378, 387, 402, 409, 412, 413, 417, 420, 421], "stdout": 76, "previou": [76, 104, 106, 378, 412, 416], "reli": [76, 352, 405], "rotabas": [76, 377, 378, 389, 390, 391], "longer": 76, "manipul": [77, 373, 375, 376], "accord": [77, 178, 378, 414, 417], "certain": [77, 123, 292, 319, 373, 376, 378, 385, 416], "first": [77, 78, 80, 373, 378, 382, 410, 411, 416, 417], "letter": [77, 80, 112, 113, 114, 376, 378, 381, 382, 417], "second": [77, 78, 80, 188, 378, 416, 417], "posit": [77, 78, 80, 177, 182, 374, 378, 379, 410, 411, 414], "third": [77, 80], "chain": [77, 80, 378], "fourth": [77, 80], "mutant": [77, 79, 80, 248, 249, 374, 378, 411], "foldxsuit": [77, 377, 378], "crg": [77, 377, 378], "eu": [77, 377, 378], "string_1": 78, "string_2": 78, "edit": [78, 248, 249, 379], "oper": [78, 377, 416], "assertionerror": [78, 416], "abc": 78, "abd": 78, "def": [78, 373, 374, 411, 412, 417], "wildtype_pdb_fil": [79, 390, 391], "mutated_residue_str": [79, 80], "return_hamming_dist": 79, "find": [79, 112, 113, 114, 133, 373, 379, 385, 387, 412, 414, 416], "closest": 79, "ham": 79, "distanc": [79, 80, 113, 379, 382], "along": 79, "best": [79, 374, 410, 411, 419, 423], "candid": [79, 374], "found": [79, 375, 378, 410, 414, 417], "bio": [80, 83, 84, 378], "individual_list": [80, 378], "levenshtein": 80, "track": [80, 372], "written": 80, "line": [80, 376, 378], "ea1r": 80, "still": [80, 373, 415], "need": [9, 80, 133, 373, 377, 378, 387, 389, 390, 391, 410, 412, 416], "dummi": 80, "itself": [80, 373, 375], "ecd": 80, "acd": 80, "would": [80, 373, 378, 379, 412, 417], "ea1a": 80, "load": [81, 105, 171, 179, 188, 378, 412], "them": [81, 133, 359, 373, 374, 375, 378, 379, 381, 387, 411, 414], "path_to_pdb": [82, 83, 84], "structure_nam": [82, 83, 84], "done": [84, 133, 378, 389, 395, 414], "quietli": 84, "some": [84, 192, 238, 359, 375, 376, 378, 389, 405, 412, 414, 417], "get_structur": [84, 378], "pdbparser": [84, 378], "numpi": [96, 280, 373, 375, 376, 380, 382, 383, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 412, 415, 417, 418, 422, 423, 424, 425], "obj": [], "dynam": 373, "intern": [372, 373, 392, 399, 403], "constructor": [], "factory_kwarg": [], "processwrapp": 103, "how": [133, 373, 374, 375, 376, 378, 381, 410, 411, 412, 414, 416, 417], "objective_nam": [], "loop": [352, 372, 418], "process_wrapp": 103, "observer_init_info": 104, "force_regist": [104, 106], "force_isol": [12, 104, 106, 128, 137, 155, 162, 168, 202, 238, 267], "instantiant": 104, "associ": [104, 372, 410, 415], "caller": [104, 106, 412], "forward": [104, 106, 412], "logger": [104, 106], "ask": [104, 106], "confirm": [104, 106], "By": [104, 253, 258, 313, 373, 374, 390, 391, 416, 418, 422], "onc": [104, 373, 401, 414, 416, 417], "round": [104, 325], "down": 104, "give": [104, 278, 359, 373, 417], "config": 105, "configpars": 105, "just": [106, 373, 389, 390, 391, 410, 412, 416, 417], "One": [106, 377, 414], "aloha": [106, 375, 376, 381, 410, 411, 414, 417, 423], "arrai": [106, 174, 175, 184, 185, 277, 280, 282, 373, 375, 376, 380, 382, 383, 384, 385, 386, 387, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 412, 414, 415, 417], "reshap": [106, 374, 395, 397, 401, 417, 418, 422], "simpl": [112, 113, 114, 127, 128, 129, 178, 252, 253, 257, 258, 373, 374, 410, 411, 414, 416, 417], "goal": [112, 113, 114, 289], "o": [112, 113, 114, 372, 380, 382, 383, 384, 385, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408, 412, 415, 417], "among": [110, 112, 113, 114, 377, 378, 416], "poli__bas": [112, 312, 324], "yml": [112, 133, 312, 324, 389, 417], "simultan": [12, 113, 128, 137, 253, 258, 267, 379], "map": [113, 128], "symbol": [113, 128], "main": [5, 113, 253, 258, 374, 375, 376, 377, 378, 411, 412, 417], "api": [127, 128, 129, 375, 389], "assess": [127, 128, 129, 248, 249, 381], "small": [127, 128, 129, 253, 373, 375, 385, 386, 387, 399, 412, 414, 416], "protein": [127, 128, 129, 154, 161, 162, 167, 248, 249, 262, 372, 375, 377, 379, 385, 387, 414, 415], "easi": [127, 128, 129, 372, 378, 414, 416], "molecular": [11, 110, 117, 120, 123, 127, 128, 129, 132, 141, 154, 161, 167, 215, 218, 224, 227, 230, 233, 242, 245, 262, 271, 274, 292, 319, 322, 329, 372, 380, 383, 384, 386, 388, 393, 394, 396, 399, 400, 404, 406, 408], "better": [127, 128, 129, 372, 378], "benchmark": [11, 19, 110, 117, 120, 123, 127, 128, 129, 141, 215, 218, 224, 227, 230, 233, 242, 245, 271, 274, 292, 294, 312, 316, 319, 322, 329, 372, 376, 380, 381, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "ligand": [127, 128, 129, 372, 376, 381, 385], "garc\u00eda": [127, 128, 129, 372, 376, 385], "orteg\u00f3n": [127, 128, 129, 372, 376, 385], "miguel": [127, 128, 129, 372, 376, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "gregor": [127, 128, 129, 372], "simm": [127, 128, 129, 372], "austin": [127, 128, 129, 372], "tripp": [127, 128, 129, 372], "jos\u00e9": [127, 128, 129, 248, 249, 372], "hern\u00e1ndez": [127, 128, 129, 372], "lobato": [127, 128, 129, 372], "andrea": [127, 128, 129, 372], "bender": [127, 128, 129, 372], "sergio": [127, 128, 129, 372], "bacallado": [127, 128, 129, 372], "journal": [127, 128, 129, 132, 212, 221, 372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "62": [127, 128, 129, 372], "15": [127, 128, 129, 372, 423], "august": [127, 128, 129, 372], "3486": [127, 128, 129, 372], "3502": [127, 128, 129, 372], "1021": [11, 110, 117, 120, 123, 127, 128, 129, 141, 215, 218, 224, 227, 230, 233, 242, 245, 271, 274, 292, 319, 322, 329, 372, 380, 383, 384, 388, 393, 394, 396, 400, 404, 406, 408], "ac": [11, 110, 117, 120, 123, 127, 128, 129, 141, 215, 218, 224, 227, 230, 233, 242, 245, 271, 274, 292, 319, 322, 329, 372, 380, 383, 384, 388, 393, 394, 396, 400, 401, 404, 406, 408], "jcim": [11, 110, 117, 120, 123, 127, 128, 129, 141, 215, 218, 224, 227, 230, 233, 242, 245, 271, 274, 292, 319, 322, 329, 372, 380, 383, 384, 388, 393, 394, 396, 400, 404, 406, 408], "1c01334": [127, 128, 129, 372], "target_nam": [128, 385, 415], "string_represent": [12, 128, 137, 238, 253, 258, 267, 380, 383, 384, 386, 388, 392, 393, 394, 396, 397, 398, 400, 404, 406, 408], "liter": [12, 128, 137, 202, 238, 253, 258, 267, 316], "There": [133, 400, 408, 410, 412], "sever": [133, 294, 303, 312, 378, 379, 416, 417], "prepare_receptor": 133, "rest": [133, 412, 414], "descript": [133, 412, 417], "show": [133, 375, 378, 410, 417], "center": [133, 387], "websit": [133, 387], "scripp": 133, "edu": [133, 212, 221], "uncompress": [133, 387], "add": [133, 179, 278, 373, 389, 390, 391, 395, 411], "export": [133, 387], "autodock_vina": [133, 387], "bin": [133, 387], "bashrc": [133, 387], "zshrc": [133, 387], "bash": 133, "In": [132, 133, 234, 238, 372, 374, 375, 378, 379, 387, 389, 390, 391, 403, 405, 410, 411, 412, 414, 415, 416, 417, 419, 423], "ccsb": 133, "sh": [133, 387, 417], "thu": [133, 387], "might": [133, 294, 373, 375, 378, 387, 389, 390, 391, 395, 405, 410, 412, 417], "chang": [133, 154, 161, 167, 171, 188, 262, 375, 377, 378, 387, 390, 391, 405], "its": [9, 19, 133, 374, 378, 387, 390, 411, 415, 416, 417], "permiss": [133, 387], "chmod": [133, 387], "abl": [133, 373, 375, 377, 378, 387, 401, 412, 414, 415, 417], "pyscreen": [133, 376, 387], "howev": [133, 379, 387, 417], "sometim": [133, 387], "problemat": [133, 387], "ha": [133, 303, 313, 373, 374, 378, 387, 410, 411, 415, 417, 419], "symlink": [133, 387], "ln": [133, 387], "sf": [133, 387], "easili": [133, 378, 410, 416], "env": [133, 373, 375, 389, 410, 414, 415, 417], "src": [133, 389], "ddr3_dock": 133, "task": [110, 117, 120, 123, 132, 133, 136, 141, 142, 188, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 271, 274, 292, 319, 322, 329, 372, 378, 380, 383, 384, 386, 388, 389, 392, 393, 394, 396, 399, 400, 404, 406, 408, 418], "git": [133, 373, 375, 376, 389, 417], "clone": [133, 375, 379, 389, 403], "431b052": [133, 389], "cd": [133, 375, 389], "particular": [133, 238, 260, 389, 405, 410, 412, 415, 416, 417], "proxy_rfp": [133, 389], "proxyrfptask": [133, 389], "rfp": [133, 142, 144, 145, 260, 376, 381], "asset": [133, 389], "fpbase": [133, 389], "And": [133, 410, 417], "now": [133, 373, 375, 378, 414, 417], "py": [5, 133, 316, 374, 375, 378, 410, 411, 412, 414, 415, 416, 417], "query_exampl": 133, "ddr3": [], "et": [11, 12, 110, 117, 120, 123, 132, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 265, 266, 271, 274, 292, 319, 322, 329, 372, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 392, 393, 394, 395, 396, 399, 400, 401, 404, 406, 408, 410, 418, 422, 423], "al": [11, 12, 110, 117, 120, 123, 132, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 265, 266, 271, 274, 292, 294, 316, 319, 322, 329, 372, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 392, 393, 394, 395, 396, 399, 400, 401, 404, 405, 406, 408, 410, 418, 422, 423], "nat": [11, 12, 110, 117, 120, 123, 132, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 265, 266, 271, 274, 292, 319, 322, 329], "biol": [11, 12, 110, 117, 120, 123, 132, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 265, 266, 271, 274, 292, 319, 322, 329], "1036": [11, 12, 110, 117, 120, 123, 132, 136, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 265, 266, 271, 274, 292, 319, 322, 329], "self": [12, 137, 373, 374, 379, 411, 412, 417], "tdcblackbox": [], "denois": [142, 234, 236, 237, 372], "alia": [], "base_candid": [], "specifc": [], "predict": [132, 150, 178, 179, 199, 248, 249, 372, 376, 378, 381, 418], "pair": [154, 167, 262], "biopython": [154, 161, 167, 262, 378, 390, 415], "cock": [154, 161, 167, 262], "pa": [154, 161, 167, 262], "antao": [154, 161, 167, 262], "jt": [154, 161, 167, 262], "chapman": [154, 161, 167, 262], "ba": [154, 161, 167, 262], "cox": [154, 161, 167, 262], "cj": [154, 161, 167, 262], "dalk": [154, 161, 167, 262], "friedberg": [154, 161, 167, 262], "hamelryck": [154, 161, 167, 262], "kauff": [154, 161, 167, 262], "wilczynski": [154, 161, 167, 262], "b": [154, 161, 167, 262, 282, 373, 375, 382, 401, 403, 405, 407, 412, 414, 417], "de": [11, 110, 117, 120, 123, 132, 141, 154, 161, 167, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 262, 271, 274, 292, 319, 322, 329, 372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 400, 404, 406, 408], "hoon": [154, 161, 167, 262], "mjl": [154, 161, 167, 262], "2009": [154, 161, 167, 262, 372, 376, 399, 401], "freeli": [154, 161, 167, 262], "tool": [154, 161, 167, 262, 415, 417], "bioinformat": [154, 161, 167, 262], "25": [154, 161, 167, 262, 380, 383, 384, 388, 393, 394, 396, 400, 404, 406, 408], "1422": [154, 161, 167, 262], "1423": [154, 161, 167, 262], "usual": [5, 110, 230, 309, 312, 373, 374, 376, 381, 405, 412, 416, 417, 418], "eager": [155, 168], "v5": [155, 162, 168], "compil": [155, 162, 168, 198, 379], "specif": [123, 155, 162, 168, 405, 414], "foldxblackbox": [], "pre": [161, 374, 375, 379, 390, 391, 415], "20": 372, "shown": [], "core": [373, 374, 409, 410, 411, 416, 417, 423], "through": [120, 132, 162, 292, 319, 372, 374, 375, 386, 411, 414], "total": [162, 178, 378], "cba": [171, 188, 190], "vae": [171, 188, 190, 191, 197, 198, 202, 418], "sb": [171, 188], "bo": 171, "minor": [171, 188], "modif": [171, 188], "conduct": [171, 188], "rm": [171, 188], "creator": [171, 188], "last": [171, 188, 378], "x_aa": [174, 175, 184], "aa_idx": 174, "arn": [174, 175], "becom": [174, 175, 378], "row": [174, 175, 378], "base_seq": 176, "wild": [176, 181, 378], "mtuation": 176, "xt_p": [177, 182], "categor": [177, 182, 200], "probabl": [177, 182], "distribut": [177, 182, 200, 372, 419], "pred": 178, "xt": 178, "predictor": 178, "balaji": 178, "lakshminarayanan": 178, "paper": [178, 190, 212, 221, 372, 415], "scalabl": 178, "uncertainti": [178, 418], "estim": [178, 234, 255, 257, 258, 259, 372, 375, 376, 381, 399], "deep": [132, 178, 248, 249, 372, 386, 418], "ensembl": 178, "2017": [132, 178, 212, 221, 372, 379, 386], "varianc": 178, "random_st": [179, 186], "train_siz": [179, 186], "5000": 179, "return_test": [179, 186], "return_al": 179, "gfp": [179, 180, 181, 187], "test": [179, 294, 374, 405, 411], "ground": [179, 401], "truth": 179, "gp": [179, 202, 203], "partit": [179, 186, 397], "below": [179, 379, 390, 391], "20th": 179, "percentil": [179, 186], "nois": [179, 323, 324, 325, 365, 376, 381, 414], "data_df": 180, "panda": [180, 187, 378], "datafram": [180, 187, 378], "functional_onli": [180, 202], "ignore_stop": [180, 202], "return_str": 180, "raw": 180, "sampl": [11, 182, 283, 372, 407, 412, 418, 424, 425], "aa_str": 183, "pad": [183, 185, 278, 373], "hot": [183, 282], "onehot": 184, "alphabet_s": [184, 374, 411], "dna_str": 185, "base_ord": 185, "atcg": 185, "40": 186, "1000": [186, 416], "df_save_fil": 187, "bright": 187, "author": [188, 234, 376, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "credit": 188, "herculean": 188, "go": [188, 376, 377, 417], "aa": [189, 190, 191], "mimic": 190, "kera": [190, 196], "latent_dimension": [190, 191], "enc1_unit": [190, 191, 198], "train": [192, 386, 392], "gaussian": [192, 324, 325, 372, 376, 381, 407, 418], "regress": 192, "sarkisyan": 192, "2016": [192, 372, 401, 418], "plu": [192, 423], "constant": [192, 405], "input_shap": [196, 197], "latent_dim": [196, 197, 198], "variat": [196, 418], "via": [196, 372, 412], "latent": [196, 372, 374, 411, 418], "space": [196, 279, 359, 372, 374, 411, 418, 422], "flatten": [197, 374, 401, 410, 411], "basic": [197, 352, 414, 417], "layer": 197, "n_token": 198, "seq_length": 198, "50": [198, 419], "eps_std": 198, "y_true": [199, 200], "y_pred": [199, 200], "likelihood": 200, "uniqu": [202, 412], "problem_typ": [202, 203], "exact": [234, 374, 411, 417], "logp": [234, 236, 237, 238, 250, 252, 253, 376, 381], "jointli": 234, "quantit": [234, 255, 257, 258, 259, 375, 376, 381], "druglik": [234, 255, 257, 258, 259, 375, 376, 381], "qed": [234, 253, 255, 257, 258, 259, 376, 381], "penal": [234, 238, 376, 381], "solubl": [234, 250, 252, 253, 376, 381], "fair": 234, "comparison": [234, 412], "_exactly_": [236, 237], "adjust": 238, "magic": 238, "empir": [238, 395], "standard": [19, 238, 324, 325, 395, 407], "deviat": [238, 395], "dataset": [212, 221, 238, 294, 372, 380, 383, 384, 386, 388, 392, 393, 394, 395, 396, 399, 400, 404, 406, 408], "todo": [238, 378, 402, 409, 413, 420, 421], "rapid": [248, 249, 372, 376, 381], "sourc": [248, 249, 373], "bird": [248, 249], "ey": [248, 249], "view": [248, 249, 378], "collect": [248, 249, 293, 376, 379], "site": [248, 249, 410, 414, 415], "reader": [248, 249], "consid": [248, 249, 379, 401, 405, 417], "drop": [248, 249, 379, 410, 414], "rosetta": [248, 249, 379], "learn": [132, 248, 249, 372, 379, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "blaabjerg": [248, 249, 372, 376, 379], "lass": [248, 249, 372], "maher": [248, 249, 372], "kassem": [248, 249, 372], "lydia": [248, 249, 372], "good": [248, 249, 372, 373, 375, 376, 401, 417], "nicola": [248, 249, 372], "jonsson": [248, 249, 372], "matteo": [248, 249, 372], "cagiada": [248, 249, 372], "kristoff": [248, 249, 372], "johansson": [248, 249, 372, 399], "wouter": [248, 249, 372], "boomsma": [248, 249, 372, 379], "ameli": [248, 249, 372], "stein": [248, 249, 372], "kresten": [248, 249, 372], "lindorff": [248, 249, 372], "larsen": [248, 249, 372], "faraldo": [248, 249], "g\u00f3mez": [248, 249, 372, 418], "detlef": [248, 249], "weigel": [248, 249], "nir": [248, 249], "ben": [248, 249], "tal": [248, 249], "julian": [248, 249, 372], "echav": [248, 249], "elif": [248, 249, 372], "2023": [248, 249, 372, 376, 377, 379], "e82593": [248, 249, 372], "7554": [248, 249, 372], "82593": [248, 249, 372], "whose": [252, 257, 324, 389, 418], "quotient": [252, 376, 381], "descriptor": [252, 417], "both": [110, 117, 120, 123, 132, 141, 215, 218, 224, 227, 230, 233, 242, 245, 252, 257, 271, 274, 292, 319, 322, 329, 378, 390, 391, 416, 417], "poli__chem": [], "want": [373, 374, 378, 390, 391, 414, 416, 417], "local": [303, 374, 375, 403, 412], "environemnt": [], "extra": [373, 415], "interest": [375, 378, 379, 390, 391, 403, 405, 412, 414], "molfromsmil": [253, 258], "known": [19, 253, 258, 397, 410], "silent": [253, 258], "nan": [253, 258, 401], "someth": [253, 258, 373, 401], "than": [253, 258, 359, 416, 417], "continu": [19, 257, 259, 293, 294, 312, 313, 359, 372, 381, 414], "lipinski": [257, 259], "rule": [257, 259, 373], "strongli": [], "advic": 373, "heurist": 259, "discard": 259, "too": 259, "heavi": [259, 373], "pareto": 260, "front": 260, "accessibl": 263, "sa": [263, 376, 381, 399], "toi": [275, 293, 294, 312, 313, 316, 323, 325, 359, 382, 401, 412, 416, 423], "avout": 275, "super": [275, 289, 373, 374, 381, 411, 417], "mario": [275, 279, 289, 372, 381, 417], "bro": [275, 289, 381, 417], "level": [275, 277, 278, 279, 280, 281, 282, 283, 289, 372, 378, 381, 401], "n_pad": 278, "left": 278, "room": 278, "agent": [278, 401], "land": 278, "clean": [279, 378], "remov": [279, 377, 390, 391, 417], "11": [279, 282, 375, 385, 399, 415], "empti": 279, "level_txt": [280, 281], "n_sprite": 282, "integ": [282, 283, 374, 405, 407, 411, 414, 417], "levels_onehot": 283, "probit": 283, "tensor_level": [], "torch": 417, "tensor": [], "level_s": [], "14": 401, "could": [373, 374, 378, 379, 389, 410, 411, 414, 417, 422], "mariogan": [], "jar": 373, "prob_matrix": 285, "item": [285, 370], "sentenc": [], "shape": [9, 373, 374, 375, 382, 403, 405, 407, 411, 414], "z_dim": [], "devic": [], "path_to_state_dict": [], "vaemario": [], "pretrain": [], "landscap": 294, "signatur": 294, "sign": [294, 405], "flip": [294, 405], "becaus": [294, 415, 417], "re": [294, 375, 378, 379, 411, 412, 417], "deal": 294, "ali": [294, 372], "roomi": [294, 316, 372, 376, 405], "2015": [294, 372, 376, 405], "unconstrain": [294, 316, 372], "www": [294, 372, 399], "halifax": 294, "nova": 294, "scotia": 294, "canada": 294, "dalhousi": 294, "univers": 294, "electr": 294, "surjanov": [294, 376], "bingham": [294, 376], "virtual": [294, 401], "sfu": 294, "ca": 294, "ssurjano": 294, "linebo": [300, 405, 422], "kirschnj": 300, "xy": [303, 307, 308], "cross": 303, "trai": 303, "maxima": [303, 307], "quilt": 303, "pattern": [123, 303], "2d": [303, 307, 308, 359], "alpha": [306, 375, 418], "veri": 307, "flat": 307, "pi": 307, "egg": 308, "holder": 308, "especi": [308, 376], "difficult": 308, "know": [308, 378, 410], "optima": [308, 316], "squar": 309, "norm": 309, "shift": 309, "awai": [309, 379], "bit": [309, 378], "normal": [310, 372, 415, 419], "903534": 310, "39": [310, 389], "16599": 310, "divid": 310, "dimens": [312, 313, 316, 359, 372, 405, 418], "focu": [312, 378, 410, 414], "ones": 312, "dimension": [312, 359, 372], "function_nam": [313, 405, 418, 422], "n_dimens": [313, 405, 418, 419, 422], "embed_in": [313, 316, 405], "randomli": [313, 374, 405, 410, 411, 414, 423, 424, 425], "embed": [313, 359, 405], "emb": [313, 359, 405], "toycontinuousproblem": 313, "bound": 313, "lower": [313, 359], "upper": 313, "seri": 315, "testb": 315, "wikipedia": 315, "wiki": 315, "test_functions_for_optim": 315, "ackley_function_01": [316, 376, 381, 405, 418, 422], "alpine_01": [316, 405], "alpine_02": [316, 405], "bent_cigar": [316, 405], "brown": [11, 110, 117, 120, 123, 141, 215, 218, 224, 227, 230, 233, 242, 245, 271, 274, 292, 316, 319, 322, 329, 372, 380, 381, 383, 384, 388, 393, 394, 396, 400, 404, 405, 406, 408], "chung_reynold": [316, 405], "cosine_mixtur": [316, 405], "deb_01": [316, 405], "deb_02": [316, 405], "deflected_corrugated_spr": [316, 405], "styblinski_tang": 316, "shifted_spher": [316, 405], "easom": [316, 376, 381, 405], "cross_in_trai": [316, 405], "egg_hold": [316, 405], "camelback_2d": [316, 405], "n_dim": 316, "definit": [316, 405], "white": [323, 324, 365, 376, 381, 414], "vector": 325, "downward": 325, "exemplifi": 352, "Not": 352, "come": [9, 352, 385, 414, 416], "benefit": 352, "intellisens": 352, "spawn": [354, 373], "higher": [359, 378], "afford": 359, "intrins": 359, "actual": [359, 386, 392, 405], "readm": [], "verbatum": [], "fullnam": 370, "escap": 370, "underlin": 370, "block": 370, "rubric": 370, "endfor": 370, "endif": 370, "endblock": 370, "ar15": 372, "url": [372, 376, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "bkj": 372, "maximilian": 372, "balandat": [372, 418, 422], "brian": 372, "karrer": 372, "daniel": 372, "jiang": 372, "daulton": 372, "benjamin": [372, 399], "letham": 372, "eytan": 372, "bakshi": 372, "botorch": [372, 376, 418, 422], "framework": 372, "effici": [11, 372, 412, 418], "mont": 372, "carlo": 372, "decemb": 372, "2020": [212, 221, 372, 376, 392, 399, 418, 422, 423], "1910": 372, "06403": 372, "cs": 372, "math": 372, "stat": 372, "bkg": 372, "23": [372, 375], "bf17": 372, "je": 372, "frellsen": [372, 379], "spheric": 372, "convolut": 372, "applic": 372, "guyon": 372, "u": [372, 412], "von": 372, "luxburg": 372, "bengio": 372, "wallach": 372, "fergu": 372, "vishwanathan": 372, "garnett": 372, "editor": 372, "advanc": 372, "neural": [372, 379, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "system": [372, 377, 378, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "volum": [372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "30": [372, 405], "curran": 372, "inc": 372, "proceed": [372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "neurip": [372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "cc": [372, 380, 383, 384, 385, 386, 388, 392, 393, 394, 396, 400, 404, 406, 408, 415], "paper_fil": 372, "1113d7a76ffceca1bb350bfe145467c6": 372, "pdf": [212, 221, 372], "dpam02": 372, "deb": [372, 423], "pratap": 372, "agarw": 372, "meyarivan": 372, "fast": 372, "elitist": 372, "multiobject": 372, "genet": [372, 423], "nsga": 372, "ii": 372, "ieee": 372, "transact": 372, "evolutionari": [372, 374, 376, 411, 419], "182": 372, "197": 372, "april": 372, "2002": [372, 423], "1109": 372, "4235": 372, "996017": 372, "gfsc22": 372, "matter": [11, 372], "practic": [11, 372], "thirti": 372, "sixth": 372, "confer": [372, 392], "openreview": 372, "net": 372, "forum": 372, "yczrdi0y7g": 372, "gost": 372, "22": [372, 378], "dockstr": [372, 376, 381, 410, 414, 415], "gpb": 372, "jacob": 372, "gardner": [372, 418], "geoff": 372, "pleiss": 372, "david": [372, 419], "bindel": 372, "kilian": 372, "weinberg": 372, "gpytorch": [372, 418], "blackbox": 372, "matrix": [372, 419], "infer": 372, "gpu": 372, "2018": [212, 221, 372, 376, 392, 401, 418], "gbwd": 372, "rafael": 372, "bombarelli": [372, 418], "jennif": 372, "wei": 372, "duvenaud": 372, "benjam\u00edn": 372, "s\u00e1nchez": 372, "lengel": [372, 399], "denni": 372, "sheberla": 372, "jorg": 372, "aguilera": 372, "iparraguirr": 372, "timothi": 372, "hirzel": 372, "ryan": 372, "adam": 372, "al\u00e1n": [372, 399], "driven": 372, "central": 372, "268": 372, "276": 372, "februari": 372, "acscentsci": 372, "7b00572": 372, "ho96": 372, "hansen": [372, 419], "ostermei": [372, 419], "arbitrari": 372, "evolut": [372, 423], "strategi": [372, 376, 419], "covari": [372, 419], "312": 372, "317": 372, "1996": [372, 419], "icec": 372, "542381": 372, "hfg": 372, "21": [372, 410, 414], "machin": [372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "drug": [212, 221, 372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408, 414], "discoveri": [372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "develop": [372, 373, 374, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408, 411], "fifth": [], "2021": [372, 380, 383, 384, 386, 387, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "8nvgnornowr": [], "jrhernandezgarcia": 372, "moksh": 372, "jain": [372, 377], "sharath": 372, "chandra": 372, "raparthi": 372, "alex": [372, 399], "hern": 372, "\u00e1": 372, "ndez": 372, "garc": 372, "\u0131": 372, "jarrid": 372, "rector": 372, "brook": [372, 376], "yoshua": 372, "santiago": 372, "miret": 372, "emmanuel": 372, "gf": 372, "low": [19, 372], "kraus": 372, "emma": 372, "brunskil": 372, "kyunghyun": 372, "cho": 372, "barbara": 372, "engelhardt": 372, "sivan": 372, "sabato": 372, "jonathan": 372, "scarlett": 372, "40th": 372, "202": 372, "14631": 372, "14653": 372, "pmlr": [372, 392], "29": 372, "jul": [372, 392], "mlr": 372, "press": 372, "v202": 372, "jain23a": 372, "kmh": 372, "19": 372, "johann": 372, "kirschner": [372, 422], "mojmir": 372, "mutni": 372, "nicol": 372, "hiller": 372, "rasmu": 372, "ischebeck": 372, "safe": 372, "high": [19, 372], "subspac": 372, "36th": 372, "3429": 372, "3438": 372, "2019": [11, 110, 117, 120, 123, 141, 215, 218, 224, 227, 230, 233, 242, 245, 271, 274, 292, 319, 322, 329, 372, 376, 380, 381, 383, 384, 388, 393, 394, 396, 400, 404, 406, 408, 422], "v97": 372, "kirschner19a": 372, "ssw": 372, "16": [372, 378], "bobak": 372, "shahriari": [372, 418], "kevin": 372, "swerski": 372, "ziyu": 372, "wang": 372, "nando": 372, "freita": 372, "human": [372, 418], "out": [372, 380, 382, 383, 384, 386, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 404, 405, 406, 407, 408, 414, 418], "review": 372, "104": 372, "148": 372, "175": 372, "januari": 372, "jproc": 372, "2494218": 372, "sr73": 372, "shrake": [372, 378], "ruplei": [372, 378], "exposur": 372, "atom": 372, "lysozym": 372, "insulin": 372, "79": 372, "351": 372, "371": 372, "sep": [372, 386], "1973": [372, 378], "1016": 372, "0022": 372, "2836": 372, "73": 372, "90011": 372, "smg": 372, "preprint": 372, "blankdeb20": 372, "blank": [372, 423], "pymoo": [372, 423], "89497": 372, "89509": 372, "tutori": [373, 378, 410, 412, 416, 417, 418], "cover": 373, "what": [373, 400, 408, 410, 416], "look": [373, 374, 411, 417], "poli": [373, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 415, 416, 418, 419, 422, 423, 424, 425], "live": [373, 415], "goe": [373, 378, 417], "exactli": [373, 374, 389, 395, 411], "doesn": [373, 412, 415], "mani": [9, 373, 423], "think": 373, "project": [373, 378], "ll": [373, 377, 378, 414, 416], "carri": 373, "let": [373, 375, 378, 401, 410, 412, 414, 415, 417], "super_mario_bro": [373, 376, 410, 414], "pt": [373, 379], "level_util": 373, "md": [373, 374], "As": [373, 378, 410, 415, 417], "don": [373, 376, 385, 415], "end": [373, 378, 401, 412, 416], "ignor": 373, "altern": 373, "averag": 373, "abstract_black_box": [373, 417], "abstract_problem_factori": [373, 417], "problem_setup_inform": [412, 417], "pythonpath": [], "runtim": [373, 417], "imagin": [], "your_local_depend": [], "yourblackbox": [], "your_arg": 373, "your_second_arg": 373, "your_kwarg": 373, "yourproblemfactori": [], "chapter": [374, 375, 376, 378, 411, 412, 414, 416, 417], "your_problem": 373, "problem_info": [403, 412, 414, 417], "__name__": [373, 416, 417], "__main__": [373, 416, 417], "registri": [373, 416], "register_problem": [373, 417], "your_problem_factori": [], "your_env": 373, "That": [373, 389], "camel_cas": 373, "under": [373, 375, 377, 387, 405, 417], "tell": 373, "though": 373, "sai": [373, 378, 405, 410, 415, 417], "channel": [373, 417], "machinelearninglifesci": [373, 374, 375, 376, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408, 417], "dev": [373, 375, 376, 378], "java": [373, 417], "poli__mario": 373, "forg": 373, "pytorch": 373, "openjdk": 373, "cpuonli": 373, "click": [373, 376, 381, 414], "moreov": [373, 374, 411], "googl": [373, 376], "colab": [373, 376], "put": [373, 378, 423], "describ": [9, 373, 378, 389, 414, 416], "register": [], "get_problem": [410, 414, 416, 417], "your_arg_1": 373, "mayb": 373, "your_arg_2": 373, "your_factori": 373, "thereof": 373, "At": [19, 378, 412, 414, 417], "point": [373, 378, 412, 414, 417, 418], "wrote": [], "direct": 422, "life": 379, "debug": [375, 403], "vscode": [], "available_problem_factori": 373, "importerror": 373, "share": [373, 374, 375], "feel": [373, 374, 378], "contribut": [372, 373, 374, 399], "case": [374, 375, 378, 382, 403, 405, 407, 410, 411, 412, 414, 417], "poli_baselin": [374, 375, 410, 414, 416, 418, 419, 422, 423, 424, 425], "almost": [374, 411], "trivial": [374, 375, 411, 414, 417], "complic": [374, 411, 415], "likewis": [374, 411], "explain": [374, 411, 412], "abstractsolv": [374, 410, 411], "abstract_solv": [374, 410, 411], "black_box": [374, 375, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 410, 411, 412, 414, 416, 418, 419, 422, 423, 424, 425], "histori": [374, 410, 411, 414, 424, 425], "x0_i": 374, "y0_i": 374, "ingredi": [374, 378, 410, 411], "next_candid": [374, 410, 411, 414], "propos": [374, 381, 411, 414], "solv": [374, 401, 410, 411, 414, 416, 417, 418, 419, 422, 423, 424, 425], "max_it": [374, 410, 411, 414, 416, 418, 419, 422, 423, 424, 425], "next": [374, 376, 378, 410, 411, 412, 414, 416, 417], "solut": [374, 397, 411, 423], "notimplementederror": [374, 411], "subclass": [373, 374, 411], "100": [374, 411, 414, 423, 424, 425], "rang": [374, 375, 407, 411], "callback": 374, "pre_step_callback": 374, "turn": 374, "updat": [374, 410, 412, 414, 419], "_": [374, 375, 423], "post": 374, "post_step_callback": 374, "get_best_perform": [374, 410], "break_at_perform": [374, 416], "break": [374, 416], "leverag": [374, 411], "fact": [374, 411], "simplest": [374, 410, 411], "random_mut": [374, 410, 411, 414, 416], "len": [374, 411], "best_x": [374, 411], "argmax": [374, 411], "alwai": [374, 382, 405, 407, 411, 415, 417], "next_x": [374, 411], "po": [374, 411], "randint": [374, 411], "choic": [374, 411, 423], "pretti": [374, 378, 411], "lean": [374, 411], "notic": [374, 395, 411, 412], "sort": [374, 403, 411, 423], "logic": [5, 373, 374, 411, 412, 415], "noth": [374, 410, 411], "worri": [374, 376, 411, 417], "slightli": [374, 411, 417], "unfortun": [375, 385], "linux": [375, 385, 415], "maco": [375, 385], "top": [375, 376, 414], "therefor": [375, 415], "anaconda": 375, "went": 375, "okai": [375, 379], "anoth": [375, 378, 410, 414], "right": [375, 412, 415], "bleed": 375, "edg": 375, "while": [123, 289, 375, 410], "stabl": [375, 410, 414], "releas": [375, 378], "shell": [373, 375, 417], "home": [375, 377, 378, 389, 390, 391], "poli_object": [373, 375, 379, 417], "phase": 375, "short": [375, 378], "futur": [375, 378], "everyth": [375, 377, 412], "requisit": 375, "openbabel": [375, 385], "white_nois": [375, 407, 410, 414], "minimal_working_exampl": 375, "plenti": 375, "complex": [5, 372, 373, 375, 378, 399], "rasp": [376, 379, 381, 410, 414], "pytdc": 376, "accces": 376, "featur": [376, 379], "clash": [376, 378], "discuss": [376, 412, 414, 416, 417], "baselin": [376, 410, 412, 414, 415, 416, 418, 423], "place": [376, 377, 378], "fresh": 376, "full": [376, 378], "drawn": [376, 381], "unit": [376, 381], "word": [376, 381, 401, 417], "spell": [376, 381], "3pbl": [376, 381, 387], "implmenet": 376, "fluoresc": [376, 378, 381, 410], "On": 376, "focus": 376, "cma": 376, "es": 376, "vanilla": 376, "acquisit": [376, 418, 422], "over": 376, "encourag": 376, "gonzalezduquebartelsmichael": 376, "2024": [372, 376, 378, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "gonz\u00e1lez": [376, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "duqu": [376, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "bartel": [376, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "simon": [372, 376, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "michael": [372, 376, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "richard": [376, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "month": [376, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "jan": [376, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "titl": [376, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "libari": [376, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "year": [376, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "drd3_dock": [376, 410, 414], "graff": 376, "shakhnovich": 376, "foldx_": 376, "gfp_cba": [376, 410, 414], "park": 376, "listgarten": 376, "gfp_select": [376, 410, 414], "penalized_logp_lambo": [376, 410, 414], "rdkit_": 376, "rfp_foldx_": 376, "sa_tdc": [373, 376, 410, 414], "ertl": [372, 376, 399], "schuffenhau": [372, 376, 399], "volz": [372, 376, 401], "toy_continuous_problem": [375, 376, 410, 414], "2013": 376, "coupl": [376, 417], "guid": 376, "subset": [377, 405, 419], "suit": [11, 373, 377], "thing": [373, 377, 378, 415, 417], "dg": 377, "metric": [289, 377], "recent": 377, "academ": 377, "licens": 377, "zip": 377, "auxiliari": 377, "renam": [377, 378, 389, 390, 391], "help": 377, "mac": [377, 415], "warn": [377, 415], "unverifi": 377, "quarantin": 377, "command": [377, 378, 390, 391], "own": [5, 373, 377], "risk": 377, "xattr": 377, "appl": 377, "familiar": 378, "ourselv": 378, "alreadi": [378, 410, 414], "refresh": 378, "essenti": [378, 412], "notebook": 378, "pathlib": [378, 379, 389, 390, 391, 410, 412], "shutil": 378, "path_to_foldx_fil": 378, "this_dir": [378, 412], "resolv": [378, 410, 412], "tmp": 378, "mkdir": [378, 412], "copyfil": 378, "respons": 378, "transport": 378, "oxigen": 378, "sperm": 378, "whale": 378, "101m": 378, "hand": 378, "urllib": 378, "web_address": 378, "rcsb": 378, "urlretriev": 378, "Of": [378, 414], "cours": [289, 378, 414], "long": [378, 410, 417], "aid": 378, "pdb_name": 378, "choos": 378, "repairpdb": [378, 390, 391], "littl": 378, "consumig": 378, "400sec": 378, "build": [378, 414, 417, 418], "101m_repair": 378, "repair_cmd": 378, "water": [378, 390, 391, 397], "crystal": [378, 390, 391], "tree": 378, "fxout": 378, "unrecognized_molecul": 378, "onward": [378, 418], "inspect": 378, "parser": 378, "get_residu": 378, "dive": [5, 378, 414, 416], "first_residu": 378, "resnam": 378, "index": 378, "get_par": 378, "met": 378, "extract": 378, "sequtil": 378, "seq1": 378, "original_residu": 378, "chain_id": 378, "position_in_sequ": 378, "mutant_residu": 378, "glycin": 378, "Be": [378, 379], "care": [378, 410, 415], "fire": 378, "did": 378, "modifi": [373, 378], "mutation_list": 378, "residue_idx": 378, "li": [212, 221, 372, 378, 392], "tranform": 378, "position_in_chain": 378, "content": [372, 378], "indiviual_list": 378, "ma0g": 378, "won": [378, 401], "buildmodel": 378, "gibb": 378, "foldx_cmd": 378, "consortium": 378, "jesper": 378, "freder": 378, "joost": 378, "lui": 378, "peter": [372, 378, 399], "vanhe": 378, "erik": 378, "verschueren": 378, "baeten": 378, "javier": 378, "delgado": 378, "francoi": 378, "permut": 378, "concept": 378, "raphael": 378, "gueroi": 378, "backhbond": 378, "142": 378, "58": 378, "sidehbond": 378, "48": [132, 372, 378, 386], "61": 378, "energy_vdw": 378, "179": 378, "63": 378, "electro": 378, "energy_solvp": 378, "245": 378, "28": 378, "energy_solvh": 378, "238": 378, "89": 378, "energy_vdwclash": 378, "42": 378, "energy_tors": 378, "70": 378, "backbone_vdwclash": 378, "158": 378, "entropy_sidec": 378, "105": 378, "87": 378, "entropy_mainc": 378, "231": 378, "69": 378, "bond": 378, "00": 378, "helix": 378, "dipol": 378, "75": 378, "loop_entropi": 378, "cis_bond": 378, "disulfid": 378, "kn": 378, "electrostat": 378, "partial": 378, "coval": 378, "energy_ionis": 378, "56": 378, "entropi": 378, "32": 378, "meta0": 378, "gly": 378, "ok": 378, "wed": 378, "feb": 378, "44": 378, "52": 378, "spend": 378, "96": 378, "valid": 378, "101m_repair_1": 378, "successfulli": 378, "completedprocess": 378, "sjt972": [378, 410, 414, 415], "understanding_foldx": 378, "01": 378, "returncod": 378, "average_101m_repair": 378, "dif_101m_repair": 378, "pdblist_101m_repair": 378, "raw_101m_repair": 378, "wt_101m_repair_1": 378, "raw_": 378, "_repair": [378, 390, 391], "tabl": 378, "quantiti": 378, "column_nam": 378, "backbon": 378, "hbond": 378, "sidechain": 378, "van": 378, "der": 378, "waal": 378, "solvat": 378, "polar": 378, "hydrophob": 378, "mainchain": 378, "sloop_entropi": 378, "mloop_entropi": 378, "torsion": 378, "bridg": 378, "kon": 378, "ionis": 378, "pd": 378, "readlin": 378, "df": 378, "split": 378, "column": 378, "var": 378, "l3": 378, "qk9dx6g958765kmn_2wn34t00000gn": 378, "ipykernel_25734": 378, "1758354106": 378, "deprecationwarn": 378, "pyarrow": 378, "major": 378, "arrow": 378, "interoper": 378, "caus": 378, "pleas": [378, 410, 414, 415], "issu": 378, "54466": 378, "overal": 378, "31": 378, "7457": 378, "34": 378, "3436": 378, "notat": 378, "stand": [11, 378, 414, 417], "again": 378, "wt_structur": 378, "mut_structur": 378, "pdb1": 378, "shrakeruplei": 378, "attach": [378, 412], "8407": 378, "731560227876": 378, "8439": 378, "063468009845": 378, "impact": 378, "databas": 378, "desir": [378, 414], "lesser": 378, "stabler": 378, "correl": 378, "present": [378, 417], "supervis": 379, "approach": 379, "network": [372, 379, 418], "drawback": 379, "similar": [110, 123, 230, 379, 381], "foldx_stabl": [379, 410, 414], "awar": [379, 418], "scale": [212, 221, 379, 405], "easier": 379, "poli__rasp": 379, "correct": [403, 417], "breakpoint": [], "satisfi": [], "root": 389, "3ned": [379, 410], "__file__": 379, "wildtype_pdb_paths_for_rasp": [], "f_rasp": [], "wildtype_str": [], "join": 410, "three": [412, 414], "three_mut": [], "wildtype_sequ": [], "ddg": [], "approx": [], "03": [372, 392], "07": [], "clang": 379, "cmake": 379, "reduc": 379, "pin": 379, "hash": 379, "bd23a0bf627ae9b08842102a5c2e9404b4a81924": 379, "cavity_model_15": 379, "ds_model": 379, "3ccebe87e017b6bd737f88e1943557d128c85616": 379, "against": [379, 385], "checksum": 379, "satur": 379, "mutagenesi": 379, "pmo": [11, 381], "jump": [289, 381], "cap": 382, "prepar": 385, "autodock": 385, "vina": 385, "suppos": 385, "batteri": 385, "even": [385, 417], "poli__dockstr": 415, "canon": 387, "risperidon": [385, 415], "dockstringproblemfactori": 385, "drd2": [132, 381, 385, 415], "risperidone_smil": [], "cc1": [385, 415], "n2ccccc2": [385, 415], "n1": [385, 415], "ccn3ccc": [385, 415], "cc3": [380, 383, 384, 385, 386, 388, 392, 393, 394, 396, 400, 404, 406, 408, 415], "c4": [385, 415], "noc5": [385, 415], "c4c": [385, 415], "c5": [385, 415], "handl": 415, "hood": 387, "abov": [387, 389, 416, 417], "success": 387, "underneath": 389, "poli__tdc": [], "text": [380, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 396, 399, 400, 404, 406, 408, 417], "foldx_rfp_lambo": [389, 410, 414], "poli__lambo": 389, "avali": 389, "skip": 389, "decid": 389, "11189": 389, "00587946": 389, "8155": 389, "acces": [390, 399], "foldx_stability_and_sasa": [390, 391, 410, 414], "v4": [390, 391], "filenam": [390, 391], "cach": [390, 391], "your_fil": [390, 391], "heteroatom": [390, 391], "pdbtool": [390, 391], "Then": [], "foldx_sasa": [410, 414], "poli__protein": 415, "carefulli": 395, "zinc": 395, "coeffici": 397, "octanol": 397, "rdkit_logp": [410, 414], "carbon": [395, 397, 398], "6361": 397, "rdkit_q": [410, 414], "35978494": [], "assert": 416, "isclos": [], "8548": [], "run_info": 403, "link": 403, "peopl": [212, 221, 405], "sum_": 405, "x_d": 405, "saasbo": 405, "assumpt": 405, "roughli": 405, "speak": 405, "question": [401, 405], "30d": 405, "dimensions_to_embed_in": [313, 316, 405], "mathcal": 407, "But": 409, "idea": 409, "rc": [], "sit": [], "rfp_foldx_stability_and_sasa": [410, 414], "stick": 410, "red": 410, "explor": [410, 418], "ls": 410, "3ned_repair": 410, "optimizing_protein_st": 410, "ipynb": 410, "mrogu": 410, "hopefulli": [], "remind": [], "forgot": [], "traceback": [], "138": [], "typeerror": [], "got": [], "unexpect": [], "176": [], "145": [], "cell": [], "439": [], "437": [], "438": [], "__create_as_isolated_process": [], "440": [], "441": [], "442": [], "443": [], "444": [], "445": [], "446": [], "447": [], "448": [], "449": [], "problem_inform": [], "451": [], "278": [], "tb": [], "msg": [], "277": [], "279": [], "280": [], "281": [], "msg_type": [], "282": [], "five": [], "section": [410, 416, 417], "select": [410, 414, 422], "alter": 410, "special": [410, 414], "n_iter": 410, "178": [], "76": [], "267": [], "80": [], "13": [], "374": [], "65": [], "17": [], "146": [], "340": [], "27": [], "77": 415, "41": [], "na194f": [], "asna194": [], "193": [], "phe": [], "fri": [], "09": [], "51": [], "54": [], "3ned_repair_1": [], "qa114": [], "glna114": [], "113": [], "ser": [], "da3m": [], "aspa3": [], "kei": [375, 410, 416], "get_best_solut": [410, 414, 416, 423, 424, 425], "41639": [], "0629": [], "5983": [], "1298": [], "eednmaiikefmrfkthmegsvnghefeiegegegrpyegtqtaklkvtkggplpfawdilspqfskayvkhpadipdylklsfpegfkwervmnfedggvvtvtqdsslsdgefiykvklrgtnfpsdgpvmqkktmgweacsermypedgalkgemkmrlklkdgghydaevkttykakkpvqlpgayftntklditshnedytiveqyernegrhstggmdelyk": [], "appli": 411, "part": [380, 383, 384, 388, 393, 394, 396, 400, 401, 404, 406, 408, 412, 415], "compar": [412, 415], "qualiti": 412, "save": 412, "json": 412, "mlflow": 412, "weight": 412, "bias": 412, "abstract_observ": 412, "skeleton": 412, "simpleobserv": 412, "init": 412, "servic": 412, "wandb": 412, "adjac": 412, "identifi": 412, "uuid4": 412, "metadata": 412, "uuid": 412, "experiment_path": 412, "as_dict": 412, "recal": 412, "tolist": 412, "dump": 412, "curiou": 412, "rememb": [412, 417], "invent": 412, "wheel": 412, "tensorboard": 412, "fp": 412, "snippet": [412, 416], "scenario": 412, "z": [212, 221, 412], "were": [412, 415], "accordingli": 412, "migu": 412, "flea": [412, 417], "showcas": 412, "behind": 412, "saw": 412, "overwritten": 412, "deeper": [5, 414, 416], "intro": 414, "treat": [110, 414], "anyth": [], "further": [], "page": [372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408, 414, 417], "randommut": [414, 416, 424, 425], "anaconda3": [410, 414, 415], "docs2": [410, 414], "lib": [410, 414, 415], "python3": [410, 414, 415], "tqdm": [410, 414], "auto": [410, 414], "tqdmwarn": [410, 414], "iprogress": [410, 414], "jupyt": [410, 414], "ipywidget": [410, 414], "readthedoc": [410, 414], "io": [410, 414], "user_instal": [410, 414], "autonotebook": [410, 414], "notebook_tqdm": [410, 414], "16173153": [], "dtype": 414, "u1": 414, "talk": 414, "babel": 415, "No": 415, "freez": 415, "grep": 415, "135": [], "dynamically_instanti": [], "102": [], "92": [], "exec": [], "modulenotfounderror": [], "critic": [], "opt": [], "homebrew": [], "condabin": [], "autodock_vina_1_1_2_mac_catalina_64bit": [], "usr": [], "cryptex": [], "app": [], "sbin": [], "cryptexd": [], "codex": [], "bootstrap": [], "appleintern": [], "tex": [], "texbin": [], "cargo": [], "using_poli": [], "the_bas": [], "python39": [], "dynload": [], "externalblackbox": [], "num_evalu": [], "dockstringwarn": 415, "although": 415, "perfectli": 415, "match": [415, 417], "platform": [399, 415], "report": [400, 408, 415], "f_logp": [], "x0_logp": [], "y0_logp": [], "logpblackbox": 397, "combin": 416, "optimizing_aloha": 416, "01_a_simple_example_of_optim": 416, "our_aloha": [416, 417], "past": [373, 416], "haven": 416, "realli": 416, "Its": 416, "summari": 416, "less": 416, "conclud": 416, "takeawai": 416, "independ": 416, "why": 416, "registering_aloha": 417, "search": [417, 418], "aloof": 417, "syntax": 417, "ouralohablackbox": 417, "sum": 417, "axi": 417, "keepdim": 417, "get_max_sequence_length": 417, "x_0": 417, "alohablackbox": [382, 417], "ascii_uppercas": 417, "ouralohaproblemfactori": 417, "interpret": [212, 221, 372, 392, 417], "poli_aloha": 417, "poli_aloha_problem": 417, "yourself": 417, "aloha_problem_factori": 417, "somewher": 417, "workhors": 417, "querying_aloha": 417, "emphas": 417, "amaz": 417, "x1": 417, "y1": 417, "subtl": 417, "cheminformat": [132, 212, 221, 372, 386, 392, 399, 417], "mechan": 417, "solver": [417, 418, 419, 422, 423, 424, 425], "approxim": 418, "tild": 418, "boldsymbol": [418, 419], "surrog": 418, "render": [401, 418], "smartli": 418, "balanc": 418, "exploit": 418, "grid": 418, "vanillabayesianoptim": 418, "f_acklei": 418, "randn": [418, 422], "clip": [418, 422], "bo_solv": 418, "great": 418, "mostli": 418, "intent": 418, "adversari": [372, 418], "gan": 418, "maintain": [5, 419], "mu": 419, "sigma": 419, "member": 419, "introduct": 419, "blogpost": 419, "pycma": 419, "cma_e": 419, "toycontinuousproblemfactori": 405, "population_s": [419, 422, 423], "initial_mean": 419, "initial_sigma": 419, "restrict": 422, "coordin": 422, "singletaskgp": 422, "type_of_lin": 422, "non": 423, "domin": 423, "mate": 423, "procedur": [372, 423], "upon": 423, "alohaproblemfactori": [382, 423, 424, 425], "multi_objective_black_box": 423, "multiobjectiveblackbox": 423, "discretensgaii": 423, "hyperparamet": 423, "max_iter": 423, "num_mut": 423, "f_aloha": 423, "togeth": 423, "popul": 423, "56267": [], "846902": [], "39441": [], "eednmaiikefmrfkthmegsvnghefeiegegegrpyegtqtaklkvtkggplpfawdilspqfskayvkhpadipdylklsfpegfkwervmnfedggvvtvtqdsslqdgefiykvklrgtnfpsdgpvmqkktmgweacsermypedgalkgemkmrlklkdgghydaevkttykakkpvqlpgayntntklditshnedytiveqyernegrhstggmdelyk": [], "258": [], "userwarn": [], "Will": [], "env_nam": [], "269": [], "compat": 5, "abstractisolatedfunct": [5, 373, 415], "externalfunct": 5, "external_isolated_function_script": 5, "properti": 9, "fix": [9, 373], "fidel": [19, 412], "noisi": 19, "etc": [19, 401], "black_box_inform": [21, 373], "blackboxinform": [21, 373, 407, 410], "abstractproblem": 104, "plan": [12, 137, 267, 401], "elbo": 202, "n_starting_point": 202, "playabl": 289, "checklist": 373, "pai": 373, "attent": 373, "my_problem_nam": 373, "desc": 373, "boilerpl": 373, "my_problem_inform": 373, "fixed_length": [373, 407, 412], "determinist": [373, 407, 410, 412], "potenti": 373, "padding_token": [373, 407, 412], "entri": 373, "rout": 373, "whatev": 373, "one_depend": 373, "another_depend": 373, "yet_another_depend": 373, "complicatedclass": 373, "abstract_isolated_funct": 373, "myisolatedlog": 373, "register_isolated_funct": 373, "my_problem_name__isol": 373, "__isol": 373, "conda_env_inside_environment_fil": 373, "instance_function_as_isolated_process": 373, "my_problem_info": 373, "myblackbox": 373, "my_problem": 373, "inner_funct": [373, 415], "weren": 373, "problem_name__isol": 373, "static": 373, "staticmethod": 373, "get_black_box_info": 373, "myproblemfactori": 373, "my_problem_factori": 373, "available_black_box": [373, 375], "dict_kei": 375, "whitenoiseblackbox": [407, 414], "08390547": 414, "properli": 410, "foldxstabilityproblemfactori": [391, 410], "foldxstabilityblackbox": [391, 410], "46959": 410, "4687": 410, "14886": 410, "56841": 410, "eednmaiikefmrfkthmegsvnghefeiegegegrpyegtqtaklkvtkggplpfawdilspqfskayvkhpadipdylklsfpegfkwervmnfedggvvtvtqdsslqdgefiykvklrgtnfpsdgpvmqkktmgweacsermypedgalkgimkmrlklkdgghydaevkttykakkpvqlpgayntntklditshnedytiveqyernegrhstggmdelyk": 410, "dockstringblackbox": [385, 415], "submodul": 415, "multiprocess": 415, "qedproblemfactori": 398, "qedblackbox": 398, "35978": 398, "toycontinuousblackbox": [405, 418, 419, 422], "whitenoiseproblemfactori": 407, "logpproblemfactori": 397, "drd3problemfactori": 387, "drd3blackbox": 387, "c1ccccc1": 387, "penalizedlogplamboproblemfactori": 395, "penalizedlogplamboblackbox": 395, "2238": 395, "saproblemfactori": 399, "sablackbox": 399, "ccnc": 399, "c1ccc": 399, "nc": [380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "n2cc": 399, "c2": 399, "c1": [380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "85483733": 399, "wildtype_repair": [390, 391], "foldxsasaproblemfactori": 390, "foldxsasablackbox": 390, "raspblackbox": 379, "raspproblemfactori": 379, "static_files_for_test": [], "ssmnonv16": 372, "jame": 372, "summervil": [372, 401], "sam": 372, "snodgrass": 372, "matea": 372, "onta": 372, "villar": 372, "vglc": 372, "video": 372, "game": [372, 401], "corpu": 372, "7th": 372, "workshop": 372, "tkb10": 372, "togeliu": [372, 401], "sergei": [372, 399], "karakovskii": 372, "robin": [372, 401], "baumgarten": [372, 401], "ai": 372, "competit": [372, 401], "congress": 372, "2010": [372, 401], "cec": 372, "5586133": 372, "classic": 401, "floor": 401, "pipe": 401, "enemi": 401, "action": 401, "constrain": 401, "constraint": 401, "frame": 401, "buffer": 401, "screen": 401, "dropwdown": [], "hpc": 401, "cluster": [], "docker": 401, "xvfb": 401, "99": 401, "1024x768x24": 401, "extens": 401, "glx": 401, "noreset": 401, "background": 401, "marioai": 401, "supermariobrosblackbox": 401, "supermariobrosproblemfactori": 401, "visual": 401, "kha09": 372, "ahm": 372, "khalifa": [372, 401], "amidos2006": 372, "vl": 372, "vanessa": 372, "luca": 372, "schrum": 372, "smith": 372, "jialin": 372, "liu": [212, 221, 372, 392], "sebastian": 372, "risi": 372, "evolv": 372, "gecco": 372, "221": 372, "228": 372, "1145": 372, "3205455": 372, "3205517": 372, "extend": [11, 381], "guacamol": [11, 110, 117, 120, 123, 141, 215, 218, 224, 227, 230, 233, 242, 245, 271, 274, 292, 319, 322, 329, 372, 380, 381, 383, 384, 388, 393, 394, 396, 400, 404, 406, 408], "2206": 11, "12411": 11, "novo": [11, 110, 117, 120, 123, 132, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 271, 274, 292, 319, 322, 329, 372, 380, 383, 384, 386, 388, 392, 393, 394, 396, 400, 404, 406, 408], "59": [11, 110, 117, 120, 123, 141, 215, 218, 224, 227, 230, 233, 242, 245, 271, 274, 292, 319, 322, 329, 372, 380, 383, 384, 388, 393, 394, 396, 400, 404, 406, 408], "pub": [11, 110, 117, 120, 123, 141, 215, 218, 224, 227, 230, 233, 242, 245, 271, 274, 292, 319, 322, 329], "8b00839": [11, 110, 117, 120, 123, 141, 215, 218, 224, 227, 230, 233, 242, 245, 271, 274, 292, 319, 322, 329, 372, 380, 383, 384, 388, 393, 394, 396, 400, 404, 406, 408], "tdcisolatedfunct": 13, "tdc__isol": 13, "albuterol": [110, 381], "consist": [110, 120, 123, 230, 292, 319], "medicin": 110, "breath": 110, "difficulti": 110, "symptom": 110, "cite": [110, 117, 120, 123, 132, 141, 212, 215, 218, 221, 224, 227, 230, 233, 242, 245, 271, 274, 292, 319, 322, 329], "amlodipin": [117, 381], "mpo": [117, 141, 233, 242, 245, 274, 329, 381], "celecoxib": [120, 381], "rediscoveri": [120, 292, 319, 381], "rediscov": [120, 292, 319], "decor": 123, "hop": [123, 271], "exclud": 123, "smart": [123, 322], "classifi": 132, "olivecrona": [132, 372, 386], "bioactiv": 132, "dopamin": [132, 386], "receptor": [132, 386], "reinforc": [132, 372, 386], "jcheminf": 132, "biomedcentr": 132, "articl": [132, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "1186": [132, 372, 386, 392, 399], "s13321": [132, 372, 386, 392], "017": [132, 372, 386], "0235": [132, 372, 386], "fexofenadin": [141, 381], "glycogen": 212, "synthas": 212, "kinas": 212, "beta": 212, "gsk3beta": 212, "condit": [212, 221, 372, 392], "graph": [212, 221, 372, 392], "zhang": [212, 221, 372, 392], "substructur": [212, 221, 372, 392], "jin": [212, 221, 372, 392], "wengong": [212, 221, 372, 392], "regina": [212, 221, 372, 392], "barzilai": [212, 221, 372, 392], "tommi": [212, 221, 372, 392], "jaakkola": [212, 221, 372, 392], "icml": [212, 221], "csail": [212, 221], "mit": [212, 221], "jbj_icml2020b": [212, 221], "excap": [212, 221], "db": [212, 221], "integr": [212, 221], "larg": [212, 221], "facilit": [212, 221], "big": [212, 221], "analysi": [212, 221], "chemogenom": [212, 221], "jiangm": [212, 221], "isom": [215, 218], "c7h8n2o2": 215, "c9h10n2o2pf2cl": 218, "median": [224, 227], "mestranol": [230, 381], "osimetrinib": [233, 381], "perindopril": 242, "ranolazin": [245, 381], "scaffold": 271, "sitagliptin": [274, 381], "thiothixen": [292, 381], "effect": 313, "branin_2d": 316, "troglitazon": [319, 381], "valsartan": 322, "zaleplon": [329, 381], "famili": [380, 383, 384, 388, 393, 394, 396, 400, 404, 406, 408], "albuterolsimilarityproblemfactori": 380, "albuterolsimilarityblackbox": 380, "1ccc2c": [380, 383, 384, 386, 388, 392, 393, 394, 396, 400, 404, 406, 408], "sc": [380, 383, 384, 386, 388, 392, 393, 394, 396, 400, 404, 406, 408], "coc3ccc": [380, 383, 384, 386, 388, 392, 393, 394, 396, 400, 404, 406, 408], "cl": [380, 383, 384, 386, 388, 392, 393, 394, 396, 400, 404, 406, 408], "c2c": [380, 383, 384, 386, 388, 392, 393, 394, 396, 400, 404, 406, 408], "2772277": 380, "resourc": [380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "nathan": [372, 380, 383, 384, 388, 393, 394, 396, 400, 404, 406, 408], "marco": [372, 380, 383, 384, 388, 393, 394, 396, 400, 404, 406, 408], "fiscato": [372, 380, 383, 384, 388, 393, 394, 396, 400, 404, 406, 408], "marwin": [372, 380, 383, 384, 388, 393, 394, 396, 400, 404, 406, 408], "segler": [372, 380, 383, 384, 388, 393, 394, 396, 400, 404, 406, 408], "alain": [372, 380, 383, 384, 388, 393, 394, 396, 400, 404, 406, 408], "vaucher": [372, 380, 383, 384, 388, 393, 394, 396, 400, 404, 406, 408], "march": [372, 380, 383, 384, 388, 393, 394, 396, 400, 404, 406, 408], "1096": [372, 380, 383, 384, 388, 393, 394, 396, 400, 404, 406, 408], "1108": [372, 380, 383, 384, 388, 393, 394, 396, 400, 404, 406, 408], "bibtex": [380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "issn": [380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "1549": [380, 383, 384, 388, 393, 394, 396, 400, 404, 406, 408], "9596": [380, 383, 384, 388, 393, 394, 396, 400, 404, 406, 408], "960x": [380, 383, 384, 388, 393, 394, 396, 400, 404, 406, 408], "mar": [380, 383, 384, 388, 393, 394, 396, 400, 404, 406, 408], "languag": [380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "gonzalez": [380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "forest": [386, 392], "classif": [386, 392], "drd2problemfactori": 386, "drd2blackbox": 386, "001546": 386, "marcu": [372, 386], "thoma": [372, 386], "blaschk": [372, 386], "ola": [372, 386], "engkvist": [372, 386], "hongm": [372, 386, 399], "chen": [372, 386, 399], "septemb": [372, 386], "denovorl": 386, "1758": [372, 386, 392, 399], "2946": [372, 386, 392, 399], "bfsv19": 372, "obec17": 372, "yibo": [372, 392], "liangren": [372, 392], "zhenm": [372, 392], "24": 392, "018": [372, 392], "0287": [372, 392], "37": [372, 392], "th": [372, 392], "119": 392, "mocondit": 392, "mointerpret": 392, "jbj20": 372, "lzl18": 372, "gsk3\u03b2": 381, "gsk3betaproblemfactori": 392, "gsk3betablackbox": 392, "es09": 372, "ansgar": [372, 399], "fragment": [372, 399], "june": [372, 399], "pzsl": 372, "miss": 372, "polykovskii": [372, 399], "mose": [372, 399], "daniil": 399, "alexand": 399, "zhebrak": 399, "sanchez": 399, "golovanov": 399, "oktai": 399, "tatanov": 399, "stanislav": 399, "belyaev": 399, "rauf": 399, "kurbanov": 399, "frontier": 399, "pharmacolog": 399, "frontiersin": 399, "3389": 399, "fphar": 399, "565644": 399, "jun": 399, "1663": 399, "9812": 399, "artamonov": 399, "aleksei": 399, "aladinskii": 399, "vladimir": 399, "veselov": 399, "mark": 399, "kadurin": 399, "artur": 399, "nikolenko": 399, "zhavoronkov": 399, "mestranolsimilarityproblemfactori": 393, "mestranolsimilarityblackbox": 393, "19460881": 393, "toward": [384, 404, 406], "celecoxibrediscoveryproblemfactori": 384, "celecoxibrediscoveryblackbox": 384, "14728682": 384, "thiothixenerediscoveryproblemfactori": 404, "thiothixenerediscoveryblackbox": 404, "17391304": 404, "troglitazonerediscoveryproblemfactori": 406, "troglitazonerediscoveryblackbox": 406, "24427481": 406, "properi": [383, 388, 394, 396, 400, 408], "respect": [383, 388, 394, 396, 400, 408], "amlodipinempoproblemfactori": 383, "amlodipinempoblackbox": 383, "46108397": 383, "fexofenadinempoproblemfactori": 388, "fexofenadinempoblackbox": 388, "43364462": 388, "osimetrinibmpoproblemfactori": 394, "osimetrinibmpoblackbox": 394, "09011743": 394, "ranolazinempoproblemfactori": 396, "ranolazinempoblackbox": 396, "29285467": 396, "discrep": [400, 408], "sitagliptinmpoproblemfactori": 400, "sitagliptinmpoblackbox": 400, "34970668e": 400, "zaleplonmpoproblemfactori": 408, "zaleplonmpoblackbox": 408, "0019018": 408}, "objects": {"": [[0, 0, 0, "-", "poli"]], "poli": [[1, 0, 0, "-", "core"], [102, 0, 0, "-", "objective_factory"], [107, 0, 0, "-", "objective_repository"], [330, 0, 0, "-", "registered_objectives"], [331, 0, 0, "-", "tests"]], "poli.core": [[2, 0, 0, "-", "abstract_black_box"], [5, 0, 0, "-", "abstract_isolated_function"], [6, 0, 0, "-", "abstract_problem_factory"], [9, 0, 0, "-", "black_box_information"], [10, 0, 0, "-", "chemistry"], [14, 0, 0, "-", "exceptions"], [17, 0, 0, "-", "multi_objective_black_box"], [19, 0, 0, "-", "problem"], [20, 0, 0, "-", "problem_setup_information"], [22, 0, 0, "-", "proteins"], [26, 0, 0, "-", "registry"], [35, 0, 0, "-", "util"]], "poli.core.abstract_black_box": [[3, 1, 1, "", "AbstractBlackBox"], [4, 1, 1, "", "NegativeBlackBox"]], "poli.core.abstract_black_box.AbstractBlackBox": [[3, 2, 1, "", "__call__"], [3, 2, 1, "", "__del__"], [3, 2, 1, "", "__enter__"], [3, 2, 1, "", "__exit__"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "__neg__"], [3, 2, 1, "", "_black_box"], [3, 3, 1, "", "batch_size"], [3, 3, 1, "", "num_workers"], [3, 3, 1, "", "observer"], [3, 3, 1, "", "observer_info"], [3, 3, 1, "", "parallelize"], [3, 2, 1, "", "reset_evaluation_budget"], [3, 2, 1, "", "set_observer"], [3, 2, 1, "", "terminate"]], "poli.core.abstract_black_box.NegativeBlackBox": [[4, 2, 1, "", "__init__"]], "poli.core.abstract_problem_factory": [[7, 1, 1, "", "AbstractProblemFactory"], [8, 1, 1, "", "MetaProblemFactory"]], "poli.core.abstract_problem_factory.AbstractProblemFactory": [[7, 2, 1, "", "__init__"]], "poli.core.abstract_problem_factory.MetaProblemFactory": [[8, 2, 1, "", "__init__"]], "poli.core.chemistry": [[11, 0, 0, "-", "tdc_black_box"], [13, 0, 0, "-", "tdc_isolated_function"]], "poli.core.chemistry.tdc_black_box": [[12, 1, 1, "", "TDCBlackBox"]], "poli.core.chemistry.tdc_black_box.TDCBlackBox": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "oracle_name"]], "poli.core.exceptions": [[15, 4, 1, "", "BudgetExhaustedException"], [16, 4, 1, "", "PoliException"]], "poli.core.multi_objective_black_box": [[18, 1, 1, "", "MultiObjectiveBlackBox"]], "poli.core.multi_objective_black_box.MultiObjectiveBlackBox": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "_black_box"], [18, 3, 1, "", "objective_functions"]], "poli.core.problem_setup_information": [[21, 1, 1, "", "ProblemSetupInformation"]], "poli.core.problem_setup_information.ProblemSetupInformation": [[21, 2, 1, "", "__init__"]], "poli.core.proteins": [[23, 0, 0, "-", "foldx_black_box"], [25, 0, 0, "-", "foldx_isolated_function"]], "poli.core.proteins.foldx_black_box": [[24, 1, 1, "", "FoldxBlackBox"]], "poli.core.proteins.foldx_black_box.FoldxBlackBox": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "create_working_directory"], [24, 3, 1, "", "experiment_id"], [24, 3, 1, "", "tmp_folder"], [24, 3, 1, "", "wildtype_amino_acids"], [24, 3, 1, "", "wildtype_pdb_paths"], [24, 3, 1, "", "wildtype_residue_strings"], [24, 3, 1, "", "wildtype_residues"]], "poli.core.registry": [[27, 5, 1, "", "delete_observer_run_script"], [28, 5, 1, "", "delete_problem"], [31, 5, 1, "", "register_problem"], [32, 5, 1, "", "register_problem_from_repository"], [33, 5, 1, "", "set_observer"], [34, 5, 1, "", "set_observer_run_script"]], "poli.core.util": [[36, 0, 0, "-", "abstract_observer"], [38, 0, 0, "-", "alignment"], [40, 0, 0, "-", "batch"], [43, 0, 0, "-", "chemistry"], [50, 0, 0, "-", "external_observer"], [52, 0, 0, "-", "files"], [58, 0, 0, "-", "inter_process_communication"], [62, 0, 0, "-", "isolation"], [67, 0, 0, "-", "objective_management"], [71, 0, 0, "-", "observer_wrapper"], [73, 0, 0, "-", "proteins"], [94, 0, 0, "-", "seeding"]], "poli.core.util.abstract_observer": [[37, 1, 1, "", "AbstractObserver"]], "poli.core.util.abstract_observer.AbstractObserver": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "finish"], [37, 2, 1, "", "observe"]], "poli.core.util.alignment": [[39, 0, 0, "-", "is_aligned"]], "poli.core.util.batch": [[41, 0, 0, "-", "batch_input"]], "poli.core.util.batch.batch_input": [[42, 5, 1, "", "batched"]], "poli.core.util.chemistry": [[44, 0, 0, "-", "string_to_molecule"]], "poli.core.util.chemistry.string_to_molecule": [[45, 5, 1, "", "selfies_to_molecules"], [46, 5, 1, "", "smiles_to_molecules"], [47, 5, 1, "", "strings_to_molecules"], [48, 5, 1, "", "translate_selfies_to_smiles"], [49, 5, 1, "", "translate_smiles_to_selfies"]], "poli.core.util.external_observer": [[51, 1, 1, "", "ExternalObserver"]], "poli.core.util.external_observer.ExternalObserver": [[51, 2, 1, "", "__getattr__"], [51, 2, 1, "", "__init__"], [51, 2, 1, "", "finish"], [51, 2, 1, "", "initialize_observer"], [51, 2, 1, "", "observe"]], "poli.core.util.files": [[53, 0, 0, "-", "download_files_from_github"], [56, 0, 0, "-", "integrity"]], "poli.core.util.files.download_files_from_github": [[54, 5, 1, "", "download_file_from_github_repository"], [55, 5, 1, "", "get_sha_for_tag"]], "poli.core.util.files.integrity": [[57, 5, 1, "", "compute_md5_from_filepath"]], "poli.core.util.inter_process_communication": [[59, 0, 0, "-", "process_wrapper"]], "poli.core.util.inter_process_communication.process_wrapper": [[60, 1, 1, "", "ProcessWrapper"], [61, 5, 1, "", "get_connection"]], "poli.core.util.inter_process_communication.process_wrapper.ProcessWrapper": [[60, 2, 1, "", "__init__"]], "poli.core.util.isolation": [[63, 0, 0, "-", "external_black_box"], [64, 0, 0, "-", "external_function"], [65, 0, 0, "-", "instancing"], [66, 0, 0, "-", "isolated_black_box"]], "poli.core.util.objective_management": [[68, 0, 0, "-", "make_run_script"]], "poli.core.util.objective_management.make_run_script": [[69, 5, 1, "", "make_observer_script"], [70, 5, 1, "", "make_run_script"]], "poli.core.util.observer_wrapper": [[72, 5, 1, "", "start_observer_process"]], "poli.core.util.proteins": [[74, 0, 0, "-", "defaults"], [75, 0, 0, "-", "foldx"], [77, 0, 0, "-", "mutations"], [81, 0, 0, "-", "pdb_parsing"], [85, 0, 0, "-", "rasp"]], "poli.core.util.proteins.foldx": [[76, 1, 1, "", "FoldxInterface"]], "poli.core.util.proteins.foldx.FoldxInterface": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "_compute_sasa"], [76, 2, 1, "", "_read_energy"], [76, 2, 1, "", "_repair_if_necessary_and_provide_path"], [76, 2, 1, "", "_simulate_mutations"], [76, 2, 1, "", "compute_sasa"], [76, 2, 1, "", "compute_stability"], [76, 2, 1, "", "compute_stability_and_sasa"], [76, 2, 1, "", "copy_foldx_files"], [76, 2, 1, "", "repair"], [76, 3, 1, "", "verbose"], [76, 3, 1, "", "working_dir"], [76, 2, 1, "", "write_mutations_to_file"]], "poli.core.util.proteins.mutations": [[78, 5, 1, "", "edits_between_strings"], [79, 5, 1, "", "find_closest_wildtype_pdb_file_to_mutant"], [80, 5, 1, "", "mutations_from_wildtype_residues_and_mutant"]], "poli.core.util.proteins.pdb_parsing": [[82, 5, 1, "", "parse_pdb_as_residue_strings"], [83, 5, 1, "", "parse_pdb_as_residues"], [84, 5, 1, "", "parse_pdb_as_structure"]], "poli.core.util.proteins.rasp": [[86, 0, 0, "-", "inner_rasp"], [92, 6, 1, "", "load_models"], [93, 6, 1, "", "rasp_interface"]], "poli.core.util.proteins.rasp.inner_rasp": [[87, 6, 1, "", "PrismData"], [88, 6, 1, "", "cavity_model"], [89, 6, 1, "", "helpers"], [90, 6, 1, "", "run_pipeline"], [91, 6, 1, "", "visualization"]], "poli.core.util.seeding": [[95, 0, 0, "-", "seeding"]], "poli.core.util.seeding.seeding": [[96, 5, 1, "", "seed_numpy"], [97, 5, 1, "", "seed_python"]], "poli.objective_factory": [[103, 1, 1, "", "ExternalBlackBox"], [104, 5, 1, "", "create"], [105, 5, 1, "", "load_config"], [106, 5, 1, "", "start"]], "poli.objective_factory.ExternalBlackBox": [[103, 2, 1, "", "__init__"]], "poli.objective_repository": [[108, 0, 0, "-", "albuterol_similarity"], [111, 0, 0, "-", "aloha"], [115, 0, 0, "-", "amlodipine_mpo"], [118, 0, 0, "-", "celecoxib_rediscovery"], [121, 0, 0, "-", "deco_hop"], [124, 0, 0, "-", "dockstring"], [130, 0, 0, "-", "drd2_docking"], [133, 0, 0, "-", "drd3_docking"], [139, 0, 0, "-", "fexofenadine_mpo"], [142, 0, 0, "-", "foldx_rfp_lambo"], [150, 0, 0, "-", "foldx_sasa"], [157, 0, 0, "-", "foldx_stability"], [164, 0, 0, "-", "foldx_stability_and_sasa"], [170, 0, 0, "-", "gfp_cbas"], [204, 0, 0, "-", "gfp_select"], [210, 0, 0, "-", "gsk3_beta"], [213, 0, 0, "-", "isomer_c7h8n2o2"], [216, 0, 0, "-", "isomer_c9h10n2o2pf2cl"], [219, 0, 0, "-", "jnk3"], [222, 0, 0, "-", "median_1"], [225, 0, 0, "-", "median_2"], [228, 0, 0, "-", "mestranol_similarity"], [231, 0, 0, "-", "osimetrinib_mpo"], [234, 0, 0, "-", "penalized_logp_lambo"], [240, 0, 0, "-", "perindopril_mpo"], [243, 0, 0, "-", "ranolazine_mpo"], [246, 0, 0, "-", "rasp"], [250, 0, 0, "-", "rdkit_logp"], [255, 0, 0, "-", "rdkit_qed"], [260, 0, 0, "-", "rfp_foldx_stability_and_sasa"], [263, 0, 0, "-", "sa_tdc"], [269, 0, 0, "-", "scaffold_hop"], [272, 0, 0, "-", "sitagliptin_mpo"], [275, 0, 0, "-", "super_mario_bros"], [290, 0, 0, "-", "thiothixene_rediscovery"], [293, 0, 0, "-", "toy_continuous_problem"], [317, 0, 0, "-", "troglitazone_rediscovery"], [320, 0, 0, "-", "valsartan_smarts"], [323, 0, 0, "-", "white_noise"], [327, 0, 0, "-", "zaleplon_mpo"]], "poli.objective_repository.albuterol_similarity": [[109, 0, 0, "-", "information"], [110, 0, 0, "-", "register"]], "poli.objective_repository.aloha": [[112, 0, 0, "-", "register"]], "poli.objective_repository.aloha.register": [[113, 1, 1, "", "AlohaBlackBox"], [114, 1, 1, "", "AlohaProblemFactory"]], "poli.objective_repository.aloha.register.AlohaBlackBox": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "_black_box"], [113, 3, 1, "", "alphabet"]], "poli.objective_repository.aloha.register.AlohaProblemFactory": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "create"], [114, 2, 1, "", "get_setup_information"]], "poli.objective_repository.amlodipine_mpo": [[116, 0, 0, "-", "information"], [117, 0, 0, "-", "register"]], "poli.objective_repository.celecoxib_rediscovery": [[119, 0, 0, "-", "information"], [120, 0, 0, "-", "register"]], "poli.objective_repository.deco_hop": [[122, 0, 0, "-", "information"], [123, 0, 0, "-", "register"]], "poli.objective_repository.dockstring": [[125, 0, 0, "-", "information"], [126, 0, 0, "-", "isolated_function"], [127, 0, 0, "-", "register"]], "poli.objective_repository.dockstring.register": [[128, 1, 1, "", "DockstringBlackBox"], [129, 1, 1, "", "DockstringProblemFactory"]], "poli.objective_repository.dockstring.register.DockstringBlackBox": [[128, 2, 1, "", "__init__"], [128, 2, 1, "", "_black_box"], [128, 3, 1, "", "alphabet"]], "poli.objective_repository.dockstring.register.DockstringProblemFactory": [[129, 2, 1, "", "__init__"], [129, 2, 1, "", "create"], [129, 2, 1, "", "get_setup_information"]], "poli.objective_repository.drd2_docking": [[131, 0, 0, "-", "information"], [132, 0, 0, "-", "register"]], "poli.objective_repository.drd3_docking": [[134, 0, 0, "-", "information"], [136, 0, 0, "-", "register"]], "poli.objective_repository.drd3_docking.register": [[137, 1, 1, "", "DRD3BlackBox"], [138, 1, 1, "", "DRD3ProblemFactory"]], "poli.objective_repository.drd3_docking.register.DRD3BlackBox": [[137, 2, 1, "id0", "__init__"], [137, 3, 1, "", "oracle_name"]], "poli.objective_repository.drd3_docking.register.DRD3ProblemFactory": [[138, 2, 1, "", "__init__"]], "poli.objective_repository.fexofenadine_mpo": [[140, 0, 0, "-", "information"], [141, 0, 0, "-", "register"]], "poli.objective_repository.foldx_rfp_lambo": [[143, 0, 0, "-", "information"], [144, 0, 0, "-", "isolated_function"], [145, 0, 0, "-", "register"]], "poli.objective_repository.foldx_sasa": [[152, 0, 0, "-", "information"], [153, 0, 0, "-", "isolated_function"], [154, 0, 0, "-", "register"]], "poli.objective_repository.foldx_sasa.register": [[155, 1, 1, "", "FoldXSASABlackBox"], [156, 1, 1, "", "FoldXSASAProblemFactory"]], "poli.objective_repository.foldx_sasa.register.FoldXSASABlackBox": [[155, 2, 1, "", "__init__"]], "poli.objective_repository.foldx_sasa.register.FoldXSASAProblemFactory": [[156, 2, 1, "", "__init__"]], "poli.objective_repository.foldx_stability": [[159, 0, 0, "-", "information"], [160, 0, 0, "-", "isolated_function"], [161, 0, 0, "-", "register"]], "poli.objective_repository.foldx_stability.register": [[162, 1, 1, "", "FoldXStabilityBlackBox"], [163, 1, 1, "", "FoldXStabilityProblemFactory"]], "poli.objective_repository.foldx_stability.register.FoldXStabilityBlackBox": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "_black_box"]], "poli.objective_repository.foldx_stability.register.FoldXStabilityProblemFactory": [[163, 2, 1, "", "__init__"]], "poli.objective_repository.foldx_stability_and_sasa": [[165, 0, 0, "-", "information"], [166, 0, 0, "-", "isolated_function"], [167, 0, 0, "-", "register"]], "poli.objective_repository.foldx_stability_and_sasa.register": [[168, 1, 1, "", "FoldXStabilityAndSASABlackBox"], [169, 1, 1, "", "FoldXStabilityAndSASAProblemFactory"]], "poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASABlackBox": [[168, 2, 1, "", "__init__"]], "poli.objective_repository.foldx_stability_and_sasa.register.FoldXStabilityAndSASAProblemFactory": [[169, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas": [[171, 0, 0, "-", "abstract_vae_wrapper"], [173, 0, 0, "-", "cbas_alphabet_preprocessing"], [188, 0, 0, "-", "cbas_wrapper"], [192, 0, 0, "-", "gfp_gp"], [193, 0, 0, "-", "information"], [194, 0, 0, "-", "isolated_function"], [195, 0, 0, "-", "make_vae"], [201, 0, 0, "-", "register"]], "poli.objective_repository.gfp_cbas.abstract_vae_wrapper": [[172, 1, 1, "", "AbstractVAEWrapper"]], "poli.objective_repository.gfp_cbas.abstract_vae_wrapper.AbstractVAEWrapper": [[172, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.cbas_alphabet_preprocessing": [[174, 5, 1, "", "convert_aas_to_idx_array"], [175, 5, 1, "", "convert_idx_array_to_aas"], [176, 5, 1, "", "convert_mutations_to_sequence"], [177, 5, 1, "", "get_argmax"], [178, 5, 1, "", "get_balaji_predictions"], [179, 5, 1, "", "get_experimental_X_y"], [180, 5, 1, "", "get_gfp_X_y_aa"], [181, 5, 1, "", "get_gfp_base_seq"], [182, 5, 1, "", "get_samples"], [183, 5, 1, "", "one_hot_encode_aa"], [184, 5, 1, "", "one_hot_encode_aa_array"], [185, 5, 1, "", "one_hot_encode_dna"], [186, 5, 1, "", "partition_data"], [187, 5, 1, "", "read_gfp_data"]], "poli.objective_repository.gfp_cbas.cbas_wrapper": [[189, 1, 1, "", "CBASVAEWrapper"], [190, 1, 1, "", "ConvertedTorchVaeDecoder"], [191, 1, 1, "", "ConvertedTorchVaeEncoder"]], "poli.objective_repository.gfp_cbas.cbas_wrapper.CBASVAEWrapper": [[189, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeDecoder": [[190, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.cbas_wrapper.ConvertedTorchVaeEncoder": [[191, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.make_vae": [[196, 1, 1, "", "BaseVAE"], [197, 1, 1, "", "SimpleVAE"], [198, 5, 1, "", "build_vae"], [199, 5, 1, "", "identity_loss"], [200, 5, 1, "", "summed_categorical_crossentropy"]], "poli.objective_repository.gfp_cbas.make_vae.BaseVAE": [[196, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.make_vae.SimpleVAE": [[197, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.register": [[202, 1, 1, "", "GFPCBasBlackBox"], [203, 1, 1, "", "GFPCBasProblemFactory"]], "poli.objective_repository.gfp_cbas.register.GFPCBasBlackBox": [[202, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_cbas.register.GFPCBasProblemFactory": [[203, 2, 1, "", "__init__"]], "poli.objective_repository.gfp_select": [[205, 0, 0, "-", "information"], [206, 0, 0, "-", "isolated_function"], [207, 0, 0, "-", "register"]], "poli.objective_repository.gfp_select.register": [[209, 1, 1, "", "GFPSelectionProblemFactory"]], "poli.objective_repository.gfp_select.register.GFPSelectionProblemFactory": [[209, 2, 1, "", "__init__"]], "poli.objective_repository.gsk3_beta": [[211, 0, 0, "-", "information"], [212, 0, 0, "-", "register"]], "poli.objective_repository.isomer_c7h8n2o2": [[214, 0, 0, "-", "information"], [215, 0, 0, "-", "register"]], "poli.objective_repository.isomer_c9h10n2o2pf2cl": [[217, 0, 0, "-", "information"], [218, 0, 0, "-", "register"]], "poli.objective_repository.jnk3": [[220, 0, 0, "-", "information"], [221, 0, 0, "-", "register"]], "poli.objective_repository.median_1": [[223, 0, 0, "-", "information"], [224, 0, 0, "-", "register"]], "poli.objective_repository.median_2": [[226, 0, 0, "-", "information"], [227, 0, 0, "-", "register"]], "poli.objective_repository.mestranol_similarity": [[229, 0, 0, "-", "information"], [230, 0, 0, "-", "register"]], "poli.objective_repository.osimetrinib_mpo": [[232, 0, 0, "-", "information"], [233, 0, 0, "-", "register"]], "poli.objective_repository.penalized_logp_lambo": [[235, 0, 0, "-", "information"], [236, 0, 0, "-", "isolated_function"], [237, 0, 0, "-", "register"]], "poli.objective_repository.penalized_logp_lambo.register": [[238, 1, 1, "", "PenalizedLogPLamboBlackBox"], [239, 1, 1, "", "PenalizedLogPLamboProblemFactory"]], "poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboBlackBox": [[238, 2, 1, "", "__init__"]], "poli.objective_repository.penalized_logp_lambo.register.PenalizedLogPLamboProblemFactory": [[239, 2, 1, "", "__init__"]], "poli.objective_repository.perindopril_mpo": [[241, 0, 0, "-", "information"], [242, 0, 0, "-", "register"]], "poli.objective_repository.ranolazine_mpo": [[244, 0, 0, "-", "information"], [245, 0, 0, "-", "register"]], "poli.objective_repository.rasp": [[247, 0, 0, "-", "information"], [248, 0, 0, "-", "isolated_function"], [249, 0, 0, "-", "register"]], "poli.objective_repository.rdkit_logp": [[251, 0, 0, "-", "information"], [252, 0, 0, "-", "register"]], "poli.objective_repository.rdkit_logp.register": [[253, 1, 1, "", "LogPBlackBox"], [254, 1, 1, "", "LogPProblemFactory"]], "poli.objective_repository.rdkit_logp.register.LogPBlackBox": [[253, 2, 1, "", "__init__"], [253, 2, 1, "", "_black_box"], [253, 3, 1, "", "from_selfies"], [253, 3, 1, "", "from_smiles"]], "poli.objective_repository.rdkit_logp.register.LogPProblemFactory": [[254, 2, 1, "", "__init__"]], "poli.objective_repository.rdkit_qed": [[256, 0, 0, "-", "information"], [257, 0, 0, "-", "register"]], "poli.objective_repository.rdkit_qed.register": [[258, 1, 1, "", "QEDBlackBox"], [259, 1, 1, "", "QEDProblemFactory"]], "poli.objective_repository.rdkit_qed.register.QEDBlackBox": [[258, 2, 1, "", "__init__"], [258, 2, 1, "", "_black_box"], [258, 3, 1, "", "from_selfies"], [258, 3, 1, "", "from_smiles"]], "poli.objective_repository.rdkit_qed.register.QEDProblemFactory": [[259, 2, 1, "", "__init__"], [259, 2, 1, "", "create"], [259, 2, 1, "", "get_setup_information"]], "poli.objective_repository.rfp_foldx_stability_and_sasa": [[261, 0, 0, "-", "information"], [262, 0, 0, "-", "register"]], "poli.objective_repository.sa_tdc": [[264, 0, 0, "-", "information"], [265, 0, 0, "-", "isolated_function"], [266, 0, 0, "-", "register"]], "poli.objective_repository.sa_tdc.register": [[267, 1, 1, "", "SABlackBox"], [268, 1, 1, "", "SAProblemFactory"]], "poli.objective_repository.sa_tdc.register.SABlackBox": [[267, 2, 1, "", "__init__"]], "poli.objective_repository.sa_tdc.register.SAProblemFactory": [[268, 2, 1, "", "__init__"], [268, 2, 1, "", "create"], [268, 2, 1, "", "get_setup_information"]], "poli.objective_repository.scaffold_hop": [[270, 0, 0, "-", "information"], [271, 0, 0, "-", "register"]], "poli.objective_repository.sitagliptin_mpo": [[273, 0, 0, "-", "information"], [274, 0, 0, "-", "register"]], "poli.objective_repository.super_mario_bros": [[276, 0, 0, "-", "information"], [277, 0, 0, "-", "level_utils"], [289, 0, 0, "-", "register"]], "poli.objective_repository.super_mario_bros.level_utils": [[278, 5, 1, "", "add_padding_to_level"], [279, 5, 1, "", "clean_level"], [280, 5, 1, "", "level_to_array"], [281, 5, 1, "", "level_to_list"], [282, 5, 1, "", "levels_to_onehot"], [283, 5, 1, "", "onehot_to_levels"], [285, 5, 1, "", "vectorized"]], "poli.objective_repository.thiothixene_rediscovery": [[291, 0, 0, "-", "information"], [292, 0, 0, "-", "register"]], "poli.objective_repository.toy_continuous_problem": [[294, 0, 0, "-", "definitions"], [311, 0, 0, "-", "information"], [312, 0, 0, "-", "register"], [315, 0, 0, "-", "toy_continuous_problem"]], "poli.objective_repository.toy_continuous_problem.definitions": [[295, 5, 1, "", "ackley_function_01"], [296, 5, 1, "", "alpine_01"], [297, 5, 1, "", "alpine_02"], [298, 5, 1, "", "bent_cigar"], [299, 5, 1, "", "brown"], [300, 5, 1, "", "camelback_2d"], [301, 5, 1, "", "chung_reynolds"], [302, 5, 1, "", "cosine_mixture"], [303, 5, 1, "", "cross_in_tray"], [304, 5, 1, "", "deb_01"], [305, 5, 1, "", "deb_02"], [306, 5, 1, "", "deflected_corrugated_spring"], [307, 5, 1, "", "easom"], [308, 5, 1, "", "egg_holder"], [309, 5, 1, "", "shifted_sphere"], [310, 5, 1, "", "styblinski_tang"]], "poli.objective_repository.toy_continuous_problem.register": [[313, 1, 1, "", "ToyContinuousBlackBox"], [314, 1, 1, "", "ToyContinuousProblemFactory"]], "poli.objective_repository.toy_continuous_problem.register.ToyContinuousBlackBox": [[313, 2, 1, "", "__init__"], [313, 2, 1, "", "_black_box"], [313, 3, 1, "", "bounds"], [313, 3, 1, "", "embed_in"], [313, 3, 1, "", "function"], [313, 3, 1, "", "function_name"], [313, 3, 1, "", "n_dimensions"]], "poli.objective_repository.toy_continuous_problem.register.ToyContinuousProblemFactory": [[314, 2, 1, "", "__init__"]], "poli.objective_repository.toy_continuous_problem.toy_continuous_problem": [[316, 1, 1, "", "ToyContinuousProblem"]], "poli.objective_repository.toy_continuous_problem.toy_continuous_problem.ToyContinuousProblem": [[316, 2, 1, "", "__init__"]], "poli.objective_repository.troglitazone_rediscovery": [[318, 0, 0, "-", "information"], [319, 0, 0, "-", "register"]], "poli.objective_repository.valsartan_smarts": [[321, 0, 0, "-", "information"], [322, 0, 0, "-", "register"]], "poli.objective_repository.white_noise": [[324, 0, 0, "-", "register"]], "poli.objective_repository.white_noise.register": [[325, 1, 1, "", "WhiteNoiseBlackBox"], [326, 1, 1, "", "WhiteNoiseProblemFactory"]], "poli.objective_repository.white_noise.register.WhiteNoiseBlackBox": [[325, 2, 1, "", "__init__"], [325, 2, 1, "", "_black_box"]], "poli.objective_repository.white_noise.register.WhiteNoiseProblemFactory": [[326, 2, 1, "", "__init__"]], "poli.objective_repository.zaleplon_mpo": [[328, 0, 0, "-", "information"], [329, 0, 0, "-", "register"]], "poli.tests": [[332, 0, 0, "-", "docs_examples"], [340, 0, 0, "-", "registry"], [363, 0, 0, "-", "test_minimal_working_example"], [365, 0, 0, "-", "test_seeding"], [367, 0, 0, "-", "util"]], "poli.tests.registry": [[341, 0, 0, "-", "basic_objectives"], [346, 0, 0, "-", "chemistry"], [348, 0, 0, "-", "proteins"], [352, 0, 0, "-", "test_basic_loop_without_create"], [354, 0, 0, "-", "test_force_isolation"], [355, 0, 0, "-", "test_instancing_black_boxes_alone"], [356, 0, 0, "-", "test_multi_objective_and_negative"], [358, 0, 0, "-", "toy_continuous_problems"]], "poli.tests.registry.basic_objectives": [[342, 0, 0, "-", "test_basic_objectives"]], "poli.tests.registry.basic_objectives.test_basic_objectives": [[343, 5, 1, "", "test_registering_aloha"], [344, 5, 1, "", "test_registering_white_noise"]], "poli.tests.registry.toy_continuous_problems": [[359, 0, 0, "-", "test_embedding_problems_into_higher_dims"]], "poli.tests.registry.toy_continuous_problems.test_embedding_problems_into_higher_dims": [[360, 5, 1, "", "test_embed_camelback_into_high_dimensions"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"]}, "titleterms": {"poli": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 374, 375, 376, 413, 414, 417], "core": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 412], "abstract_black_box": [2, 3, 4], "abstractblackbox": 3, "negativeblackbox": 4, "abstract_problem_factori": [6, 7, 8], "abstractproblemfactori": 7, "metaproblemfactori": 8, "chemistri": [10, 11, 12, 13, 43, 44, 45, 46, 47, 48, 49, 346, 347], "tdc_black_box": [11, 12], "tdcblackbox": 12, "except": [14, 15, 16], "budgetexhaustedexcept": 15, "poliexcept": 16, "multi_objective_black_box": [17, 18], "multiobjectiveblackbox": 18, "problem_setup_inform": [20, 21], "problemsetupinform": 21, "protein": [22, 23, 24, 25, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 348, 349, 350, 351, 376, 378, 381, 389, 390, 391, 410], "foldx_black_box": [23, 24], "foldxblackbox": 24, "registri": [26, 27, 28, 29, 30, 31, 32, 33, 34, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 417], "delete_observer_run_script": 27, "delete_problem": 28, "get_problem_factori": 29, "get_problem": 30, "register_problem": 31, "register_problem_from_repositori": 32, "set_observ": 33, "set_observer_run_script": 34, "util": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 367, 368, 369], "abstract_observ": [36, 37], "abstractobserv": 37, "align": [38, 39], "is_align": 39, "batch": [40, 41, 42, 411], "batch_input": [41, 42], "string_to_molecul": [44, 45, 46, 47, 48, 49], "selfies_to_molecul": 45, "smiles_to_molecul": 46, "strings_to_molecul": 47, "translate_selfies_to_smil": 48, "translate_smiles_to_selfi": 49, "external_observ": [50, 51], "externalobserv": 51, "file": [52, 53, 54, 55, 56, 57, 378, 387, 390, 391], "download_files_from_github": [53, 54, 55], "download_file_from_github_repositori": 54, "get_sha_for_tag": 55, "integr": [56, 57], "compute_md5_from_filepath": 57, "inter_process_commun": [58, 59, 60, 61], "process_wrapp": [59, 60, 61], "processwrapp": 60, "get_connect": 61, "objective_manag": [67, 68, 69, 70], "make_run_script": [68, 69, 70], "make_observer_script": 69, "observer_wrapp": [71, 72], "start_observer_process": 72, "default": 74, "foldx": [75, 76, 377, 389, 390, 391], "foldxinterfac": 76, "mutat": [77, 78, 79, 80, 378, 410, 424], "edits_between_str": 78, "find_closest_wildtype_pdb_file_to_mut": 79, "mutations_from_wildtype_residues_and_mut": 80, "pdb_pars": [81, 82, 83, 84], "parse_pdb_as_residue_str": 82, "parse_pdb_as_residu": 83, "parse_pdb_as_structur": 84, "rasp": [85, 86, 87, 88, 89, 90, 91, 92, 93, 246, 247, 248, 249], "inner_rasp": [86, 87, 88, 89, 90, 91], "prismdata": 87, "cavity_model": 88, "helper": 89, "run_pipelin": 90, "visual": 91, "load_model": 92, "rasp_interfac": 93, "seed": [94, 95, 96, 97], "seed_numpi": 96, "seed_python": 97, "object": [98, 99, 100, 101, 376, 381, 382, 403, 405, 407, 410, 414, 415, 416, 417], "dynamically_instanti": 99, "parse_factory_kwarg": 100, "run": [101, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 415, 418, 419, 422, 423, 424, 425], "objective_factori": [102, 103, 104, 105, 106], "externalblackbox": 103, "creat": [104, 133, 405, 414, 417], "load_config": 105, "start": [106, 375, 376], "objective_repositori": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329], "aloha": [111, 112, 113, 114, 382, 412, 416], "regist": [110, 112, 113, 114, 117, 120, 123, 127, 128, 129, 132, 136, 137, 138, 141, 145, 146, 147, 148, 149, 154, 155, 156, 161, 162, 163, 167, 168, 169, 201, 202, 203, 207, 208, 209, 212, 215, 218, 221, 224, 227, 230, 233, 237, 238, 239, 242, 245, 249, 252, 253, 254, 257, 258, 259, 262, 266, 267, 268, 271, 274, 289, 292, 312, 313, 314, 319, 322, 324, 325, 326, 329, 373, 409, 410, 416, 417], "alohablackbox": 113, "alohaproblemfactori": 114, "dockstr": [124, 125, 126, 127, 128, 129, 385], "dockstringblackbox": 128, "dockstringproblemfactori": 129, "drd3_dock": [133, 134, 135, 136, 137, 138], "prerequisit": [133, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 416], "instal": [133, 373, 375, 377, 387, 389], "autodock": [133, 387], "vina": [133, 387], "adfr": [133, 387], "suit": [133, 387], "poli__lambo": 133, "environ": [133, 373, 389, 417], "drd3blackbox": 137, "drd3problemfactori": 138, "foldx_rfp_lambo": [142, 143, 144, 145, 146, 147, 148, 149], "config": 146, "rfpwrapper": 147, "rfpwrapperfactori": 148, "get_config": 149, "foldx_sasa": [150, 151, 152, 153, 154, 155, 156], "foldx_util": [151, 158], "foldxsasablackbox": 155, "foldxsasaproblemfactori": 156, "foldx_stabl": [157, 158, 159, 160, 161, 162, 163], "foldxstabilityblackbox": 162, "foldxstabilityproblemfactori": 163, "foldx_stability_and_sasa": [164, 165, 166, 167, 168, 169], "foldxstabilityandsasablackbox": 168, "foldxstabilityandsasaproblemfactori": 169, "gfp_cba": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "abstract_vae_wrapp": [171, 172], "abstractvaewrapp": 172, "cbas_alphabet_preprocess": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "convert_aas_to_idx_arrai": 174, "convert_idx_array_to_aa": 175, "convert_mutations_to_sequ": 176, "get_argmax": 177, "get_balaji_predict": 178, "get_experimental_x_i": 179, "get_gfp_x_y_aa": 180, "get_gfp_base_seq": 181, "get_sampl": 182, "one_hot_encode_aa": 183, "one_hot_encode_aa_arrai": 184, "one_hot_encode_dna": 185, "partition_data": 186, "read_gfp_data": 187, "cbas_wrapp": [188, 189, 190, 191], "cbasvaewrapp": 189, "convertedtorchvaedecod": 190, "convertedtorchvaeencod": 191, "gfp_gp": 192, "make_va": [195, 196, 197, 198, 199, 200], "baseva": 196, "simpleva": 197, "build_va": 198, "identity_loss": 199, "summed_categorical_crossentropi": 200, "gfpcbasblackbox": 202, "gfpcbasproblemfactori": 203, "gfp_select": [204, 205, 206, 207, 208, 209], "gfpblackbox": 208, "gfpselectionproblemfactori": 209, "penalized_logp_lambo": [234, 235, 236, 237, 238, 239], "penalizedlogplamboblackbox": 238, "penalizedlogplamboproblemfactori": 239, "rdkit_logp": [250, 251, 252, 253, 254], "logpblackbox": 253, "logpproblemfactori": 254, "rdkit_q": [255, 256, 257, 258, 259], "qedblackbox": 258, "qedproblemfactori": 259, "rfp_foldx_stability_and_sasa": [260, 261, 262], "sa_tdc": [263, 264, 265, 266, 267, 268], "sablackbox": 267, "saproblemfactori": 268, "super_mario_bro": [275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289], "level_util": [277, 278, 279, 280, 281, 282, 283, 284, 285], "add_padding_to_level": 278, "clean_level": 279, "level_to_arrai": 280, "level_to_list": 281, "levels_to_onehot": 282, "onehot_to_level": 283, "tensor_to_sim_level": 284, "vector": 285, "model": [286, 287, 288], "vaemario": 287, "load_example_model": 288, "toy_continuous_problem": [293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 358, 359, 360, 361], "definit": [294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310], "ackley_function_01": 295, "alpine_01": 296, "alpine_02": 297, "bent_cigar": 298, "brown": 299, "camelback_2d": 300, "chung_reynold": 301, "cosine_mixtur": 302, "cross_in_trai": 303, "deb_01": 304, "deb_02": 305, "deflected_corrugated_spr": 306, "easom": 307, "egg_hold": 308, "shifted_spher": 309, "styblinski_tang": 310, "toycontinuousblackbox": 313, "toycontinuousproblemfactori": 314, "toycontinuousproblem": 316, "white_nois": [323, 324, 325, 326], "whitenoiseblackbox": 325, "whitenoiseproblemfactori": 326, "registered_object": 330, "test": [331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 373, 375], "docs_exampl": [332, 333, 334, 335, 336, 337, 338, 339], "test_objective_funct": [333, 334, 335, 336, 337, 338, 339], "test_aloha_exampl": 334, "test_logp_exampl": 335, "test_logp_example_using_str": 336, "test_qed_exampl": 337, "test_qed_example_using_str": 338, "test_white_noise_exampl": 339, "basic_object": [341, 342, 343, 344, 345], "test_basic_object": [342, 343, 344], "test_registering_aloha": 343, "test_registering_white_nois": 344, "test_budget_exhaust": 345, "test_chemistry_object": 347, "test_foldx": 349, "test_foldx_rfp_lambo": 350, "test_rasp": 351, "test_basic_loop_without_cr": 352, "test_force_isol": 354, "test_passing_array_of_str": 357, "test_embedding_problems_into_higher_dim": [359, 360], "test_embed_camelback_into_high_dimens": 360, "test_instancing_of_toy_continuous_problem": 361, "test_minimal_working_exampl": [363, 364], "test_seed": [365, 366], "test_seeding_in_white_nois": 366, "test_foldx_interfac": 368, "test_protein_util": 369, "api": 371, "document": 371, "refer": [372, 425], "ad": [373, 374], "new": [373, 374], "problem": [19, 373, 374, 376, 381, 405, 410, 411, 416, 417], "repositori": 373, "The": [373, 412, 414], "structur": 373, "A": 373, "gener": 373, "py": 373, "yml": 373, "why": [373, 417], "conda": [373, 375, 417], "your": [373, 375, 414, 417], "option": 415, "make": 387, "avail": [], "depend": 417, "ar": 378, "met": [], "submit": [373, 374], "pull": [373, 374], "request": [373, 374], "optim": [374, 376, 401, 410, 414, 416, 418, 421, 422, 425], "baselin": [374, 375], "an": [374, 411, 412, 416, 417], "abstract": [374, 411, 412], "solver": [374, 376, 410, 411, 414, 416], "exampl": [374, 411, 412, 417], "randommut": [374, 410, 411], "get": [375, 376], "first": 375, "script": 375, "us": [375, 376, 380, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 404, 406, 408, 410, 414], "librari": 376, "discret": [376, 417, 423], "function": [376, 381, 382, 403, 405, 407, 410, 414, 415, 416, 417], "black": [373, 376, 407, 415, 417], "box": [373, 376, 407, 415, 417], "toi": [376, 381, 405], "small": [376, 381], "molecul": [376, 381], "algorithm": [376, 420, 425], "cite": [376, 380, 383, 384, 386, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "other": [376, 378, 381], "relev": 376, "work": [376, 413], "contribut": 376, "comput": 378, "energi": 378, "singl": 378, "python": [378, 389, 417], "set": [378, 387], "up": 378, "folder": [378, 387], "download": [378, 387], "pdb": 378, "repair": [378, 390, 391], "what": [378, 411, 414, 415], "pars": 378, "wildtyp": 378, "defin": [378, 410, 411, 412, 417], "s": [373, 378, 417], "sasa": [378, 389], "score": 378, "conclus": [378, 412, 414, 416, 417], "rapid": 379, "stabil": [379, 389, 391, 410], "predict": 379, "how": [379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 413, 418, 419, 422, 423, 424, 425], "warn": 379, "further": 379, "read": [379, 415], "all": [381, 387, 412], "about": [380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 411, 418, 419, 422, 423, 424, 425], "drd3": 387, "dock": [386, 387], "tdc": [380, 383, 384, 386, 387, 388, 392, 393, 394, 396, 399, 400, 404, 406, 408], "add": [387, 417], "binari": 387, "path": [387, 417], "prepare_receptor": 387, "from": [], "sure": 387, "you": [387, 390, 391], "re": 387, "rfp": 389, "lambo": [389, 395], "we": [389, 390, 391], "can": [389, 390, 391], "automat": 389, "solvent": 390, "access": [390, 399], "penal": 395, "logp": [395, 397], "keyword": [], "argument": [], "log": [397, 412], "solubl": 397, "quantit": 398, "estim": 398, "druglik": 398, "qed": 398, "synthet": 399, "jump": 401, "super": 401, "mario": 401, "bro": 401, "therapeut": 402, "data": 402, "common": 402, "oracl": 402, "name": 403, "see": [403, 418, 423], "also": 403, "continu": [376, 405], "low": 405, "intrins": 405, "dimension": 405, "white": 407, "nois": 407, "observ": [409, 412], "isol": [62, 63, 64, 65, 66, 409, 415], "process": 409, "random": [410, 424], "mroug": 410, "check": 410, "result": 410, "poli_baselin": 411, "candid": 411, "want": 412, "more": [412, 415, 417, 418, 423], "complex": 412, "instanc": [65, 412, 416], "simpl": 412, "initi": 412, "put": 412, "togeth": 412, "coupl": 412, "queri": 412, "dive": 413, "deeper": 413, "doe": 413, "under": [413, 415], "hood": [413, 415], "content": [413, 414], "usual": 414, "develop": 414, "loop": 414, "identifi": 414, "own": 414, "when": [], "have": [], "right": [], "Is": 416, "factori": 417, "entir": 417, "need": 417, "where": 417, "thi": [401, 417], "call": 417, "bayesian": [418, 421, 422], "cma": 419, "es": 419, "graph": 420, "genet": 420, "latent": 421, "space": 421, "line": 422, "nsga": 423, "2": 423, "templat": 425, "abstract_isolated_funct": 5, "black_box_inform": 9, "tdc_isolated_funct": 13, "foldx_isolated_funct": 25, "external_black_box": 63, "external_funct": 64, "isolated_black_box": 66, "inform": [109, 116, 119, 122, 125, 131, 134, 140, 143, 152, 159, 165, 193, 205, 211, 214, 217, 220, 223, 226, 229, 232, 235, 241, 244, 247, 251, 256, 261, 264, 270, 273, 276, 291, 311, 318, 321, 328, 373, 407], "isolated_funct": [126, 135, 144, 153, 160, 166, 194, 206, 236, 248, 265, 373], "test_instancing_black_boxes_alon": 355, "specifi": 373, "__init__": 373, "happen": 415, "test_black_box_instanc": 353, "test_multi_objective_and_neg": 356, "test_core_promis": 362, "cluster": 401, "albuterol_similar": [108, 109, 110], "amlodipine_mpo": [115, 116, 117], "celecoxib_rediscoveri": [118, 119, 120], "deco_hop": [121, 122, 123], "drd2_dock": [130, 131, 132], "fexofenadine_mpo": [139, 140, 141], "gsk3_beta": [210, 211, 212], "isomer_c7h8n2o2": [213, 214, 215], "isomer_c9h10n2o2pf2cl": [216, 217, 218], "jnk3": [219, 220, 221], "median_1": [222, 223, 224], "median_2": [225, 226, 227], "mestranol_similar": [228, 229, 230], "osimetrinib_mpo": [231, 232, 233], "perindopril_mpo": [240, 241, 242], "ranolazine_mpo": [243, 244, 245], "scaffold_hop": [269, 270, 271], "sitagliptin_mpo": [272, 273, 274], "thiothixene_rediscoveri": [290, 291, 292], "troglitazone_rediscoveri": [317, 318, 319], "valsartan_smart": [320, 321, 322], "zaleplon_mpo": [327, 328, 329], "albuterol": 380, "similar": [380, 393], "drd2": 386, "gsk3\u03b2": 392, "mestranol": 393, "celecoxib": 384, "rediscoveri": [384, 404, 406], "thiothixen": 404, "troglitazon": 406, "amlodipin": 383, "mpo": [383, 388, 394, 396, 400, 408], "fexofenadin": 388, "osimetrinib": 394, "ranolazin": 396, "sitagliptin": 400, "zaleplon": 408}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 56}})